{"version":3,"sources":["common.ts","generator.ts","human.ts","humans.ts","incidents.ts","logger.ts","stats.ts","existence.ts","../node_modules/mixpanel-browser/dist/mixpanel.cjs.js","../package.json","tracker.ts","index.ts"],"names":["module","exports","name","version","description","author","email","private","homepage","repository","bugs","license","scripts","test","start","devDependencies","jest","prettier","typescript","svgSpriteOptions","include","collectCoverage","coverageThreshold","global","branches","functions","lines","statements","transform","moduleNameMapper","testRegex","moduleFileExtensions"],"mappings":"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","file":"source.0185639d.js","sourceRoot":"../source","sourcesContent":["import climate from \"./icons/climate.svg\";\nimport cyclone from \"./icons/cyclone.svg\";\nimport drought from \"./icons/drought.svg\";\nimport earthquake from \"./icons/earthquake.svg\";\nimport flood from \"./icons/flood.svg\";\nimport ice from \"./icons/ice.svg\";\nimport meteor from \"./icons/meteor.svg\";\nimport plague from \"./icons/plague.svg\";\nimport religion from \"./icons/religion.svg\";\nimport volcano from \"./icons/volcano.svg\";\nimport war from \"./icons/war.svg\";\n\nexport const simulationYearTime = (1 / 8) * 1000;\n\nexport enum PopulationStatus {\n  Extinct = \"extinct\",\n  Safe = \"safe\",\n  Struggling = \"struggling\",\n}\n\nexport interface ICatastrophe {\n  icon: string;\n  isPersistent?: boolean;\n  killMax: number;\n  killMin: number;\n  name: CatastropheName;\n}\n\nexport const CatastrophePersistence: number = 50;\n\nexport enum CatastropheName {\n  Climate = \"climate-warming\",\n  Cyclone = \"cyclone\",\n  Drought = \"drought\",\n  Earthquake = \"earthquake\",\n  Flood = \"flood\",\n  Ice = \"ice-age\",\n  Meteor = \"meteor\",\n  Plague = \"plague\",\n  Religion = \"religion\",\n  Volcano = \"volcano-eruption\",\n  War = \"war\",\n}\n\nexport const Catastrophes: ICatastrophe[] = [\n  {\n    // http://www.impactlab.org/news-insights/valuing-climate-change-mortality/\n    icon: climate,\n    isPersistent: true,\n    killMax: 17,\n    killMin: 12,\n    name: CatastropheName.Climate,\n  },\n  {\n    icon: cyclone,\n    killMax: 9,\n    killMin: 9,\n    name: CatastropheName.Cyclone,\n  },\n  {\n    // https://en.wikipedia.org/wiki/List_of_natural_disasters_by_death_toll\n    icon: drought,\n    killMax: 28,\n    killMin: 10,\n    name: CatastropheName.Drought,\n  },\n  {\n    // https://en.wikipedia.org/wiki/Lists_of_earthquakes\n    icon: earthquake,\n    killMax: 4,\n    killMin: 2,\n    name: CatastropheName.Earthquake,\n  },\n  {\n    icon: flood,\n    killMax: 6,\n    killMin: 3,\n    name: CatastropheName.Flood,\n  },\n  {\n    icon: ice,\n    isPersistent: true,\n    killMax: 33,\n    killMin: 11,\n    name: CatastropheName.Ice,\n  },\n  {\n    // https://en.wikipedia.org/wiki/Chicxulub_crater\n    icon: meteor,\n    killMax: 66,\n    killMin: 4,\n    name: CatastropheName.Meteor,\n  },\n  {\n    // https://en.wikipedia.org/wiki/Black_Death\n    // Black Death killed around 26% of world population\n    icon: plague,\n    isPersistent: true,\n    killMax: 26,\n    killMin: 4,\n    name: CatastropheName.Plague,\n  },\n  {\n    // https://rationalwiki.org/wiki/Death_toll_of_Christianity\n    // https://en.wikipedia.org/wiki/Indigenous_peoples_of_the_Americas\n    // https://en.wikipedia.org/wiki/Population_history_of_indigenous_peoples_of_the_Americas\n    // Colonization killed as much as 80-90% of indigenous population\n    // so I estimated it as 10% of world population and blame Christians\n    icon: religion,\n    isPersistent: true,\n    killMax: 10,\n    killMin: 2,\n    name: CatastropheName.Religion,\n  },\n  {\n    icon: volcano,\n    killMax: 6,\n    killMin: 4,\n    name: CatastropheName.Volcano,\n  },\n  {\n    // https://en.m.wikipedia.org/wiki/World_War_II_casualties\n    // https://en.m.wikipedia.org/wiki/Atrocities_in_the_Congo_Free_State\n    // WWII killed 3% of world population\n    icon: war,\n    isPersistent: true,\n    killMax: 9,\n    killMin: 3,\n    name: CatastropheName.War,\n  },\n];\n\nexport function getCatastrophe(name: CatastropheName): ICatastrophe | null {\n  return (\n    Catastrophes.find((catastrophe) => {\n      return catastrophe.name === name;\n    }) || null\n  );\n}\n\nexport function isYearMillenium(year: number): boolean {\n  if (year === 0) {\n    return false;\n  } else {\n    return year % 1000 === 0;\n  }\n}\n","class Generator {\n  public getRandomNumber(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  public getRandomPercent(): number {\n    return this.getRandomNumber(0, 100);\n  }\n\n  // returns capitalized two part name, e.g. \"N03murxt48 Ka9dpari\"\n  public getUniqueName(): string {\n    const firstName = Math.random().toString(36).substring(2);\n    const lastName = Date.now().toString(36);\n    return `${firstName} ${lastName}`.replace(/\\b\\w/g, (c: string) =>\n      c.toUpperCase()\n    );\n  }\n}\n\nexport const generator = new Generator();\n","import { generator } from \"./generator\";\n\nexport class Human {\n  // https://menstrual-cycle-calculator.com/chance-pregnant-unprotected-sex/\n  public static readonly pregnancyChance: number = 30 / 100;\n  // based on Paleolithic https://en.wikipedia.org/wiki/Life_expectancy\n  public static readonly maxAge: number = 54;\n  // https://en.wikipedia.org/wiki/Age_and_female_fertility\n  public static readonly pubertyAge: number = 12;\n  // https://en.wikipedia.org/wiki/Pregnancy_over_age_50\n  public static readonly menopauseAge: number = 72;\n  // The Framingham Heart Study\n  // https://sharecare.com/health/longevity/how-parents-lifespan-affect-lifespan\n  public static readonly lifespanInheritance: number = 6 / 100;\n  // https://revisesociology.com/2017/11/07/how-many-people-single/\n  public static readonly inRelationshipChance: number = 61 / 100;\n\n  // returns a % chance two given humans will fall in love and make a baby\n  public static getBabyChance(human1: Human, human2: Human): number {\n    if (human1.isAdult && human2.isAdult) {\n      return 100 * (Human.pregnancyChance * Human.inRelationshipChance);\n    } else {\n      return 0;\n    }\n  }\n\n  public age: number = 0;\n  public isAdult: boolean = false;\n  public isAlive: boolean = true;\n  public name: string;\n  public lifespan: number;\n\n  public constructor(parent1?: Human, parent2?: Human) {\n    this.name = generator.getUniqueName();\n    this.lifespan = this.generateLifespan(parent1, parent2);\n    // check if not born dead\n    this.checkIfAlive();\n  }\n\n  // increments the age by 1,\n  // checks if didn't die of old age and assigns to proper age group\n  public bumpAge(): void {\n    this.age++;\n    this.isAdult = this.age >= Human.pubertyAge;\n    this.checkIfAlive();\n  }\n\n  // generates lifespan based on random things and parents\n  private generateLifespan(parent1?: Human, parent2?: Human): number {\n    const randomLifespan = generator.getRandomNumber(0, Human.maxAge);\n    if (randomLifespan === 0) {\n      return 0;\n    } else if (parent1 instanceof Human && parent2 instanceof Human) {\n      return Math.floor(\n        Human.lifespanInheritance *\n          ((parent1.lifespan + parent2.lifespan) / 2) +\n          (1 - Human.lifespanInheritance) * randomLifespan\n      );\n    } else {\n      return randomLifespan;\n    }\n  }\n\n  private checkIfAlive(): void {\n    this.isAlive = this.age < this.lifespan;\n  }\n}\n","import { generator } from \"./generator\";\nimport { Human } from \"./human\";\n\nexport class Humans {\n  private population: Human[] = [];\n\n  public constructor(initialPopulation: number) {\n    this.generateInitialPopulation(initialPopulation);\n  }\n\n  public getTotalCount(): number {\n    return this.population.length;\n  }\n\n  public growByOneYear(): void {\n    for (const human of this.population) {\n      human.bumpAge();\n    }\n  }\n\n  // immediately removes X random humans from the population\n  public killRandomHumans(killCount: number): void {\n    if (killCount >= this.getTotalCount()) {\n      // wipe whole population\n      this.population = [];\n    } else {\n      for (let i = killCount; i >= 0; i--) {\n        this.population[this.getRandomIndex()] = this.population[\n          this.population.length - 1\n        ];\n        this.population.pop();\n      }\n    }\n  }\n\n  // removes humans that died from old age from the population\n  // returns the number of removed humans\n  public buryDead(): number {\n    const populationCountBefore = this.getTotalCount();\n    // keep only alive people in population\n    this.population = this.population.filter((human: Human): boolean => {\n      return human.isAlive;\n    });\n    return populationCountBefore - this.getTotalCount();\n  }\n\n  // finds a random mate for each human and if matched\n  // will create a new baby human\n  // returns the number of born humans\n  public makeLove(): number {\n    let bornCount = 0;\n\n    if (this.getTotalCount() <= 1) {\n      // one human can't make babies\n      return bornCount;\n    } else {\n      for (let i = this.population.length - 1; i >= 0; i--) {\n        const human = this.population[i];\n        // get other random human\n        const mate = this.getRandomHuman(i);\n        if (this.isLoveFruitful(human, mate)) {\n          const baby = new Human(human, mate);\n          this.population.push(baby);\n          bornCount++;\n        }\n      }\n    }\n    return bornCount;\n  }\n\n  public getHuman(index: number): Human {\n    return this.population[index];\n  }\n\n  // returns a random human, potentially other than given index\n  public getRandomHuman(otherThan?: number): Human {\n    let index = this.getRandomIndex();\n    while (index === otherThan) {\n      index = this.getRandomIndex();\n    }\n    return this.population[index];\n  }\n\n  private getRandomIndex(): number {\n    return generator.getRandomNumber(0, this.population.length - 1);\n  }\n\n  // checks if two humans are able to love each other and able to get pregnant\n  private isLoveFruitful(human1: Human, human2: Human): boolean {\n    return Human.getBabyChance(human1, human2) > generator.getRandomPercent();\n  }\n\n  private generateInitialPopulation(initialPopulation: number): void {\n    for (let i = 0; i < initialPopulation; i++) {\n      this.population.push(new Human());\n    }\n  }\n}\n","import { ICatastrophe, PopulationStatus } from \"./common\";\n\nexport interface ICatastropheIncidentData {\n  catastrophe: ICatastrophe | null;\n  year: number;\n}\nexport interface IGameOverIncidentData {\n  status: PopulationStatus;\n  year: number;\n}\nexport interface IPopulationIncidentData {\n  count: number;\n}\n\nexport enum IncidentName {\n  Catastrophe = \"catastrophe-occurred\",\n  GameStart = \"game-start\",\n  GameOver = \"game-over\",\n  Population = \"total-population-count-changed\",\n}\n\ntype IncidentData =\n  | ICatastropheIncidentData\n  | null\n  | IGameOverIncidentData\n  | IPopulationIncidentData;\n\nexport function listen(name: IncidentName, callback: any): () => void {\n  document.addEventListener(name, callback);\n  // return cancel function\n  return () => {\n    document.removeEventListener(name, callback);\n  };\n}\n\nexport function publish(name: IncidentName, data: IncidentData) {\n  document.dispatchEvent(\n    new CustomEvent<IncidentData>(name, { detail: data })\n  );\n}\n","import { simulationYearTime } from \"./common\";\nimport { IncidentName, listen } from \"./incidents\";\n\nclass Logger {\n  public output: HTMLElement | null = null;\n  private scrollingTimeoutId: number = 0;\n  private rowHeight: number = 0;\n  // flag to make sure it scrolls to end at the beginnig (bug on small screens)\n  private isFirstTime: boolean = true;\n  private readonly isPlayingClassName: string = \"is-playing\";\n  private readonly isOverClassName: string = \"is-over\";\n  private readonly isScrollingClassName: string = \"is-scrolling\";\n\n  public constructor() {\n    listen(IncidentName.GameStart, this.onGameStart.bind(this));\n    listen(IncidentName.GameOver, this.onGameOver.bind(this));\n  }\n\n  // adds given message to the body in new line\n  public log(message: string, withScroll: boolean = true): void {\n    this.verifyOutput();\n    if (this.output) {\n      // insertAdjacentHTML plus appendChild is fastest:\n      // https://jsperf.com/insertadjacenthtml-perf/28\n      const row = window.document.createElement(\"li\");\n      row.insertAdjacentHTML(\"beforeend\", message);\n      this.output.appendChild(row);\n      if (withScroll) {\n        this.rowHeight = row.offsetHeight;\n        this.scrollToEnd();\n      }\n    }\n  }\n\n  private scrollToEnd(): void {\n    if (\n      this.output &&\n      this.output.scrollIntoView &&\n      // autoscroll if scrolled to almost end of page\n      (this.isNearEnd() || this.isFirstTime)\n    ) {\n      this.isFirstTime = false;\n      this.output.scrollIntoView({\n        behavior: \"auto\",\n        block: \"end\",\n        inline: \"nearest\",\n      });\n      this.onScroll();\n    }\n  }\n\n  private isNearEnd(): boolean {\n    return (\n      window.document.body.offsetHeight -\n        (window.pageYOffset + window.innerHeight) <=\n      this.rowHeight * 2\n    );\n  }\n\n  private verifyOutput(): void {\n    if (!this.output) {\n      this.output = document.getElementById(\"log\");\n    }\n  }\n\n  private onGameStart(): void {\n    window.document.body.classList.add(this.isPlayingClassName);\n  }\n\n  private onGameOver(): void {\n    window.document.body.classList.remove(this.isPlayingClassName);\n    window.document.body.classList.add(this.isOverClassName);\n  }\n\n  private onScroll(): void {\n    window.document.body.classList.add(this.isScrollingClassName);\n    window.clearTimeout(this.scrollingTimeoutId);\n    this.scrollingTimeoutId = window.setTimeout(\n      this.onAfterScroll.bind(this),\n      simulationYearTime * 2\n    );\n  }\n\n  private onAfterScroll(): void {\n    window.document.body.classList.remove(this.isScrollingClassName);\n  }\n}\n\nexport const logger = new Logger();\n","import {\n  CatastropheName,\n  Catastrophes,\n  ICatastrophe,\n  isYearMillenium,\n} from \"./common\";\nimport {\n  ICatastropheIncidentData,\n  IncidentName,\n  IPopulationIncidentData,\n  listen,\n} from \"./incidents\";\n\nenum Achievement {\n  // A catastrophe that happened on a millenium.\n  MilleniumCatastrophe = \"A prophecy was fulfilled\",\n  // A catastrophe that lasted a decade.\n  DecadeLongCatastrophe = \"Through a decade of aggression\",\n  // No catastrophe happened for half a century.\n  HalfCenturyFree = \"Fifty summers of love\",\n}\n\ninterface IAllStats {\n  achievements: string[];\n  catastrophesCount: ICatastrophesCount;\n  catastrophesCountSum: number;\n  highestPopulation: number;\n  lowestPopulation: number;\n}\n\ntype ICatastrophesCount = {\n  [K in CatastropheName]: number;\n};\n\nclass Stats {\n  private achievements: Set<Achievement> = new Set();\n  private catastrophesCount: ICatastrophesCount = {\n    \"climate-warming\": 0,\n    cyclone: 0,\n    drought: 0,\n    earthquake: 0,\n    flood: 0,\n    \"ice-age\": 0,\n    meteor: 0,\n    plague: 0,\n    religion: 0,\n    \"volcano-eruption\": 0,\n    war: 0,\n  };\n  private catastrophesCountSum: number = 0;\n  private consecutiveCatastropheYears: number = 0;\n  private consecutiveFreeYears: number = 0;\n  private highestPopulation: number = 0;\n  private lowestPopulation: number = Infinity;\n\n  public constructor() {\n    Catastrophes.forEach((catastrophe: ICatastrophe) => {\n      this.catastrophesCount[catastrophe.name] = 0;\n    });\n    listen(IncidentName.Catastrophe, this.onCatastrophe.bind(this));\n    listen(IncidentName.Population, this.onPopulation.bind(this));\n  }\n\n  public getAll(): IAllStats {\n    return {\n      achievements: Array.from(this.achievements),\n      catastrophesCount: this.catastrophesCount,\n      catastrophesCountSum: this.catastrophesCountSum,\n      highestPopulation: this.highestPopulation,\n      lowestPopulation: this.lowestPopulation,\n    };\n  }\n\n  public getCatastrophePercentage(name: CatastropheName): number {\n    if (this.catastrophesCountSum === 0) {\n      return 0;\n    } else {\n      return Number(\n        (\n          (this.catastrophesCount[name] / this.catastrophesCountSum) *\n          100\n        ).toFixed(1)\n      );\n    }\n  }\n\n  public clear(): void {\n    Catastrophes.forEach((catastrophe: ICatastrophe) => {\n      this.catastrophesCount[catastrophe.name] = 0;\n    });\n    this.catastrophesCountSum = 0;\n    this.highestPopulation = 0;\n    this.lowestPopulation = Infinity;\n  }\n\n  // handles consecutiveCatastropheYears and counting catastrophes\n  private onCatastrophe(evt: CustomEvent<ICatastropheIncidentData>): void {\n    if (evt.detail.catastrophe === null) {\n      this.consecutiveCatastropheYears = 0;\n      this.consecutiveFreeYears++;\n\n      if (this.consecutiveFreeYears === 50) {\n        this.achievements.add(Achievement.HalfCenturyFree);\n      }\n    } else {\n      this.consecutiveFreeYears = 0;\n      this.catastrophesCount[evt.detail.catastrophe.name]++;\n      this.catastrophesCountSum++;\n      this.consecutiveCatastropheYears++;\n\n      if (this.consecutiveCatastropheYears === 10) {\n        this.achievements.add(Achievement.DecadeLongCatastrophe);\n      }\n      if (isYearMillenium(evt.detail.year)) {\n        this.achievements.add(Achievement.MilleniumCatastrophe);\n      }\n    }\n  }\n\n  private onPopulation(evt: CustomEvent<IPopulationIncidentData>): void {\n    this.highestPopulation = Math.max(this.highestPopulation, evt.detail.count);\n    this.lowestPopulation = Math.min(this.lowestPopulation, evt.detail.count);\n  }\n}\n\nexport const stats = new Stats();\n","import {\n  CatastrophePersistence,\n  Catastrophes,\n  ICatastrophe,\n  isYearMillenium,\n  PopulationStatus,\n  simulationYearTime,\n} from \"./common\";\nimport { generator } from \"./generator\";\nimport { Humans } from \"./humans\";\nimport death from \"./icons/death.svg\";\nimport life from \"./icons/life.svg\";\nimport skull from \"./icons/skull.svg\";\nimport { IncidentName, publish } from \"./incidents\";\nimport { logger } from \"./logger\";\nimport { stats } from \"./stats\";\n\nexport class Existence {\n  // https://en.wikipedia.org/wiki/Minimum_viable_population\n  private readonly initialPopulation: number = 4169;\n  private currentYear: number = 0;\n  private humans: Humans;\n  private isLoggingEnabled: boolean = false;\n  private lastYearCatastrophe: ICatastrophe | null = null;\n  private lifeIntervalId: number = 0;\n  private targetPopulation: number;\n\n  public constructor(targetPopulation: number, enableLogging: boolean) {\n    this.targetPopulation = targetPopulation;\n    this.isLoggingEnabled = enableLogging;\n\n    this.humans = new Humans(this.initialPopulation);\n\n    if (this.isLoggingEnabled) {\n      logger.log(\"Some humans appeared\", false);\n      this.logYear(0, null, 0);\n    }\n  }\n\n  public startLife(): void {\n    this.lifeIntervalId = window.setInterval(\n      this.simulateOneYear.bind(this),\n      simulationYearTime\n    );\n    publish(IncidentName.GameStart, null);\n  }\n\n  public simulateOneYear(): void {\n    // 1. add one year\n    this.bumpYear();\n\n    const initialCount = this.humans.getTotalCount();\n\n    // 2. people are born\n    const bornCount = this.humans.makeLove();\n\n    // 3. people die of old age\n    const buriedCount = this.humans.buryDead();\n\n    // 4. a catastrophe could happen\n    const currentCatastrophe = this.checkForCatastrophe();\n    const catastropheDeadCount = Math.abs(\n      this.humans.getTotalCount() + buriedCount - bornCount - initialCount\n    );\n    publish(IncidentName.Catastrophe, {\n      catastrophe: currentCatastrophe,\n      year: this.currentYear,\n    });\n    // store applied catastrophe for next year\n    this.lastYearCatastrophe = currentCatastrophe;\n\n    // 5. report on what happened\n    publish(IncidentName.Population, {\n      count: this.humans.getTotalCount(),\n    });\n    if (this.isLoggingEnabled) {\n      this.logYear(\n        bornCount,\n        currentCatastrophe,\n        buriedCount + catastropheDeadCount\n      );\n    }\n\n    // 6. check if game over\n    this.checkForGameOver();\n  }\n\n  public getPopulationStatus(): PopulationStatus {\n    if (this.humans.getTotalCount() === 0) {\n      return PopulationStatus.Extinct;\n    } else if (this.humans.getTotalCount() >= this.targetPopulation) {\n      return PopulationStatus.Safe;\n    } else {\n      return PopulationStatus.Struggling;\n    }\n  }\n\n  public getRandomCatastrophe(): ICatastrophe {\n    return Catastrophes[generator.getRandomNumber(0, Catastrophes.length - 1)];\n  }\n\n  private logYear(\n    bornCount: number,\n    catastrophe: ICatastrophe | null,\n    deadCount: number\n  ): void {\n    const messageParts: any[] = [];\n\n    // current population\n    const totalCount = this.humans.getTotalCount();\n    if (this.currentYear === 0) {\n      messageParts.push(`&middot;${totalCount}`);\n    } else if (deadCount > bornCount) {\n      messageParts.push(`<neg>&darr;${totalCount}</neg>`);\n    } else if (bornCount > deadCount) {\n      messageParts.push(`<pos>&uarr;${totalCount}</pos>`);\n    } else {\n      messageParts.push(`&middot;${totalCount}`);\n    }\n\n    // born count\n    messageParts.push(`<svg><use xlink:href=\"${life}\"/></svg>${bornCount}`);\n\n    // dead count with catastrophe\n    if (catastrophe === null) {\n      messageParts.push(`<svg><use xlink:href=\"${death}\"/></svg>${deadCount}`);\n    } else {\n      messageParts.push(\n        `<svg><use xlink:href=\"${catastrophe.icon}\"/></svg>${deadCount}`\n      );\n    }\n\n    // year\n    messageParts.push(`${this.currentYear}CE`);\n\n    // make a year with a catastrophe more pronounced\n    if (catastrophe !== null) {\n      messageParts.unshift(\"<em>\");\n      messageParts.push(\"</em>\");\n    }\n\n    // final message\n    logger.log(messageParts.join(\" \"));\n  }\n\n  private bumpYear(): void {\n    this.currentYear++;\n    this.humans.growByOneYear();\n  }\n\n  // kills % of population (if happens)\n  private checkForCatastrophe(): ICatastrophe | null {\n    if (\n      this.lastYearCatastrophe !== null &&\n      this.lastYearCatastrophe.isPersistent &&\n      CatastrophePersistence >= generator.getRandomPercent()\n    ) {\n      // a persistent catastrophe can last multiple years\n      this.applyCatastrophe(this.lastYearCatastrophe);\n      return this.lastYearCatastrophe;\n    } else if (Catastrophes.length >= generator.getRandomPercent()) {\n      // every catastrophe has 1% chance of happening\n      const randomCatastrophe = this.getRandomCatastrophe();\n      this.applyCatastrophe(randomCatastrophe);\n      return randomCatastrophe;\n    } else {\n      return null;\n    }\n  }\n\n  // drops a catastrophe upon the population\n  private applyCatastrophe(catastrophe: ICatastrophe): void {\n    const killPercentage = generator.getRandomNumber(\n      catastrophe.killMin,\n      catastrophe.killMax\n    );\n    let numberKilled = this.humans.getTotalCount() * (killPercentage / 100);\n    if (isYearMillenium(this.currentYear)) {\n      // double death toll for catastrophe that happens on a millenium\n      // it is possible that humans will get extinct by it\n      numberKilled *= 2;\n    }\n    this.humans.killRandomHumans(numberKilled);\n  }\n\n  private checkForGameOver(): void {\n    const status = this.getPopulationStatus();\n    if (\n      status === PopulationStatus.Extinct ||\n      status === PopulationStatus.Safe\n    ) {\n      window.clearInterval(this.lifeIntervalId);\n      this.gameOver();\n    }\n  }\n\n  private gameOver(): void {\n    const status = this.getPopulationStatus();\n    const allStats = stats.getAll();\n\n    if (this.isLoggingEnabled) {\n      if (status === PopulationStatus.Extinct) {\n        logger.log(\"All humans died…\");\n      } else if (status === PopulationStatus.Safe) {\n        logger.log(\"Humans are safe now\");\n      }\n      for (const achievement of allStats.achievements) {\n        logger.log(`<svg><use xlink:href=\"${skull}\"/></svg>${achievement}`);\n      }\n      logger.log(\"Game over\");\n    }\n\n    publish(IncidentName.GameOver, { status, year: this.currentYear });\n  }\n}\n","'use strict';\n\nvar Config = {\n    DEBUG: false,\n    LIB_VERSION: '2.37.0'\n};\n\n// since es6 imports are static and we run unit tests from the console, window won't be defined when importing this file\nvar window$1;\nif (typeof(window) === 'undefined') {\n    var loc = {\n        hostname: ''\n    };\n    window$1 = {\n        navigator: { userAgent: '' },\n        document: {\n            location: loc,\n            referrer: ''\n        },\n        screen: { width: 0, height: 0 },\n        location: loc\n    };\n} else {\n    window$1 = window;\n}\n\n/*\n * Saved references to long variable names, so that closure compiler can\n * minimize file size.\n */\n\nvar ArrayProto = Array.prototype;\nvar FuncProto = Function.prototype;\nvar ObjProto = Object.prototype;\nvar slice = ArrayProto.slice;\nvar toString = ObjProto.toString;\nvar hasOwnProperty = ObjProto.hasOwnProperty;\nvar windowConsole = window$1.console;\nvar navigator$1 = window$1.navigator;\nvar document$1 = window$1.document;\nvar windowOpera = window$1.opera;\nvar screen = window$1.screen;\nvar userAgent = navigator$1.userAgent;\nvar nativeBind = FuncProto.bind;\nvar nativeForEach = ArrayProto.forEach;\nvar nativeIndexOf = ArrayProto.indexOf;\nvar nativeMap = ArrayProto.map;\nvar nativeIsArray = Array.isArray;\nvar breaker = {};\nvar _ = {\n    trim: function(str) {\n        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\n        return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n    }\n};\n\n// Console override\nvar console$1 = {\n    /** @type {function(...*)} */\n    log: function() {\n        if (Config.DEBUG && !_.isUndefined(windowConsole) && windowConsole) {\n            try {\n                windowConsole.log.apply(windowConsole, arguments);\n            } catch (err) {\n                _.each(arguments, function(arg) {\n                    windowConsole.log(arg);\n                });\n            }\n        }\n    },\n    /** @type {function(...*)} */\n    error: function() {\n        if (Config.DEBUG && !_.isUndefined(windowConsole) && windowConsole) {\n            var args = ['Mixpanel error:'].concat(_.toArray(arguments));\n            try {\n                windowConsole.error.apply(windowConsole, args);\n            } catch (err) {\n                _.each(args, function(arg) {\n                    windowConsole.error(arg);\n                });\n            }\n        }\n    },\n    /** @type {function(...*)} */\n    critical: function() {\n        if (!_.isUndefined(windowConsole) && windowConsole) {\n            var args = ['Mixpanel error:'].concat(_.toArray(arguments));\n            try {\n                windowConsole.error.apply(windowConsole, args);\n            } catch (err) {\n                _.each(args, function(arg) {\n                    windowConsole.error(arg);\n                });\n            }\n        }\n    }\n};\n\nvar log_func_with_prefix = function(func, prefix) {\n    return function() {\n        arguments[0] = '[' + prefix + '] ' + arguments[0];\n        return func.apply(console$1, arguments);\n    };\n};\nvar console_with_prefix = function(prefix) {\n    return {\n        log: log_func_with_prefix(console$1.log, prefix),\n        error: log_func_with_prefix(console$1.error, prefix),\n        critical: log_func_with_prefix(console$1.critical, prefix)\n    };\n};\n\n\n// UNDERSCORE\n// Embed part of the Underscore Library\n_.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind) {\n        return nativeBind.apply(func, slice.call(arguments, 1));\n    }\n    if (!_.isFunction(func)) {\n        throw new TypeError();\n    }\n    args = slice.call(arguments, 2);\n    bound = function() {\n        if (!(this instanceof bound)) {\n            return func.apply(context, args.concat(slice.call(arguments)));\n        }\n        var ctor = {};\n        ctor.prototype = func.prototype;\n        var self = new ctor();\n        ctor.prototype = null;\n        var result = func.apply(self, args.concat(slice.call(arguments)));\n        if (Object(result) === result) {\n            return result;\n        }\n        return self;\n    };\n    return bound;\n};\n\n_.bind_instance_methods = function(obj) {\n    for (var func in obj) {\n        if (typeof(obj[func]) === 'function') {\n            obj[func] = _.bind(obj[func], obj);\n        }\n    }\n};\n\n/**\n * @param {*=} obj\n * @param {function(...*)=} iterator\n * @param {Object=} context\n */\n_.each = function(obj, iterator, context) {\n    if (obj === null || obj === undefined) {\n        return;\n    }\n    if (nativeForEach && obj.forEach === nativeForEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n        for (var i = 0, l = obj.length; i < l; i++) {\n            if (i in obj && iterator.call(context, obj[i], i, obj) === breaker) {\n                return;\n            }\n        }\n    } else {\n        for (var key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                if (iterator.call(context, obj[key], key, obj) === breaker) {\n                    return;\n                }\n            }\n        }\n    }\n};\n\n_.escapeHTML = function(s) {\n    var escaped = s;\n    if (escaped && _.isString(escaped)) {\n        escaped = escaped\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#039;');\n    }\n    return escaped;\n};\n\n_.extend = function(obj) {\n    _.each(slice.call(arguments, 1), function(source) {\n        for (var prop in source) {\n            if (source[prop] !== void 0) {\n                obj[prop] = source[prop];\n            }\n        }\n    });\n    return obj;\n};\n\n_.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n};\n\n// from a comment on http://dbj.org/dbj/?p=286\n// fails on only one very rare and deliberate custom object:\n// var bomb = { toString : undefined, valueOf: function(o) { return \"function BOMBA!\"; }};\n_.isFunction = function(f) {\n    try {\n        return /^\\s*\\bfunction\\b/.test(f);\n    } catch (x) {\n        return false;\n    }\n};\n\n_.isArguments = function(obj) {\n    return !!(obj && hasOwnProperty.call(obj, 'callee'));\n};\n\n_.toArray = function(iterable) {\n    if (!iterable) {\n        return [];\n    }\n    if (iterable.toArray) {\n        return iterable.toArray();\n    }\n    if (_.isArray(iterable)) {\n        return slice.call(iterable);\n    }\n    if (_.isArguments(iterable)) {\n        return slice.call(iterable);\n    }\n    return _.values(iterable);\n};\n\n_.map = function(arr, callback) {\n    if (nativeMap && arr.map === nativeMap) {\n        return arr.map(callback);\n    } else {\n        var results = [];\n        _.each(arr, function(item) {\n            results.push(callback(item));\n        });\n        return results;\n    }\n};\n\n_.keys = function(obj) {\n    var results = [];\n    if (obj === null) {\n        return results;\n    }\n    _.each(obj, function(value, key) {\n        results[results.length] = key;\n    });\n    return results;\n};\n\n_.values = function(obj) {\n    var results = [];\n    if (obj === null) {\n        return results;\n    }\n    _.each(obj, function(value) {\n        results[results.length] = value;\n    });\n    return results;\n};\n\n_.identity = function(value) {\n    return value;\n};\n\n_.include = function(obj, target) {\n    var found = false;\n    if (obj === null) {\n        return found;\n    }\n    if (nativeIndexOf && obj.indexOf === nativeIndexOf) {\n        return obj.indexOf(target) != -1;\n    }\n    _.each(obj, function(value) {\n        if (found || (found = (value === target))) {\n            return breaker;\n        }\n    });\n    return found;\n};\n\n_.includes = function(str, needle) {\n    return str.indexOf(needle) !== -1;\n};\n\n// Underscore Addons\n_.inherit = function(subclass, superclass) {\n    subclass.prototype = new superclass();\n    subclass.prototype.constructor = subclass;\n    subclass.superclass = superclass.prototype;\n    return subclass;\n};\n\n_.isObject = function(obj) {\n    return (obj === Object(obj) && !_.isArray(obj));\n};\n\n_.isEmptyObject = function(obj) {\n    if (_.isObject(obj)) {\n        for (var key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n};\n\n_.isUndefined = function(obj) {\n    return obj === void 0;\n};\n\n_.isString = function(obj) {\n    return toString.call(obj) == '[object String]';\n};\n\n_.isDate = function(obj) {\n    return toString.call(obj) == '[object Date]';\n};\n\n_.isNumber = function(obj) {\n    return toString.call(obj) == '[object Number]';\n};\n\n_.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n};\n\n_.encodeDates = function(obj) {\n    _.each(obj, function(v, k) {\n        if (_.isDate(v)) {\n            obj[k] = _.formatDate(v);\n        } else if (_.isObject(v)) {\n            obj[k] = _.encodeDates(v); // recurse\n        }\n    });\n    return obj;\n};\n\n_.timestamp = function() {\n    Date.now = Date.now || function() {\n        return +new Date;\n    };\n    return Date.now();\n};\n\n_.formatDate = function(d) {\n    // YYYY-MM-DDTHH:MM:SS in UTC\n    function pad(n) {\n        return n < 10 ? '0' + n : n;\n    }\n    return d.getUTCFullYear() + '-' +\n        pad(d.getUTCMonth() + 1) + '-' +\n        pad(d.getUTCDate()) + 'T' +\n        pad(d.getUTCHours()) + ':' +\n        pad(d.getUTCMinutes()) + ':' +\n        pad(d.getUTCSeconds());\n};\n\n_.safewrap = function(f) {\n    return function() {\n        try {\n            return f.apply(this, arguments);\n        } catch (e) {\n            console$1.critical('Implementation error. Please turn on debug and contact support@mixpanel.com.');\n            if (Config.DEBUG){\n                console$1.critical(e);\n            }\n        }\n    };\n};\n\n_.safewrap_class = function(klass, functions) {\n    for (var i = 0; i < functions.length; i++) {\n        klass.prototype[functions[i]] = _.safewrap(klass.prototype[functions[i]]);\n    }\n};\n\n_.safewrap_instance_methods = function(obj) {\n    for (var func in obj) {\n        if (typeof(obj[func]) === 'function') {\n            obj[func] = _.safewrap(obj[func]);\n        }\n    }\n};\n\n_.strip_empty_properties = function(p) {\n    var ret = {};\n    _.each(p, function(v, k) {\n        if (_.isString(v) && v.length > 0) {\n            ret[k] = v;\n        }\n    });\n    return ret;\n};\n\n/*\n * this function returns a copy of object after truncating it.  If\n * passed an Array or Object it will iterate through obj and\n * truncate all the values recursively.\n */\n_.truncate = function(obj, length) {\n    var ret;\n\n    if (typeof(obj) === 'string') {\n        ret = obj.slice(0, length);\n    } else if (_.isArray(obj)) {\n        ret = [];\n        _.each(obj, function(val) {\n            ret.push(_.truncate(val, length));\n        });\n    } else if (_.isObject(obj)) {\n        ret = {};\n        _.each(obj, function(val, key) {\n            ret[key] = _.truncate(val, length);\n        });\n    } else {\n        ret = obj;\n    }\n\n    return ret;\n};\n\n_.JSONEncode = (function() {\n    return function(mixed_val) {\n        var value = mixed_val;\n        var quote = function(string) {\n            var escapable = /[\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g; // eslint-disable-line no-control-regex\n            var meta = { // table of character substitutions\n                '\\b': '\\\\b',\n                '\\t': '\\\\t',\n                '\\n': '\\\\n',\n                '\\f': '\\\\f',\n                '\\r': '\\\\r',\n                '\"': '\\\\\"',\n                '\\\\': '\\\\\\\\'\n            };\n\n            escapable.lastIndex = 0;\n            return escapable.test(string) ?\n                '\"' + string.replace(escapable, function(a) {\n                    var c = meta[a];\n                    return typeof c === 'string' ? c :\n                        '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n                }) + '\"' :\n                '\"' + string + '\"';\n        };\n\n        var str = function(key, holder) {\n            var gap = '';\n            var indent = '    ';\n            var i = 0; // The loop counter.\n            var k = ''; // The member key.\n            var v = ''; // The member value.\n            var length = 0;\n            var mind = gap;\n            var partial = [];\n            var value = holder[key];\n\n            // If the value has a toJSON method, call it to obtain a replacement value.\n            if (value && typeof value === 'object' &&\n                typeof value.toJSON === 'function') {\n                value = value.toJSON(key);\n            }\n\n            // What happens next depends on the value's type.\n            switch (typeof value) {\n                case 'string':\n                    return quote(value);\n\n                case 'number':\n                    // JSON numbers must be finite. Encode non-finite numbers as null.\n                    return isFinite(value) ? String(value) : 'null';\n\n                case 'boolean':\n                case 'null':\n                    // If the value is a boolean or null, convert it to a string. Note:\n                    // typeof null does not produce 'null'. The case is included here in\n                    // the remote chance that this gets fixed someday.\n\n                    return String(value);\n\n                case 'object':\n                    // If the type is 'object', we might be dealing with an object or an array or\n                    // null.\n                    // Due to a specification blunder in ECMAScript, typeof null is 'object',\n                    // so watch out for that case.\n                    if (!value) {\n                        return 'null';\n                    }\n\n                    // Make an array to hold the partial results of stringifying this object value.\n                    gap += indent;\n                    partial = [];\n\n                    // Is the value an array?\n                    if (toString.apply(value) === '[object Array]') {\n                        // The value is an array. Stringify every element. Use null as a placeholder\n                        // for non-JSON values.\n\n                        length = value.length;\n                        for (i = 0; i < length; i += 1) {\n                            partial[i] = str(i, value) || 'null';\n                        }\n\n                        // Join all of the elements together, separated with commas, and wrap them in\n                        // brackets.\n                        v = partial.length === 0 ? '[]' :\n                            gap ? '[\\n' + gap +\n                            partial.join(',\\n' + gap) + '\\n' +\n                            mind + ']' :\n                                '[' + partial.join(',') + ']';\n                        gap = mind;\n                        return v;\n                    }\n\n                    // Iterate through all of the keys in the object.\n                    for (k in value) {\n                        if (hasOwnProperty.call(value, k)) {\n                            v = str(k, value);\n                            if (v) {\n                                partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                            }\n                        }\n                    }\n\n                    // Join all of the member texts together, separated with commas,\n                    // and wrap them in braces.\n                    v = partial.length === 0 ? '{}' :\n                        gap ? '{' + partial.join(',') + '' +\n                        mind + '}' : '{' + partial.join(',') + '}';\n                    gap = mind;\n                    return v;\n            }\n        };\n\n        // Make a fake root object containing our value under the key of ''.\n        // Return the result of stringifying the value.\n        return str('', {\n            '': value\n        });\n    };\n})();\n\n/**\n * From https://github.com/douglascrockford/JSON-js/blob/master/json_parse.js\n * Slightly modified to throw a real Error rather than a POJO\n */\n_.JSONDecode = (function() {\n    var at, // The index of the current character\n        ch, // The current character\n        escapee = {\n            '\"': '\"',\n            '\\\\': '\\\\',\n            '/': '/',\n            'b': '\\b',\n            'f': '\\f',\n            'n': '\\n',\n            'r': '\\r',\n            't': '\\t'\n        },\n        text,\n        error = function(m) {\n            var e = new SyntaxError(m);\n            e.at = at;\n            e.text = text;\n            throw e;\n        },\n        next = function(c) {\n            // If a c parameter is provided, verify that it matches the current character.\n            if (c && c !== ch) {\n                error('Expected \\'' + c + '\\' instead of \\'' + ch + '\\'');\n            }\n            // Get the next character. When there are no more characters,\n            // return the empty string.\n            ch = text.charAt(at);\n            at += 1;\n            return ch;\n        },\n        number = function() {\n            // Parse a number value.\n            var number,\n                string = '';\n\n            if (ch === '-') {\n                string = '-';\n                next('-');\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n            if (ch === '.') {\n                string += '.';\n                while (next() && ch >= '0' && ch <= '9') {\n                    string += ch;\n                }\n            }\n            if (ch === 'e' || ch === 'E') {\n                string += ch;\n                next();\n                if (ch === '-' || ch === '+') {\n                    string += ch;\n                    next();\n                }\n                while (ch >= '0' && ch <= '9') {\n                    string += ch;\n                    next();\n                }\n            }\n            number = +string;\n            if (!isFinite(number)) {\n                error('Bad number');\n            } else {\n                return number;\n            }\n        },\n\n        string = function() {\n            // Parse a string value.\n            var hex,\n                i,\n                string = '',\n                uffff;\n            // When parsing for string values, we must look for \" and \\ characters.\n            if (ch === '\"') {\n                while (next()) {\n                    if (ch === '\"') {\n                        next();\n                        return string;\n                    }\n                    if (ch === '\\\\') {\n                        next();\n                        if (ch === 'u') {\n                            uffff = 0;\n                            for (i = 0; i < 4; i += 1) {\n                                hex = parseInt(next(), 16);\n                                if (!isFinite(hex)) {\n                                    break;\n                                }\n                                uffff = uffff * 16 + hex;\n                            }\n                            string += String.fromCharCode(uffff);\n                        } else if (typeof escapee[ch] === 'string') {\n                            string += escapee[ch];\n                        } else {\n                            break;\n                        }\n                    } else {\n                        string += ch;\n                    }\n                }\n            }\n            error('Bad string');\n        },\n        white = function() {\n            // Skip whitespace.\n            while (ch && ch <= ' ') {\n                next();\n            }\n        },\n        word = function() {\n            // true, false, or null.\n            switch (ch) {\n                case 't':\n                    next('t');\n                    next('r');\n                    next('u');\n                    next('e');\n                    return true;\n                case 'f':\n                    next('f');\n                    next('a');\n                    next('l');\n                    next('s');\n                    next('e');\n                    return false;\n                case 'n':\n                    next('n');\n                    next('u');\n                    next('l');\n                    next('l');\n                    return null;\n            }\n            error('Unexpected \"' + ch + '\"');\n        },\n        value, // Placeholder for the value function.\n        array = function() {\n            // Parse an array value.\n            var array = [];\n\n            if (ch === '[') {\n                next('[');\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array; // empty array\n                }\n                while (ch) {\n                    array.push(value());\n                    white();\n                    if (ch === ']') {\n                        next(']');\n                        return array;\n                    }\n                    next(',');\n                    white();\n                }\n            }\n            error('Bad array');\n        },\n        object = function() {\n            // Parse an object value.\n            var key,\n                object = {};\n\n            if (ch === '{') {\n                next('{');\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object; // empty object\n                }\n                while (ch) {\n                    key = string();\n                    white();\n                    next(':');\n                    if (Object.hasOwnProperty.call(object, key)) {\n                        error('Duplicate key \"' + key + '\"');\n                    }\n                    object[key] = value();\n                    white();\n                    if (ch === '}') {\n                        next('}');\n                        return object;\n                    }\n                    next(',');\n                    white();\n                }\n            }\n            error('Bad object');\n        };\n\n    value = function() {\n        // Parse a JSON value. It could be an object, an array, a string,\n        // a number, or a word.\n        white();\n        switch (ch) {\n            case '{':\n                return object();\n            case '[':\n                return array();\n            case '\"':\n                return string();\n            case '-':\n                return number();\n            default:\n                return ch >= '0' && ch <= '9' ? number() : word();\n        }\n    };\n\n    // Return the json_parse function. It will have access to all of the\n    // above functions and variables.\n    return function(source) {\n        var result;\n\n        text = source;\n        at = 0;\n        ch = ' ';\n        result = value();\n        white();\n        if (ch) {\n            error('Syntax error');\n        }\n\n        return result;\n    };\n})();\n\n_.base64Encode = function(data) {\n    var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        enc = '',\n        tmp_arr = [];\n\n    if (!data) {\n        return data;\n    }\n\n    data = _.utf8Encode(data);\n\n    do { // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n\n        bits = o1 << 16 | o2 << 8 | o3;\n\n        h1 = bits >> 18 & 0x3f;\n        h2 = bits >> 12 & 0x3f;\n        h3 = bits >> 6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n    } while (i < data.length);\n\n    enc = tmp_arr.join('');\n\n    switch (data.length % 3) {\n        case 1:\n            enc = enc.slice(0, -2) + '==';\n            break;\n        case 2:\n            enc = enc.slice(0, -1) + '=';\n            break;\n    }\n\n    return enc;\n};\n\n_.utf8Encode = function(string) {\n    string = (string + '').replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n\n    var utftext = '',\n        start,\n        end;\n    var stringl = 0,\n        n;\n\n    start = end = 0;\n    stringl = string.length;\n\n    for (n = 0; n < stringl; n++) {\n        var c1 = string.charCodeAt(n);\n        var enc = null;\n\n        if (c1 < 128) {\n            end++;\n        } else if ((c1 > 127) && (c1 < 2048)) {\n            enc = String.fromCharCode((c1 >> 6) | 192, (c1 & 63) | 128);\n        } else {\n            enc = String.fromCharCode((c1 >> 12) | 224, ((c1 >> 6) & 63) | 128, (c1 & 63) | 128);\n        }\n        if (enc !== null) {\n            if (end > start) {\n                utftext += string.substring(start, end);\n            }\n            utftext += enc;\n            start = end = n + 1;\n        }\n    }\n\n    if (end > start) {\n        utftext += string.substring(start, string.length);\n    }\n\n    return utftext;\n};\n\n_.UUID = (function() {\n\n    // Time/ticks information\n    // 1*new Date() is a cross browser version of Date.now()\n    var T = function() {\n        var d = 1 * new Date(),\n            i = 0;\n\n        // this while loop figures how many browser ticks go by\n        // before 1*new Date() returns a new number, ie the amount\n        // of ticks that go by per millisecond\n        while (d == 1 * new Date()) {\n            i++;\n        }\n\n        return d.toString(16) + i.toString(16);\n    };\n\n    // Math.Random entropy\n    var R = function() {\n        return Math.random().toString(16).replace('.', '');\n    };\n\n    // User agent entropy\n    // This function takes the user agent string, and then xors\n    // together each sequence of 8 bytes.  This produces a final\n    // sequence of 8 bytes which it returns as hex.\n    var UA = function() {\n        var ua = userAgent,\n            i, ch, buffer = [],\n            ret = 0;\n\n        function xor(result, byte_array) {\n            var j, tmp = 0;\n            for (j = 0; j < byte_array.length; j++) {\n                tmp |= (buffer[j] << j * 8);\n            }\n            return result ^ tmp;\n        }\n\n        for (i = 0; i < ua.length; i++) {\n            ch = ua.charCodeAt(i);\n            buffer.unshift(ch & 0xFF);\n            if (buffer.length >= 4) {\n                ret = xor(ret, buffer);\n                buffer = [];\n            }\n        }\n\n        if (buffer.length > 0) {\n            ret = xor(ret, buffer);\n        }\n\n        return ret.toString(16);\n    };\n\n    return function() {\n        var se = (screen.height * screen.width).toString(16);\n        return (T() + '-' + R() + '-' + UA() + '-' + se + '-' + T());\n    };\n})();\n\n// _.isBlockedUA()\n// This is to block various web spiders from executing our JS and\n// sending false tracking data\n_.isBlockedUA = function(ua) {\n    if (/(google web preview|baiduspider|yandexbot|bingbot|googlebot|yahoo! slurp)/i.test(ua)) {\n        return true;\n    }\n    return false;\n};\n\n/**\n * @param {Object=} formdata\n * @param {string=} arg_separator\n */\n_.HTTPBuildQuery = function(formdata, arg_separator) {\n    var use_val, use_key, tmp_arr = [];\n\n    if (_.isUndefined(arg_separator)) {\n        arg_separator = '&';\n    }\n\n    _.each(formdata, function(val, key) {\n        use_val = encodeURIComponent(val.toString());\n        use_key = encodeURIComponent(key);\n        tmp_arr[tmp_arr.length] = use_key + '=' + use_val;\n    });\n\n    return tmp_arr.join(arg_separator);\n};\n\n_.getQueryParam = function(url, param) {\n    // Expects a raw URL\n\n    param = param.replace(/[[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\n    var regexS = '[\\\\?&]' + param + '=([^&#]*)',\n        regex = new RegExp(regexS),\n        results = regex.exec(url);\n    if (results === null || (results && typeof(results[1]) !== 'string' && results[1].length)) {\n        return '';\n    } else {\n        var result = results[1];\n        try {\n            result = decodeURIComponent(result);\n        } catch(err) {\n            console$1.error('Skipping decoding for malformed query param: ' + result);\n        }\n        return result.replace(/\\+/g, ' ');\n    }\n};\n\n_.getHashParam = function(hash, param) {\n    var matches = hash.match(new RegExp(param + '=([^&]*)'));\n    return matches ? matches[1] : null;\n};\n\n// _.cookie\n// Methods partially borrowed from quirksmode.org/js/cookies.html\n_.cookie = {\n    get: function(name) {\n        var nameEQ = name + '=';\n        var ca = document$1.cookie.split(';');\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) == ' ') {\n                c = c.substring(1, c.length);\n            }\n            if (c.indexOf(nameEQ) === 0) {\n                return decodeURIComponent(c.substring(nameEQ.length, c.length));\n            }\n        }\n        return null;\n    },\n\n    parse: function(name) {\n        var cookie;\n        try {\n            cookie = _.JSONDecode(_.cookie.get(name)) || {};\n        } catch (err) {\n            // noop\n        }\n        return cookie;\n    },\n\n    set_seconds: function(name, value, seconds, is_cross_subdomain, is_secure, is_cross_site, domain_override) {\n        var cdomain = '',\n            expires = '',\n            secure = '';\n\n        if (domain_override) {\n            cdomain = '; domain=' + domain_override;\n        } else if (is_cross_subdomain) {\n            var domain = extract_domain(document$1.location.hostname);\n            cdomain = domain ? '; domain=.' + domain : '';\n        }\n\n        if (seconds) {\n            var date = new Date();\n            date.setTime(date.getTime() + (seconds * 1000));\n            expires = '; expires=' + date.toGMTString();\n        }\n\n        if (is_cross_site) {\n            is_secure = true;\n            secure = '; SameSite=None';\n        }\n        if (is_secure) {\n            secure += '; secure';\n        }\n\n        document$1.cookie = name + '=' + encodeURIComponent(value) + expires + '; path=/' + cdomain + secure;\n    },\n\n    set: function(name, value, days, is_cross_subdomain, is_secure, is_cross_site, domain_override) {\n        var cdomain = '', expires = '', secure = '';\n\n        if (domain_override) {\n            cdomain = '; domain=' + domain_override;\n        } else if (is_cross_subdomain) {\n            var domain = extract_domain(document$1.location.hostname);\n            cdomain = domain ? '; domain=.' + domain : '';\n        }\n\n        if (days) {\n            var date = new Date();\n            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n            expires = '; expires=' + date.toGMTString();\n        }\n\n        if (is_cross_site) {\n            is_secure = true;\n            secure = '; SameSite=None';\n        }\n        if (is_secure) {\n            secure += '; secure';\n        }\n\n        var new_cookie_val = name + '=' + encodeURIComponent(value) + expires + '; path=/' + cdomain + secure;\n        document$1.cookie = new_cookie_val;\n        return new_cookie_val;\n    },\n\n    remove: function(name, is_cross_subdomain, domain_override) {\n        _.cookie.set(name, '', -1, is_cross_subdomain, false, false, domain_override);\n    }\n};\n\nvar _localStorageSupported = null;\nvar localStorageSupported = function(storage, forceCheck) {\n    if (_localStorageSupported !== null && !forceCheck) {\n        return _localStorageSupported;\n    }\n\n    var supported = true;\n    try {\n        storage = storage || window.localStorage;\n        var key = '__mplss_' + cheap_guid(8),\n            val = 'xyz';\n        storage.setItem(key, val);\n        if (storage.getItem(key) !== val) {\n            supported = false;\n        }\n        storage.removeItem(key);\n    } catch (err) {\n        supported = false;\n    }\n\n    _localStorageSupported = supported;\n    return supported;\n};\n\n// _.localStorage\n_.localStorage = {\n    is_supported: function(force_check) {\n        var supported = localStorageSupported(null, force_check);\n        if (!supported) {\n            console$1.error('localStorage unsupported; falling back to cookie store');\n        }\n        return supported;\n    },\n\n    error: function(msg) {\n        console$1.error('localStorage error: ' + msg);\n    },\n\n    get: function(name) {\n        try {\n            return window.localStorage.getItem(name);\n        } catch (err) {\n            _.localStorage.error(err);\n        }\n        return null;\n    },\n\n    parse: function(name) {\n        try {\n            return _.JSONDecode(_.localStorage.get(name)) || {};\n        } catch (err) {\n            // noop\n        }\n        return null;\n    },\n\n    set: function(name, value) {\n        try {\n            window.localStorage.setItem(name, value);\n        } catch (err) {\n            _.localStorage.error(err);\n        }\n    },\n\n    remove: function(name) {\n        try {\n            window.localStorage.removeItem(name);\n        } catch (err) {\n            _.localStorage.error(err);\n        }\n    }\n};\n\n_.register_event = (function() {\n    // written by Dean Edwards, 2005\n    // with input from Tino Zijdel - crisp@xs4all.nl\n    // with input from Carl Sverre - mail@carlsverre.com\n    // with input from Mixpanel\n    // http://dean.edwards.name/weblog/2005/10/add-event/\n    // https://gist.github.com/1930440\n\n    /**\n     * @param {Object} element\n     * @param {string} type\n     * @param {function(...*)} handler\n     * @param {boolean=} oldSchool\n     * @param {boolean=} useCapture\n     */\n    var register_event = function(element, type, handler, oldSchool, useCapture) {\n        if (!element) {\n            console$1.error('No valid element provided to register_event');\n            return;\n        }\n\n        if (element.addEventListener && !oldSchool) {\n            element.addEventListener(type, handler, !!useCapture);\n        } else {\n            var ontype = 'on' + type;\n            var old_handler = element[ontype]; // can be undefined\n            element[ontype] = makeHandler(element, handler, old_handler);\n        }\n    };\n\n    function makeHandler(element, new_handler, old_handlers) {\n        var handler = function(event) {\n            event = event || fixEvent(window.event);\n\n            // this basically happens in firefox whenever another script\n            // overwrites the onload callback and doesn't pass the event\n            // object to previously defined callbacks.  All the browsers\n            // that don't define window.event implement addEventListener\n            // so the dom_loaded handler will still be fired as usual.\n            if (!event) {\n                return undefined;\n            }\n\n            var ret = true;\n            var old_result, new_result;\n\n            if (_.isFunction(old_handlers)) {\n                old_result = old_handlers(event);\n            }\n            new_result = new_handler.call(element, event);\n\n            if ((false === old_result) || (false === new_result)) {\n                ret = false;\n            }\n\n            return ret;\n        };\n\n        return handler;\n    }\n\n    function fixEvent(event) {\n        if (event) {\n            event.preventDefault = fixEvent.preventDefault;\n            event.stopPropagation = fixEvent.stopPropagation;\n        }\n        return event;\n    }\n    fixEvent.preventDefault = function() {\n        this.returnValue = false;\n    };\n    fixEvent.stopPropagation = function() {\n        this.cancelBubble = true;\n    };\n\n    return register_event;\n})();\n\n\nvar TOKEN_MATCH_REGEX = new RegExp('^(\\\\w*)\\\\[(\\\\w+)([=~\\\\|\\\\^\\\\$\\\\*]?)=?\"?([^\\\\]\"]*)\"?\\\\]$');\n\n_.dom_query = (function() {\n    /* document.getElementsBySelector(selector)\n    - returns an array of element objects from the current document\n    matching the CSS selector. Selectors can contain element names,\n    class names and ids and can be nested. For example:\n\n    elements = document.getElementsBySelector('div#main p a.external')\n\n    Will return an array of all 'a' elements with 'external' in their\n    class attribute that are contained inside 'p' elements that are\n    contained inside the 'div' element which has id=\"main\"\n\n    New in version 0.4: Support for CSS2 and CSS3 attribute selectors:\n    See http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\n    Version 0.4 - Simon Willison, March 25th 2003\n    -- Works in Phoenix 0.5, Mozilla 1.3, Opera 7, Internet Explorer 6, Internet Explorer 5 on Windows\n    -- Opera 7 fails\n\n    Version 0.5 - Carl Sverre, Jan 7th 2013\n    -- Now uses jQuery-esque `hasClass` for testing class name\n    equality.  This fixes a bug related to '-' characters being\n    considered not part of a 'word' in regex.\n    */\n\n    function getAllChildren(e) {\n        // Returns all children of element. Workaround required for IE5/Windows. Ugh.\n        return e.all ? e.all : e.getElementsByTagName('*');\n    }\n\n    var bad_whitespace = /[\\t\\r\\n]/g;\n\n    function hasClass(elem, selector) {\n        var className = ' ' + selector + ' ';\n        return ((' ' + elem.className + ' ').replace(bad_whitespace, ' ').indexOf(className) >= 0);\n    }\n\n    function getElementsBySelector(selector) {\n        // Attempt to fail gracefully in lesser browsers\n        if (!document$1.getElementsByTagName) {\n            return [];\n        }\n        // Split selector in to tokens\n        var tokens = selector.split(' ');\n        var token, bits, tagName, found, foundCount, i, j, k, elements, currentContextIndex;\n        var currentContext = [document$1];\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i].replace(/^\\s+/, '').replace(/\\s+$/, '');\n            if (token.indexOf('#') > -1) {\n                // Token is an ID selector\n                bits = token.split('#');\n                tagName = bits[0];\n                var id = bits[1];\n                var element = document$1.getElementById(id);\n                if (!element || (tagName && element.nodeName.toLowerCase() != tagName)) {\n                    // element not found or tag with that ID not found, return false\n                    return [];\n                }\n                // Set currentContext to contain just this element\n                currentContext = [element];\n                continue; // Skip to next token\n            }\n            if (token.indexOf('.') > -1) {\n                // Token contains a class selector\n                bits = token.split('.');\n                tagName = bits[0];\n                var className = bits[1];\n                if (!tagName) {\n                    tagName = '*';\n                }\n                // Get elements matching tag, filter them for class selector\n                found = [];\n                foundCount = 0;\n                for (j = 0; j < currentContext.length; j++) {\n                    if (tagName == '*') {\n                        elements = getAllChildren(currentContext[j]);\n                    } else {\n                        elements = currentContext[j].getElementsByTagName(tagName);\n                    }\n                    for (k = 0; k < elements.length; k++) {\n                        found[foundCount++] = elements[k];\n                    }\n                }\n                currentContext = [];\n                currentContextIndex = 0;\n                for (j = 0; j < found.length; j++) {\n                    if (found[j].className &&\n                        _.isString(found[j].className) && // some SVG elements have classNames which are not strings\n                        hasClass(found[j], className)\n                    ) {\n                        currentContext[currentContextIndex++] = found[j];\n                    }\n                }\n                continue; // Skip to next token\n            }\n            // Code to deal with attribute selectors\n            var token_match = token.match(TOKEN_MATCH_REGEX);\n            if (token_match) {\n                tagName = token_match[1];\n                var attrName = token_match[2];\n                var attrOperator = token_match[3];\n                var attrValue = token_match[4];\n                if (!tagName) {\n                    tagName = '*';\n                }\n                // Grab all of the tagName elements within current context\n                found = [];\n                foundCount = 0;\n                for (j = 0; j < currentContext.length; j++) {\n                    if (tagName == '*') {\n                        elements = getAllChildren(currentContext[j]);\n                    } else {\n                        elements = currentContext[j].getElementsByTagName(tagName);\n                    }\n                    for (k = 0; k < elements.length; k++) {\n                        found[foundCount++] = elements[k];\n                    }\n                }\n                currentContext = [];\n                currentContextIndex = 0;\n                var checkFunction; // This function will be used to filter the elements\n                switch (attrOperator) {\n                    case '=': // Equality\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName) == attrValue);\n                        };\n                        break;\n                    case '~': // Match one of space seperated words\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).match(new RegExp('\\\\b' + attrValue + '\\\\b')));\n                        };\n                        break;\n                    case '|': // Match start with value followed by optional hyphen\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).match(new RegExp('^' + attrValue + '-?')));\n                        };\n                        break;\n                    case '^': // Match starts with value\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).indexOf(attrValue) === 0);\n                        };\n                        break;\n                    case '$': // Match ends with value - fails with \"Warning\" in Opera 7\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).lastIndexOf(attrValue) == e.getAttribute(attrName).length - attrValue.length);\n                        };\n                        break;\n                    case '*': // Match ends with value\n                        checkFunction = function(e) {\n                            return (e.getAttribute(attrName).indexOf(attrValue) > -1);\n                        };\n                        break;\n                    default:\n                        // Just test for existence of attribute\n                        checkFunction = function(e) {\n                            return e.getAttribute(attrName);\n                        };\n                }\n                currentContext = [];\n                currentContextIndex = 0;\n                for (j = 0; j < found.length; j++) {\n                    if (checkFunction(found[j])) {\n                        currentContext[currentContextIndex++] = found[j];\n                    }\n                }\n                // alert('Attribute Selector: '+tagName+' '+attrName+' '+attrOperator+' '+attrValue);\n                continue; // Skip to next token\n            }\n            // If we get here, token is JUST an element (not a class or ID selector)\n            tagName = token;\n            found = [];\n            foundCount = 0;\n            for (j = 0; j < currentContext.length; j++) {\n                elements = currentContext[j].getElementsByTagName(tagName);\n                for (k = 0; k < elements.length; k++) {\n                    found[foundCount++] = elements[k];\n                }\n            }\n            currentContext = found;\n        }\n        return currentContext;\n    }\n\n    return function(query) {\n        if (_.isElement(query)) {\n            return [query];\n        } else if (_.isObject(query) && !_.isUndefined(query.length)) {\n            return query;\n        } else {\n            return getElementsBySelector.call(this, query);\n        }\n    };\n})();\n\n_.info = {\n    campaignParams: function() {\n        var campaign_keywords = 'utm_source utm_medium utm_campaign utm_content utm_term'.split(' '),\n            kw = '',\n            params = {};\n        _.each(campaign_keywords, function(kwkey) {\n            kw = _.getQueryParam(document$1.URL, kwkey);\n            if (kw.length) {\n                params[kwkey] = kw;\n            }\n        });\n\n        return params;\n    },\n\n    searchEngine: function(referrer) {\n        if (referrer.search('https?://(.*)google.([^/?]*)') === 0) {\n            return 'google';\n        } else if (referrer.search('https?://(.*)bing.com') === 0) {\n            return 'bing';\n        } else if (referrer.search('https?://(.*)yahoo.com') === 0) {\n            return 'yahoo';\n        } else if (referrer.search('https?://(.*)duckduckgo.com') === 0) {\n            return 'duckduckgo';\n        } else {\n            return null;\n        }\n    },\n\n    searchInfo: function(referrer) {\n        var search = _.info.searchEngine(referrer),\n            param = (search != 'yahoo') ? 'q' : 'p',\n            ret = {};\n\n        if (search !== null) {\n            ret['$search_engine'] = search;\n\n            var keyword = _.getQueryParam(referrer, param);\n            if (keyword.length) {\n                ret['mp_keyword'] = keyword;\n            }\n        }\n\n        return ret;\n    },\n\n    /**\n     * This function detects which browser is running this script.\n     * The order of the checks are important since many user agents\n     * include key words used in later checks.\n     */\n    browser: function(user_agent, vendor, opera) {\n        vendor = vendor || ''; // vendor is undefined for at least IE9\n        if (opera || _.includes(user_agent, ' OPR/')) {\n            if (_.includes(user_agent, 'Mini')) {\n                return 'Opera Mini';\n            }\n            return 'Opera';\n        } else if (/(BlackBerry|PlayBook|BB10)/i.test(user_agent)) {\n            return 'BlackBerry';\n        } else if (_.includes(user_agent, 'IEMobile') || _.includes(user_agent, 'WPDesktop')) {\n            return 'Internet Explorer Mobile';\n        } else if (_.includes(user_agent, 'SamsungBrowser/')) {\n            // https://developer.samsung.com/internet/user-agent-string-format\n            return 'Samsung Internet';\n        } else if (_.includes(user_agent, 'Edge') || _.includes(user_agent, 'Edg/')) {\n            return 'Microsoft Edge';\n        } else if (_.includes(user_agent, 'FBIOS')) {\n            return 'Facebook Mobile';\n        } else if (_.includes(user_agent, 'Chrome')) {\n            return 'Chrome';\n        } else if (_.includes(user_agent, 'CriOS')) {\n            return 'Chrome iOS';\n        } else if (_.includes(user_agent, 'UCWEB') || _.includes(user_agent, 'UCBrowser')) {\n            return 'UC Browser';\n        } else if (_.includes(user_agent, 'FxiOS')) {\n            return 'Firefox iOS';\n        } else if (_.includes(vendor, 'Apple')) {\n            if (_.includes(user_agent, 'Mobile')) {\n                return 'Mobile Safari';\n            }\n            return 'Safari';\n        } else if (_.includes(user_agent, 'Android')) {\n            return 'Android Mobile';\n        } else if (_.includes(user_agent, 'Konqueror')) {\n            return 'Konqueror';\n        } else if (_.includes(user_agent, 'Firefox')) {\n            return 'Firefox';\n        } else if (_.includes(user_agent, 'MSIE') || _.includes(user_agent, 'Trident/')) {\n            return 'Internet Explorer';\n        } else if (_.includes(user_agent, 'Gecko')) {\n            return 'Mozilla';\n        } else {\n            return '';\n        }\n    },\n\n    /**\n     * This function detects which browser version is running this script,\n     * parsing major and minor version (e.g., 42.1). User agent strings from:\n     * http://www.useragentstring.com/pages/useragentstring.php\n     */\n    browserVersion: function(userAgent, vendor, opera) {\n        var browser = _.info.browser(userAgent, vendor, opera);\n        var versionRegexs = {\n            'Internet Explorer Mobile': /rv:(\\d+(\\.\\d+)?)/,\n            'Microsoft Edge': /Edge?\\/(\\d+(\\.\\d+)?)/,\n            'Chrome': /Chrome\\/(\\d+(\\.\\d+)?)/,\n            'Chrome iOS': /CriOS\\/(\\d+(\\.\\d+)?)/,\n            'UC Browser' : /(UCBrowser|UCWEB)\\/(\\d+(\\.\\d+)?)/,\n            'Safari': /Version\\/(\\d+(\\.\\d+)?)/,\n            'Mobile Safari': /Version\\/(\\d+(\\.\\d+)?)/,\n            'Opera': /(Opera|OPR)\\/(\\d+(\\.\\d+)?)/,\n            'Firefox': /Firefox\\/(\\d+(\\.\\d+)?)/,\n            'Firefox iOS': /FxiOS\\/(\\d+(\\.\\d+)?)/,\n            'Konqueror': /Konqueror:(\\d+(\\.\\d+)?)/,\n            'BlackBerry': /BlackBerry (\\d+(\\.\\d+)?)/,\n            'Android Mobile': /android\\s(\\d+(\\.\\d+)?)/,\n            'Samsung Internet': /SamsungBrowser\\/(\\d+(\\.\\d+)?)/,\n            'Internet Explorer': /(rv:|MSIE )(\\d+(\\.\\d+)?)/,\n            'Mozilla': /rv:(\\d+(\\.\\d+)?)/\n        };\n        var regex = versionRegexs[browser];\n        if (regex === undefined) {\n            return null;\n        }\n        var matches = userAgent.match(regex);\n        if (!matches) {\n            return null;\n        }\n        return parseFloat(matches[matches.length - 2]);\n    },\n\n    os: function() {\n        var a = userAgent;\n        if (/Windows/i.test(a)) {\n            if (/Phone/.test(a) || /WPDesktop/.test(a)) {\n                return 'Windows Phone';\n            }\n            return 'Windows';\n        } else if (/(iPhone|iPad|iPod)/.test(a)) {\n            return 'iOS';\n        } else if (/Android/.test(a)) {\n            return 'Android';\n        } else if (/(BlackBerry|PlayBook|BB10)/i.test(a)) {\n            return 'BlackBerry';\n        } else if (/Mac/i.test(a)) {\n            return 'Mac OS X';\n        } else if (/Linux/.test(a)) {\n            return 'Linux';\n        } else if (/CrOS/.test(a)) {\n            return 'Chrome OS';\n        } else {\n            return '';\n        }\n    },\n\n    device: function(user_agent) {\n        if (/Windows Phone/i.test(user_agent) || /WPDesktop/.test(user_agent)) {\n            return 'Windows Phone';\n        } else if (/iPad/.test(user_agent)) {\n            return 'iPad';\n        } else if (/iPod/.test(user_agent)) {\n            return 'iPod Touch';\n        } else if (/iPhone/.test(user_agent)) {\n            return 'iPhone';\n        } else if (/(BlackBerry|PlayBook|BB10)/i.test(user_agent)) {\n            return 'BlackBerry';\n        } else if (/Android/.test(user_agent)) {\n            return 'Android';\n        } else {\n            return '';\n        }\n    },\n\n    referringDomain: function(referrer) {\n        var split = referrer.split('/');\n        if (split.length >= 3) {\n            return split[2];\n        }\n        return '';\n    },\n\n    properties: function() {\n        return _.extend(_.strip_empty_properties({\n            '$os': _.info.os(),\n            '$browser': _.info.browser(userAgent, navigator$1.vendor, windowOpera),\n            '$referrer': document$1.referrer,\n            '$referring_domain': _.info.referringDomain(document$1.referrer),\n            '$device': _.info.device(userAgent)\n        }), {\n            '$current_url': window$1.location.href,\n            '$browser_version': _.info.browserVersion(userAgent, navigator$1.vendor, windowOpera),\n            '$screen_height': screen.height,\n            '$screen_width': screen.width,\n            'mp_lib': 'web',\n            '$lib_version': Config.LIB_VERSION,\n            '$insert_id': cheap_guid(),\n            'time': _.timestamp() / 1000 // epoch time in seconds\n        });\n    },\n\n    people_properties: function() {\n        return _.extend(_.strip_empty_properties({\n            '$os': _.info.os(),\n            '$browser': _.info.browser(userAgent, navigator$1.vendor, windowOpera)\n        }), {\n            '$browser_version': _.info.browserVersion(userAgent, navigator$1.vendor, windowOpera)\n        });\n    },\n\n    pageviewInfo: function(page) {\n        return _.strip_empty_properties({\n            'mp_page': page,\n            'mp_referrer': document$1.referrer,\n            'mp_browser': _.info.browser(userAgent, navigator$1.vendor, windowOpera),\n            'mp_platform': _.info.os()\n        });\n    }\n};\n\nvar cheap_guid = function(maxlen) {\n    var guid = Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10);\n    return maxlen ? guid.substring(0, maxlen) : guid;\n};\n\n/**\n * Check deterministically whether to include or exclude from a feature rollout/test based on the\n * given string and the desired percentage to include.\n * @param {String} str - string to run the check against (for instance a project's token)\n * @param {String} feature - name of feature (for inclusion in hash, to ensure different results\n * for different features)\n * @param {Number} percent_allowed - percentage chance that a given string will be included\n * @returns {Boolean} whether the given string should be included\n */\nvar determine_eligibility = _.safewrap(function(str, feature, percent_allowed) {\n    str = str + feature;\n\n    // Bernstein's hash: http://www.cse.yorku.ca/~oz/hash.html#djb2\n    var hash = 5381;\n    for (var i = 0; i < str.length; i++) {\n        hash = ((hash << 5) + hash) + str.charCodeAt(i);\n        hash = hash & hash;\n    }\n    var dart = (hash >>> 0) % 100;\n    return dart < percent_allowed;\n});\n\n// naive way to extract domain name (example.com) from full hostname (my.sub.example.com)\nvar SIMPLE_DOMAIN_MATCH_REGEX = /[a-z0-9][a-z0-9-]*\\.[a-z]+$/i;\n// this next one attempts to account for some ccSLDs, e.g. extracting oxford.ac.uk from www.oxford.ac.uk\nvar DOMAIN_MATCH_REGEX = /[a-z0-9][a-z0-9-]+\\.[a-z.]{2,6}$/i;\n/**\n * Attempts to extract main domain name from full hostname, using a few blunt heuristics. For\n * common TLDs like .com/.org that always have a simple SLD.TLD structure (example.com), we\n * simply extract the last two .-separated parts of the hostname (SIMPLE_DOMAIN_MATCH_REGEX).\n * For others, we attempt to account for short ccSLD+TLD combos (.ac.uk) with the legacy\n * DOMAIN_MATCH_REGEX (kept to maintain backwards compatibility with existing Mixpanel\n * integrations). The only _reliable_ way to extract domain from hostname is with an up-to-date\n * list like at https://publicsuffix.org/ so for cases that this helper fails at, the SDK\n * offers the 'cookie_domain' config option to set it explicitly.\n * @example\n * extract_domain('my.sub.example.com')\n * // 'example.com'\n */\nvar extract_domain = function(hostname) {\n    var domain_regex = DOMAIN_MATCH_REGEX;\n    var parts = hostname.split('.');\n    var tld = parts[parts.length - 1];\n    if (tld.length > 4 || tld === 'com' || tld === 'org') {\n        domain_regex = SIMPLE_DOMAIN_MATCH_REGEX;\n    }\n    var matches = hostname.match(domain_regex);\n    return matches ? matches[0] : '';\n};\n\nvar JSONStringify = null;\nvar JSONParse = null;\nif (typeof JSON !== 'undefined') {\n    JSONStringify = JSON.stringify;\n    JSONParse = JSON.parse;\n}\nJSONStringify = JSONStringify || _.JSONEncode;\nJSONParse = JSONParse || _.JSONDecode;\n\n// EXPORTS (for closure compiler)\n_['toArray']                = _.toArray;\n_['isObject']               = _.isObject;\n_['JSONEncode']             = _.JSONEncode;\n_['JSONDecode']             = _.JSONDecode;\n_['isBlockedUA']            = _.isBlockedUA;\n_['isEmptyObject']          = _.isEmptyObject;\n_['info']                   = _.info;\n_['info']['device']         = _.info.device;\n_['info']['browser']        = _.info.browser;\n_['info']['browserVersion'] = _.info.browserVersion;\n_['info']['properties']     = _.info.properties;\n\n/*\n * Get the className of an element, accounting for edge cases where element.className is an object\n * @param {Element} el - element to get the className of\n * @returns {string} the element's class\n */\nfunction getClassName(el) {\n    switch(typeof el.className) {\n        case 'string':\n            return el.className;\n        case 'object': // handle cases where className might be SVGAnimatedString or some other type\n            return el.className.baseVal || el.getAttribute('class') || '';\n        default: // future proof\n            return '';\n    }\n}\n\n/*\n * Get the direct text content of an element, protecting against sensitive data collection.\n * Concats textContent of each of the element's text node children; this avoids potential\n * collection of sensitive data that could happen if we used element.textContent and the\n * element had sensitive child elements, since element.textContent includes child content.\n * Scrubs values that look like they could be sensitive (i.e. cc or ssn number).\n * @param {Element} el - element to get the text of\n * @returns {string} the element's direct text content\n */\nfunction getSafeText(el) {\n    var elText = '';\n\n    if (shouldTrackElement(el) && el.childNodes && el.childNodes.length) {\n        _.each(el.childNodes, function(child) {\n            if (isTextNode(child) && child.textContent) {\n                elText += _.trim(child.textContent)\n                    // scrub potentially sensitive values\n                    .split(/(\\s+)/).filter(shouldTrackValue).join('')\n                    // normalize whitespace\n                    .replace(/[\\r\\n]/g, ' ').replace(/[ ]+/g, ' ')\n                    // truncate\n                    .substring(0, 255);\n            }\n        });\n    }\n\n    return _.trim(elText);\n}\n\n/*\n * Check whether an element has nodeType Node.ELEMENT_NODE\n * @param {Element} el - element to check\n * @returns {boolean} whether el is of the correct nodeType\n */\nfunction isElementNode(el) {\n    return el && el.nodeType === 1; // Node.ELEMENT_NODE - use integer constant for browser portability\n}\n\n/*\n * Check whether an element is of a given tag type.\n * Due to potential reference discrepancies (such as the webcomponents.js polyfill),\n * we want to match tagNames instead of specific references because something like\n * element === document.body won't always work because element might not be a native\n * element.\n * @param {Element} el - element to check\n * @param {string} tag - tag name (e.g., \"div\")\n * @returns {boolean} whether el is of the given tag type\n */\nfunction isTag(el, tag) {\n    return el && el.tagName && el.tagName.toLowerCase() === tag.toLowerCase();\n}\n\n/*\n * Check whether an element has nodeType Node.TEXT_NODE\n * @param {Element} el - element to check\n * @returns {boolean} whether el is of the correct nodeType\n */\nfunction isTextNode(el) {\n    return el && el.nodeType === 3; // Node.TEXT_NODE - use integer constant for browser portability\n}\n\n/*\n * Check whether a DOM event should be \"tracked\" or if it may contain sentitive data\n * using a variety of heuristics.\n * @param {Element} el - element to check\n * @param {Event} event - event to check\n * @returns {boolean} whether the event should be tracked\n */\nfunction shouldTrackDomEvent(el, event) {\n    if (!el || isTag(el, 'html') || !isElementNode(el)) {\n        return false;\n    }\n    var tag = el.tagName.toLowerCase();\n    switch (tag) {\n        case 'html':\n            return false;\n        case 'form':\n            return event.type === 'submit';\n        case 'input':\n            if (['button', 'submit'].indexOf(el.getAttribute('type')) === -1) {\n                return event.type === 'change';\n            } else {\n                return event.type === 'click';\n            }\n        case 'select':\n        case 'textarea':\n            return event.type === 'change';\n        default:\n            return event.type === 'click';\n    }\n}\n\n/*\n * Check whether a DOM element should be \"tracked\" or if it may contain sentitive data\n * using a variety of heuristics.\n * @param {Element} el - element to check\n * @returns {boolean} whether the element should be tracked\n */\nfunction shouldTrackElement(el) {\n    for (var curEl = el; curEl.parentNode && !isTag(curEl, 'body'); curEl = curEl.parentNode) {\n        var classes = getClassName(curEl).split(' ');\n        if (_.includes(classes, 'mp-sensitive') || _.includes(classes, 'mp-no-track')) {\n            return false;\n        }\n    }\n\n    if (_.includes(getClassName(el).split(' '), 'mp-include')) {\n        return true;\n    }\n\n    // don't send data from inputs or similar elements since there will always be\n    // a risk of clientside javascript placing sensitive data in attributes\n    if (\n        isTag(el, 'input') ||\n        isTag(el, 'select') ||\n        isTag(el, 'textarea') ||\n        el.getAttribute('contenteditable') === 'true'\n    ) {\n        return false;\n    }\n\n    // don't include hidden or password fields\n    var type = el.type || '';\n    if (typeof type === 'string') { // it's possible for el.type to be a DOM element if el is a form with a child input[name=\"type\"]\n        switch(type.toLowerCase()) {\n            case 'hidden':\n                return false;\n            case 'password':\n                return false;\n        }\n    }\n\n    // filter out data from fields that look like sensitive fields\n    var name = el.name || el.id || '';\n    if (typeof name === 'string') { // it's possible for el.name or el.id to be a DOM element if el is a form with a child input[name=\"name\"]\n        var sensitiveNameRegex = /^cc|cardnum|ccnum|creditcard|csc|cvc|cvv|exp|pass|pwd|routing|seccode|securitycode|securitynum|socialsec|socsec|ssn/i;\n        if (sensitiveNameRegex.test(name.replace(/[^a-zA-Z0-9]/g, ''))) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/*\n * Check whether a string value should be \"tracked\" or if it may contain sentitive data\n * using a variety of heuristics.\n * @param {string} value - string value to check\n * @returns {boolean} whether the element should be tracked\n */\nfunction shouldTrackValue(value) {\n    if (value === null || _.isUndefined(value)) {\n        return false;\n    }\n\n    if (typeof value === 'string') {\n        value = _.trim(value);\n\n        // check to see if input value looks like a credit card number\n        // see: https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9781449327453/ch04s20.html\n        var ccRegex = /^(?:(4[0-9]{12}(?:[0-9]{3})?)|(5[1-5][0-9]{14})|(6(?:011|5[0-9]{2})[0-9]{12})|(3[47][0-9]{13})|(3(?:0[0-5]|[68][0-9])[0-9]{11})|((?:2131|1800|35[0-9]{3})[0-9]{11}))$/;\n        if (ccRegex.test((value || '').replace(/[- ]/g, ''))) {\n            return false;\n        }\n\n        // check to see if input value looks like a social security number\n        var ssnRegex = /(^\\d{3}-?\\d{2}-?\\d{4}$)/;\n        if (ssnRegex.test(value)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nvar autotrack = {\n    _initializedTokens: [],\n\n    _previousElementSibling: function(el) {\n        if (el.previousElementSibling) {\n            return el.previousElementSibling;\n        } else {\n            do {\n                el = el.previousSibling;\n            } while (el && !isElementNode(el));\n            return el;\n        }\n    },\n\n    _loadScript: function(scriptUrlToLoad, callback) {\n        var scriptTag = document.createElement('script');\n        scriptTag.type = 'text/javascript';\n        scriptTag.src = scriptUrlToLoad;\n        scriptTag.onload = callback;\n\n        var scripts = document.getElementsByTagName('script');\n        if (scripts.length > 0) {\n            scripts[0].parentNode.insertBefore(scriptTag, scripts[0]);\n        } else {\n            document.body.appendChild(scriptTag);\n        }\n    },\n\n    _getPropertiesFromElement: function(elem) {\n        var props = {\n            'classes': getClassName(elem).split(' '),\n            'tag_name': elem.tagName.toLowerCase()\n        };\n\n        if (shouldTrackElement(elem)) {\n            _.each(elem.attributes, function(attr) {\n                if (shouldTrackValue(attr.value)) {\n                    props['attr__' + attr.name] = attr.value;\n                }\n            });\n        }\n\n        var nthChild = 1;\n        var nthOfType = 1;\n        var currentElem = elem;\n        while (currentElem = this._previousElementSibling(currentElem)) { // eslint-disable-line no-cond-assign\n            nthChild++;\n            if (currentElem.tagName === elem.tagName) {\n                nthOfType++;\n            }\n        }\n        props['nth_child'] = nthChild;\n        props['nth_of_type'] = nthOfType;\n\n        return props;\n    },\n\n    _getDefaultProperties: function(eventType) {\n        return {\n            '$event_type': eventType,\n            '$ce_version': 1,\n            '$host': window.location.host,\n            '$pathname': window.location.pathname\n        };\n    },\n\n    _extractCustomPropertyValue: function(customProperty) {\n        var propValues = [];\n        _.each(document.querySelectorAll(customProperty['css_selector']), function(matchedElem) {\n            var value;\n\n            if (['input', 'select'].indexOf(matchedElem.tagName.toLowerCase()) > -1) {\n                value = matchedElem['value'];\n            } else if (matchedElem['textContent']) {\n                value = matchedElem['textContent'];\n            }\n\n            if (shouldTrackValue(value)) {\n                propValues.push(value);\n            }\n        });\n        return propValues.join(', ');\n    },\n\n    _getCustomProperties: function(targetElementList) {\n        var props = {};\n        _.each(this._customProperties, function(customProperty) {\n            _.each(customProperty['event_selectors'], function(eventSelector) {\n                var eventElements = document.querySelectorAll(eventSelector);\n                _.each(eventElements, function(eventElement) {\n                    if (_.includes(targetElementList, eventElement) && shouldTrackElement(eventElement)) {\n                        props[customProperty['name']] = this._extractCustomPropertyValue(customProperty);\n                    }\n                }, this);\n            }, this);\n        }, this);\n        return props;\n    },\n\n    _getEventTarget: function(e) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Event/target#Compatibility_notes\n        if (typeof e.target === 'undefined') {\n            return e.srcElement;\n        } else {\n            return e.target;\n        }\n    },\n\n    _trackEvent: function(e, instance) {\n        /*** Don't mess with this code without running IE8 tests on it ***/\n        var target = this._getEventTarget(e);\n        if (isTextNode(target)) { // defeat Safari bug (see: http://www.quirksmode.org/js/events_properties.html)\n            target = target.parentNode;\n        }\n\n        if (shouldTrackDomEvent(target, e)) {\n            var targetElementList = [target];\n            var curEl = target;\n            while (curEl.parentNode && !isTag(curEl, 'body')) {\n                targetElementList.push(curEl.parentNode);\n                curEl = curEl.parentNode;\n            }\n\n            var elementsJson = [];\n            var href, explicitNoTrack = false;\n            _.each(targetElementList, function(el) {\n                var shouldTrackEl = shouldTrackElement(el);\n\n                // if the element or a parent element is an anchor tag\n                // include the href as a property\n                if (el.tagName.toLowerCase() === 'a') {\n                    href = el.getAttribute('href');\n                    href = shouldTrackEl && shouldTrackValue(href) && href;\n                }\n\n                // allow users to programatically prevent tracking of elements by adding class 'mp-no-track'\n                var classes = getClassName(el).split(' ');\n                if (_.includes(classes, 'mp-no-track')) {\n                    explicitNoTrack = true;\n                }\n\n                elementsJson.push(this._getPropertiesFromElement(el));\n            }, this);\n\n            if (explicitNoTrack) {\n                return false;\n            }\n\n            // only populate text content from target element (not parents)\n            // to prevent text within a sensitive element from being collected\n            // as part of a parent's el.textContent\n            var elementText;\n            var safeElementText = getSafeText(target);\n            if (safeElementText && safeElementText.length) {\n                elementText = safeElementText;\n            }\n\n            var props = _.extend(\n                this._getDefaultProperties(e.type),\n                {\n                    '$elements':  elementsJson,\n                    '$el_attr__href': href,\n                    '$el_text': elementText\n                },\n                this._getCustomProperties(targetElementList)\n            );\n\n            instance.track('$web_event', props);\n            return true;\n        }\n    },\n\n    // only reason is to stub for unit tests\n    // since you can't override window.location props\n    _navigate: function(href) {\n        window.location.href = href;\n    },\n\n    _addDomEventHandlers: function(instance) {\n        var handler = _.bind(function(e) {\n            e = e || window.event;\n            this._trackEvent(e, instance);\n        }, this);\n        _.register_event(document, 'submit', handler, false, true);\n        _.register_event(document, 'change', handler, false, true);\n        _.register_event(document, 'click', handler, false, true);\n    },\n\n    _customProperties: {},\n    init: function(instance) {\n        if (!(document && document.body)) {\n            console.log('document not ready yet, trying again in 500 milliseconds...');\n            var that = this;\n            setTimeout(function() { that.init(instance); }, 500);\n            return;\n        }\n\n        var token = instance.get_config('token');\n        if (this._initializedTokens.indexOf(token) > -1) {\n            console.log('autotrack already initialized for token \"' + token + '\"');\n            return;\n        }\n        this._initializedTokens.push(token);\n\n        if (!this._maybeLoadEditor(instance)) { // don't autotrack actions when the editor is enabled\n            var parseDecideResponse = _.bind(function(response) {\n                if (response && response['config'] && response['config']['enable_collect_everything'] === true) {\n\n                    if (response['custom_properties']) {\n                        this._customProperties = response['custom_properties'];\n                    }\n\n                    instance.track('$web_event', _.extend({\n                        '$title': document.title\n                    }, this._getDefaultProperties('pageview')));\n\n                    this._addDomEventHandlers(instance);\n\n                } else {\n                    instance['__autotrack_enabled'] = false;\n                }\n            }, this);\n\n            instance._send_request(\n                instance.get_config('api_host') + '/decide/', {\n                    'verbose': true,\n                    'version': '1',\n                    'lib': 'web',\n                    'token': token\n                },\n                {method: 'GET', transport: 'XHR'},\n                instance._prepare_callback(parseDecideResponse)\n            );\n        }\n    },\n\n    _editorParamsFromHash: function(instance, hash) {\n        var editorParams;\n        try {\n            var state = _.getHashParam(hash, 'state');\n            state = JSON.parse(decodeURIComponent(state));\n            var expiresInSeconds = _.getHashParam(hash, 'expires_in');\n            editorParams = {\n                'accessToken': _.getHashParam(hash, 'access_token'),\n                'accessTokenExpiresAt': (new Date()).getTime() + (Number(expiresInSeconds) * 1000),\n                'bookmarkletMode': !!state['bookmarkletMode'],\n                'projectId': state['projectId'],\n                'projectOwnerId': state['projectOwnerId'],\n                'projectToken': state['token'],\n                'readOnly': state['readOnly'],\n                'userFlags': state['userFlags'],\n                'userId': state['userId']\n            };\n            window.sessionStorage.setItem('editorParams', JSON.stringify(editorParams));\n\n            if (state['desiredHash']) {\n                window.location.hash = state['desiredHash'];\n            } else if (window.history) {\n                history.replaceState('', document.title, window.location.pathname + window.location.search); // completely remove hash\n            } else {\n                window.location.hash = ''; // clear hash (but leaves # unfortunately)\n            }\n        } catch (e) {\n            console.error('Unable to parse data from hash', e);\n        }\n        return editorParams;\n    },\n\n    /**\n     * To load the visual editor, we need an access token and other state. That state comes from one of three places:\n     * 1. In the URL hash params if the customer is using an old snippet\n     * 2. From session storage under the key `_mpcehash` if the snippet already parsed the hash\n     * 3. From session storage under the key `editorParams` if the editor was initialized on a previous page\n     */\n    _maybeLoadEditor: function(instance) {\n        try {\n            var parseFromUrl = false;\n            if (_.getHashParam(window.location.hash, 'state')) {\n                var state = _.getHashParam(window.location.hash, 'state');\n                state = JSON.parse(decodeURIComponent(state));\n                parseFromUrl = state['action'] === 'mpeditor';\n            }\n            var parseFromStorage = !!window.sessionStorage.getItem('_mpcehash');\n            var editorParams;\n\n            if (parseFromUrl) { // happens if they are initializing the editor using an old snippet\n                editorParams = this._editorParamsFromHash(instance, window.location.hash);\n            } else if (parseFromStorage) { // happens if they are initialized the editor and using the new snippet\n                editorParams = this._editorParamsFromHash(instance, window.sessionStorage.getItem('_mpcehash'));\n                window.sessionStorage.removeItem('_mpcehash');\n            } else { // get credentials from sessionStorage from a previous initialzation\n                editorParams = JSON.parse(window.sessionStorage.getItem('editorParams') || '{}');\n            }\n\n            if (editorParams['projectToken'] && instance.get_config('token') === editorParams['projectToken']) {\n                this._loadEditor(instance, editorParams);\n                return true;\n            } else {\n                return false;\n            }\n        } catch (e) {\n            return false;\n        }\n    },\n\n    _loadEditor: function(instance, editorParams) {\n        if (!window['_mpEditorLoaded']) { // only load the codeless event editor once, even if there are multiple instances of MixpanelLib\n            window['_mpEditorLoaded'] = true;\n            var editorUrl = instance.get_config('app_host')\n              + '/js-bundle/reports/collect-everything/editor.js?_ts='\n              + (new Date()).getTime();\n            this._loadScript(editorUrl, function() {\n                window['mp_load_editor'](editorParams);\n            });\n            return true;\n        }\n        return false;\n    },\n\n    // this is a mechanism to ramp up CE with no server-side interaction.\n    // when CE is active, every page load results in a decide request. we\n    // need to gently ramp this up so we don't overload decide. this decides\n    // deterministically if CE is enabled for this project by modding the char\n    // value of the project token.\n    enabledForProject: function(token, numBuckets, numEnabledBuckets) {\n        numBuckets = !_.isUndefined(numBuckets) ? numBuckets : 10;\n        numEnabledBuckets = !_.isUndefined(numEnabledBuckets) ? numEnabledBuckets : 10;\n        var charCodeSum = 0;\n        for (var i = 0; i < token.length; i++) {\n            charCodeSum += token.charCodeAt(i);\n        }\n        return (charCodeSum % numBuckets) < numEnabledBuckets;\n    },\n\n    isBrowserSupported: function() {\n        return _.isFunction(document.querySelectorAll);\n    }\n};\n\n_.bind_instance_methods(autotrack);\n_.safewrap_instance_methods(autotrack);\n\n/**\n * DomTracker Object\n * @constructor\n */\nvar DomTracker = function() {};\n\n\n// interface\nDomTracker.prototype.create_properties = function() {};\nDomTracker.prototype.event_handler = function() {};\nDomTracker.prototype.after_track_handler = function() {};\n\nDomTracker.prototype.init = function(mixpanel_instance) {\n    this.mp = mixpanel_instance;\n    return this;\n};\n\n/**\n * @param {Object|string} query\n * @param {string} event_name\n * @param {Object=} properties\n * @param {function=} user_callback\n */\nDomTracker.prototype.track = function(query, event_name, properties, user_callback) {\n    var that = this;\n    var elements = _.dom_query(query);\n\n    if (elements.length === 0) {\n        console$1.error('The DOM query (' + query + ') returned 0 elements');\n        return;\n    }\n\n    _.each(elements, function(element) {\n        _.register_event(element, this.override_event, function(e) {\n            var options = {};\n            var props = that.create_properties(properties, this);\n            var timeout = that.mp.get_config('track_links_timeout');\n\n            that.event_handler(e, this, options);\n\n            // in case the mixpanel servers don't get back to us in time\n            window.setTimeout(that.track_callback(user_callback, props, options, true), timeout);\n\n            // fire the tracking event\n            that.mp.track(event_name, props, that.track_callback(user_callback, props, options));\n        });\n    }, this);\n\n    return true;\n};\n\n/**\n * @param {function} user_callback\n * @param {Object} props\n * @param {boolean=} timeout_occured\n */\nDomTracker.prototype.track_callback = function(user_callback, props, options, timeout_occured) {\n    timeout_occured = timeout_occured || false;\n    var that = this;\n\n    return function() {\n        // options is referenced from both callbacks, so we can have\n        // a 'lock' of sorts to ensure only one fires\n        if (options.callback_fired) { return; }\n        options.callback_fired = true;\n\n        if (user_callback && user_callback(timeout_occured, props) === false) {\n            // user can prevent the default functionality by\n            // returning false from their callback\n            return;\n        }\n\n        that.after_track_handler(props, options, timeout_occured);\n    };\n};\n\nDomTracker.prototype.create_properties = function(properties, element) {\n    var props;\n\n    if (typeof(properties) === 'function') {\n        props = properties(element);\n    } else {\n        props = _.extend({}, properties);\n    }\n\n    return props;\n};\n\n/**\n * LinkTracker Object\n * @constructor\n * @extends DomTracker\n */\nvar LinkTracker = function() {\n    this.override_event = 'click';\n};\n_.inherit(LinkTracker, DomTracker);\n\nLinkTracker.prototype.create_properties = function(properties, element) {\n    var props = LinkTracker.superclass.create_properties.apply(this, arguments);\n\n    if (element.href) { props['url'] = element.href; }\n\n    return props;\n};\n\nLinkTracker.prototype.event_handler = function(evt, element, options) {\n    options.new_tab = (\n        evt.which === 2 ||\n        evt.metaKey ||\n        evt.ctrlKey ||\n        element.target === '_blank'\n    );\n    options.href = element.href;\n\n    if (!options.new_tab) {\n        evt.preventDefault();\n    }\n};\n\nLinkTracker.prototype.after_track_handler = function(props, options) {\n    if (options.new_tab) { return; }\n\n    setTimeout(function() {\n        window.location = options.href;\n    }, 0);\n};\n\n/**\n * FormTracker Object\n * @constructor\n * @extends DomTracker\n */\nvar FormTracker = function() {\n    this.override_event = 'submit';\n};\n_.inherit(FormTracker, DomTracker);\n\nFormTracker.prototype.event_handler = function(evt, element, options) {\n    options.element = element;\n    evt.preventDefault();\n};\n\nFormTracker.prototype.after_track_handler = function(props, options) {\n    setTimeout(function() {\n        options.element.submit();\n    }, 0);\n};\n\n// eslint-disable-line camelcase\n\nvar logger$2 = console_with_prefix('lock');\n\n/**\n * SharedLock: a mutex built on HTML5 localStorage, to ensure that only one browser\n * window/tab at a time will be able to access shared resources.\n *\n * Based on the Alur and Taubenfeld fast lock\n * (http://www.cs.rochester.edu/research/synchronization/pseudocode/fastlock.html)\n * with an added timeout to ensure there will be eventual progress in the event\n * that a window is closed in the middle of the callback.\n *\n * Implementation based on the original version by David Wolever (https://github.com/wolever)\n * at https://gist.github.com/wolever/5fd7573d1ef6166e8f8c4af286a69432.\n *\n * @example\n * const myLock = new SharedLock('some-key');\n * myLock.withLock(function() {\n *   console.log('I hold the mutex!');\n * });\n *\n * @constructor\n */\nvar SharedLock = function(key, options) {\n    options = options || {};\n\n    this.storageKey = key;\n    this.storage = options.storage || window.localStorage;\n    this.pollIntervalMS = options.pollIntervalMS || 100;\n    this.timeoutMS = options.timeoutMS || 2000;\n};\n\n// pass in a specific pid to test contention scenarios; otherwise\n// it is chosen randomly for each acquisition attempt\nSharedLock.prototype.withLock = function(lockedCB, errorCB, pid) {\n    if (!pid && typeof errorCB !== 'function') {\n        pid = errorCB;\n        errorCB = null;\n    }\n\n    var i = pid || (new Date().getTime() + '|' + Math.random());\n    var startTime = new Date().getTime();\n\n    var key = this.storageKey;\n    var pollIntervalMS = this.pollIntervalMS;\n    var timeoutMS = this.timeoutMS;\n    var storage = this.storage;\n\n    var keyX = key + ':X';\n    var keyY = key + ':Y';\n    var keyZ = key + ':Z';\n\n    var reportError = function(err) {\n        errorCB && errorCB(err);\n    };\n\n    var delay = function(cb) {\n        if (new Date().getTime() - startTime > timeoutMS) {\n            logger$2.error('Timeout waiting for mutex on ' + key + '; clearing lock. [' + i + ']');\n            storage.removeItem(keyZ);\n            storage.removeItem(keyY);\n            loop();\n            return;\n        }\n        setTimeout(function() {\n            try {\n                cb();\n            } catch(err) {\n                reportError(err);\n            }\n        }, pollIntervalMS * (Math.random() + 0.1));\n    };\n\n    var waitFor = function(predicate, cb) {\n        if (predicate()) {\n            cb();\n        } else {\n            delay(function() {\n                waitFor(predicate, cb);\n            });\n        }\n    };\n\n    var getSetY = function() {\n        var valY = storage.getItem(keyY);\n        if (valY && valY !== i) { // if Y == i then this process already has the lock (useful for test cases)\n            return false;\n        } else {\n            storage.setItem(keyY, i);\n            if (storage.getItem(keyY) === i) {\n                return true;\n            } else {\n                if (!localStorageSupported(storage, true)) {\n                    throw new Error('localStorage support dropped while acquiring lock');\n                }\n                return false;\n            }\n        }\n    };\n\n    var loop = function() {\n        storage.setItem(keyX, i);\n\n        waitFor(getSetY, function() {\n            if (storage.getItem(keyX) === i) {\n                criticalSection();\n                return;\n            }\n\n            delay(function() {\n                if (storage.getItem(keyY) !== i) {\n                    loop();\n                    return;\n                }\n                waitFor(function() {\n                    return !storage.getItem(keyZ);\n                }, criticalSection);\n            });\n        });\n    };\n\n    var criticalSection = function() {\n        storage.setItem(keyZ, '1');\n        try {\n            lockedCB();\n        } finally {\n            storage.removeItem(keyZ);\n            if (storage.getItem(keyY) === i) {\n                storage.removeItem(keyY);\n            }\n            if (storage.getItem(keyX) === i) {\n                storage.removeItem(keyX);\n            }\n        }\n    };\n\n    try {\n        if (localStorageSupported(storage, true)) {\n            loop();\n        } else {\n            throw new Error('localStorage support check failed');\n        }\n    } catch(err) {\n        reportError(err);\n    }\n};\n\n// eslint-disable-line camelcase\n\nvar logger$1 = console_with_prefix('batch');\n\n/**\n * RequestQueue: queue for batching API requests with localStorage backup for retries.\n * Maintains an in-memory queue which represents the source of truth for the current\n * page, but also writes all items out to a copy in the browser's localStorage, which\n * can be read on subsequent pageloads and retried. For batchability, all the request\n * items in the queue should be of the same type (events, people updates, group updates)\n * so they can be sent in a single request to the same API endpoint.\n *\n * LocalStorage keying and locking: In order for reloads and subsequent pageloads of\n * the same site to access the same persisted data, they must share the same localStorage\n * key (for instance based on project token and queue type). Therefore access to the\n * localStorage entry is guarded by an asynchronous mutex (SharedLock) to prevent\n * simultaneously open windows/tabs from overwriting each other's data (which would lead\n * to data loss in some situations).\n * @constructor\n */\nvar RequestQueue = function(storageKey, options) {\n    options = options || {};\n    this.storageKey = storageKey;\n    this.storage = options.storage || window.localStorage;\n    this.lock = new SharedLock(storageKey, {storage: this.storage});\n\n    this.pid = options.pid || null; // pass pid to test out storage lock contention scenarios\n\n    this.memQueue = [];\n};\n\n/**\n * Add one item to queues (memory and localStorage). The queued entry includes\n * the given item along with an auto-generated ID and a \"flush-after\" timestamp.\n * It is expected that the item will be sent over the network and dequeued\n * before the flush-after time; if this doesn't happen it is considered orphaned\n * (e.g., the original tab where it was enqueued got closed before it could be\n * sent) and the item can be sent by any tab that finds it in localStorage.\n *\n * The final callback param is called with a param indicating success or\n * failure of the enqueue operation; it is asynchronous because the localStorage\n * lock is asynchronous.\n */\nRequestQueue.prototype.enqueue = function(item, flushInterval, cb) {\n    var queueEntry = {\n        'id': cheap_guid(),\n        'flushAfter': new Date().getTime() + flushInterval * 2,\n        'payload': item\n    };\n\n    this.lock.withLock(_.bind(function lockAcquired() {\n        var succeeded;\n        try {\n            var storedQueue = this.readFromStorage();\n            storedQueue.push(queueEntry);\n            succeeded = this.saveToStorage(storedQueue);\n            if (succeeded) {\n                // only add to in-memory queue when storage succeeds\n                this.memQueue.push(queueEntry);\n            }\n        } catch(err) {\n            logger$1.error('Error enqueueing item', item);\n            succeeded = false;\n        }\n        if (cb) {\n            cb(succeeded);\n        }\n    }, this), function lockFailure(err) {\n        logger$1.error('Error acquiring storage lock', err);\n        if (cb) {\n            cb(false);\n        }\n    }, this.pid);\n};\n\n/**\n * Read out the given number of queue entries. If this.memQueue\n * has fewer than batchSize items, then look for \"orphaned\" items\n * in the persisted queue (items where the 'flushAfter' time has\n * already passed).\n */\nRequestQueue.prototype.fillBatch = function(batchSize) {\n    var batch = this.memQueue.slice(0, batchSize);\n    if (batch.length < batchSize) {\n        // don't need lock just to read events; localStorage is thread-safe\n        // and the worst that could happen is a duplicate send of some\n        // orphaned events, which will be deduplicated on the server side\n        var storedQueue = this.readFromStorage();\n        if (storedQueue.length) {\n            // item IDs already in batch; don't duplicate out of storage\n            var idsInBatch = {}; // poor man's Set\n            _.each(batch, function(item) { idsInBatch[item['id']] = true; });\n\n            for (var i = 0; i < storedQueue.length; i++) {\n                var item = storedQueue[i];\n                if (new Date().getTime() > item['flushAfter'] && !idsInBatch[item['id']]) {\n                    batch.push(item);\n                    if (batch.length >= batchSize) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    return batch;\n};\n\n/**\n * Remove items with matching 'id' from array (immutably)\n * also remove any item without a valid id (e.g., malformed\n * storage entries).\n */\nvar filterOutIDsAndInvalid = function(items, idSet) {\n    var filteredItems = [];\n    _.each(items, function(item) {\n        if (item['id'] && !idSet[item['id']]) {\n            filteredItems.push(item);\n        }\n    });\n    return filteredItems;\n};\n\n/**\n * Remove items with matching IDs from both in-memory queue\n * and persisted queue\n */\nRequestQueue.prototype.removeItemsByID = function(ids, cb) {\n    var idSet = {}; // poor man's Set\n    _.each(ids, function(id) { idSet[id] = true; });\n\n    this.memQueue = filterOutIDsAndInvalid(this.memQueue, idSet);\n    this.lock.withLock(_.bind(function lockAcquired() {\n        var succeeded;\n        try {\n            var storedQueue = this.readFromStorage();\n            storedQueue = filterOutIDsAndInvalid(storedQueue, idSet);\n            succeeded = this.saveToStorage(storedQueue);\n        } catch(err) {\n            logger$1.error('Error removing items', ids);\n            succeeded = false;\n        }\n        if (cb) {\n            cb(succeeded);\n        }\n    }, this), function lockFailure(err) {\n        logger$1.error('Error acquiring storage lock', err);\n        if (cb) {\n            cb(false);\n        }\n    }, this.pid);\n};\n\n/**\n * Read and parse items array from localStorage entry, handling\n * malformed/missing data if necessary.\n */\nRequestQueue.prototype.readFromStorage = function() {\n    var storageEntry;\n    try {\n        storageEntry = this.storage.getItem(this.storageKey);\n        if (storageEntry) {\n            storageEntry = JSONParse(storageEntry);\n            if (!_.isArray(storageEntry)) {\n                logger$1.error('Invalid storage entry:', storageEntry);\n                storageEntry = null;\n            }\n        }\n    } catch (err) {\n        logger$1.error('Error retrieving queue', err);\n        storageEntry = null;\n    }\n    return storageEntry || [];\n};\n\n/**\n * Serialize the given items array to localStorage.\n */\nRequestQueue.prototype.saveToStorage = function(queue) {\n    try {\n        this.storage.setItem(this.storageKey, JSONStringify(queue));\n        return true;\n    } catch (err) {\n        logger$1.error('Error saving queue', err);\n        return false;\n    }\n};\n\n/**\n * Clear out queues (memory and localStorage).\n */\nRequestQueue.prototype.clear = function() {\n    this.memQueue = [];\n    this.storage.removeItem(this.storageKey);\n};\n\n// eslint-disable-line camelcase\n\n// maximum interval between request retries after exponential backoff\nvar MAX_RETRY_INTERVAL_MS = 10 * 60 * 1000; // 10 minutes\n\nvar logger = console_with_prefix('batch');\n\n/**\n * RequestBatcher: manages the queueing, flushing, retry etc of requests of one\n * type (events, people, groups).\n * Uses RequestQueue to manage the backing store.\n * @constructor\n */\nvar RequestBatcher = function(storageKey, endpoint, options) {\n    this.queue = new RequestQueue(storageKey, {storage: options.storage});\n    this.endpoint = endpoint;\n\n    this.libConfig = options.libConfig;\n    this.sendRequest = options.sendRequestFunc;\n\n    // seed variable batch size + flush interval with configured values\n    this.batchSize = this.libConfig['batch_size'];\n    this.flushInterval = this.libConfig['batch_flush_interval_ms'];\n\n    this.stopped = false;\n};\n\n/**\n * Add one item to queue.\n */\nRequestBatcher.prototype.enqueue = function(item, cb) {\n    this.queue.enqueue(item, this.flushInterval, cb);\n};\n\n/**\n * Start flushing batches at the configured time interval. Must call\n * this method upon SDK init in order to send anything over the network.\n */\nRequestBatcher.prototype.start = function() {\n    this.stopped = false;\n    this.flush();\n};\n\n/**\n * Stop flushing batches. Can be restarted by calling start().\n */\nRequestBatcher.prototype.stop = function() {\n    this.stopped = true;\n    if (this.timeoutID) {\n        clearTimeout(this.timeoutID);\n        this.timeoutID = null;\n    }\n};\n\n/**\n * Clear out queue.\n */\nRequestBatcher.prototype.clear = function() {\n    this.queue.clear();\n};\n\n/**\n * Restore batch size configuration to whatever is set in the main SDK.\n */\nRequestBatcher.prototype.resetBatchSize = function() {\n    this.batchSize = this.libConfig['batch_size'];\n};\n\n/**\n * Restore flush interval time configuration to whatever is set in the main SDK.\n */\nRequestBatcher.prototype.resetFlush = function() {\n    this.scheduleFlush(this.libConfig['batch_flush_interval_ms']);\n};\n\n/**\n * Schedule the next flush in the given number of milliseconds.\n */\nRequestBatcher.prototype.scheduleFlush = function(flushMS) {\n    this.flushInterval = flushMS;\n    if (!this.stopped) { // don't schedule anymore if batching has been stopped\n        this.timeoutID = setTimeout(_.bind(this.flush, this), this.flushInterval);\n    }\n};\n\n/**\n * Flush one batch to network. Depending on success/failure modes, it will either\n * remove the batch from the queue or leave it in for retry, and schedule the next\n * flush. In cases of most network or API failures, it will back off exponentially\n * when retrying.\n * @param {Object} [options]\n * @param {boolean} [options.sendBeacon] - whether to send batch with\n * navigator.sendBeacon (only useful for sending batches before page unloads, as\n * sendBeacon offers no callbacks or status indications)\n */\nRequestBatcher.prototype.flush = function(options) {\n    try {\n\n        if (this.requestInProgress) {\n            logger.log('Flush: Request already in progress');\n            return;\n        }\n\n        options = options || {};\n        var currentBatchSize = this.batchSize;\n        var batch = this.queue.fillBatch(currentBatchSize);\n        if (batch.length < 1) {\n            this.resetFlush();\n            return; // nothing to do\n        }\n\n        this.requestInProgress = true;\n\n        var timeoutMS = this.libConfig['batch_request_timeout_ms'];\n        var startTime = new Date().getTime();\n        var dataForRequest = _.map(batch, function(item) { return item['payload']; });\n        var batchSendCallback = _.bind(function(res) {\n            this.requestInProgress = false;\n\n            try {\n\n                // handle API response in a try-catch to make sure we can reset the\n                // flush operation if something goes wrong\n\n                var removeItemsFromQueue = false;\n                if (\n                    _.isObject(res) &&\n                    res.error === 'timeout' &&\n                    new Date().getTime() - startTime >= timeoutMS\n                ) {\n                    logger.error('Network timeout; retrying');\n                    this.flush();\n                } else if (\n                    _.isObject(res) &&\n                    res.xhr_req &&\n                    (res.xhr_req['status'] >= 500 || res.xhr_req['status'] <= 0)\n                ) {\n                    // network or API error, retry\n                    var retryMS = this.flushInterval * 2;\n                    var headers = res.xhr_req['responseHeaders'];\n                    if (headers) {\n                        var retryAfter = headers['Retry-After'];\n                        if (retryAfter) {\n                            retryMS = (parseInt(retryAfter, 10) * 1000) || retryMS;\n                        }\n                    }\n                    retryMS = Math.min(MAX_RETRY_INTERVAL_MS, retryMS);\n                    logger.error('Error; retry in ' + retryMS + ' ms');\n                    this.scheduleFlush(retryMS);\n                } else if (_.isObject(res) && res.xhr_req && res.xhr_req['status'] === 413) {\n                    // 413 Payload Too Large\n                    if (batch.length > 1) {\n                        var halvedBatchSize = Math.max(1, Math.floor(currentBatchSize / 2));\n                        this.batchSize = Math.min(this.batchSize, halvedBatchSize, batch.length - 1);\n                        logger.error('413 response; reducing batch size to ' + this.batchSize);\n                        this.resetFlush();\n                    } else {\n                        logger.error('Single-event request too large; dropping', batch);\n                        this.resetBatchSize();\n                        removeItemsFromQueue = true;\n                    }\n                } else {\n                    // successful network request+response; remove each item in batch from queue\n                    // (even if it was e.g. a 400, in which case retrying won't help)\n                    removeItemsFromQueue = true;\n                }\n\n                if (removeItemsFromQueue) {\n                    this.queue.removeItemsByID(\n                        _.map(batch, function(item) { return item['id']; }),\n                        _.bind(this.flush, this) // handle next batch if the queue isn't empty\n                    );\n                }\n\n            } catch(err) {\n                logger.error('Error handling API response', err);\n                this.resetFlush();\n            }\n        }, this);\n        var requestOptions = {\n            method: 'POST',\n            verbose: true,\n            ignore_json_errors: true, // eslint-disable-line camelcase\n            timeout_ms: timeoutMS // eslint-disable-line camelcase\n        };\n        if (options.sendBeacon) {\n            requestOptions.transport = 'sendBeacon';\n        }\n        logger.log('MIXPANEL REQUEST:', this.endpoint, dataForRequest);\n        this.sendRequest(this.endpoint, dataForRequest, requestOptions, batchSendCallback);\n\n    } catch(err) {\n        logger.error('Error flushing request queue', err);\n        this.resetFlush();\n    }\n};\n\n/**\n * A function used to track a Mixpanel event (e.g. MixpanelLib.track)\n * @callback trackFunction\n * @param {String} event_name The name of the event. This can be anything the user does - 'Button Click', 'Sign Up', 'Item Purchased', etc.\n * @param {Object} [properties] A set of properties to include with the event you're sending. These describe the user who did the event or details about the event itself.\n * @param {Function} [callback] If provided, the callback function will be called after tracking the event.\n */\n\n/** Public **/\n\nvar GDPR_DEFAULT_PERSISTENCE_PREFIX = '__mp_opt_in_out_';\n\n/**\n * Opt the user in to data tracking and cookies/localstorage for the given token\n * @param {string} token - Mixpanel project tracking token\n * @param {Object} [options]\n * @param {trackFunction} [options.track] - function used for tracking a Mixpanel event to record the opt-in action\n * @param {string} [options.trackEventName] - event name to be used for tracking the opt-in action\n * @param {Object} [options.trackProperties] - set of properties to be tracked along with the opt-in action\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__mp_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookieExpiration] - number of days until the opt-in cookie expires\n * @param {string} [options.cookieDomain] - custom cookie domain\n * @param {boolean} [options.crossSiteCookie] - whether the opt-in cookie is set as cross-site-enabled\n * @param {boolean} [options.crossSubdomainCookie] - whether the opt-in cookie is set as cross-subdomain or not\n * @param {boolean} [options.secureCookie] - whether the opt-in cookie is set as secure or not\n */\nfunction optIn(token, options) {\n    _optInOut(true, token, options);\n}\n\n/**\n * Opt the user out of data tracking and cookies/localstorage for the given token\n * @param {string} token - Mixpanel project tracking token\n * @param {Object} [options]\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__mp_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookieExpiration] - number of days until the opt-out cookie expires\n * @param {string} [options.cookieDomain] - custom cookie domain\n * @param {boolean} [options.crossSiteCookie] - whether the opt-in cookie is set as cross-site-enabled\n * @param {boolean} [options.crossSubdomainCookie] - whether the opt-out cookie is set as cross-subdomain or not\n * @param {boolean} [options.secureCookie] - whether the opt-out cookie is set as secure or not\n */\nfunction optOut(token, options) {\n    _optInOut(false, token, options);\n}\n\n/**\n * Check whether the user has opted in to data tracking and cookies/localstorage for the given token\n * @param {string} token - Mixpanel project tracking token\n * @param {Object} [options]\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__mp_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @returns {boolean} whether the user has opted in to the given opt type\n */\nfunction hasOptedIn(token, options) {\n    return _getStorageValue(token, options) === '1';\n}\n\n/**\n * Check whether the user has opted out of data tracking and cookies/localstorage for the given token\n * @param {string} token - Mixpanel project tracking token\n * @param {Object} [options]\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__mp_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {boolean} [options.ignoreDnt] - flag to ignore browser DNT settings and always return false\n * @returns {boolean} whether the user has opted out of the given opt type\n */\nfunction hasOptedOut(token, options) {\n    if (_hasDoNotTrackFlagOn(options)) {\n        return true;\n    }\n    return _getStorageValue(token, options) === '0';\n}\n\n/**\n * Wrap a MixpanelLib method with a check for whether the user is opted out of data tracking and cookies/localstorage for the given token\n * If the user has opted out, return early instead of executing the method.\n * If a callback argument was provided, execute it passing the 0 error code.\n * @param {function} method - wrapped method to be executed if the user has not opted out\n * @returns {*} the result of executing method OR undefined if the user has opted out\n */\nfunction addOptOutCheckMixpanelLib(method) {\n    return _addOptOutCheck(method, function(name) {\n        return this.get_config(name);\n    });\n}\n\n/**\n * Wrap a MixpanelPeople method with a check for whether the user is opted out of data tracking and cookies/localstorage for the given token\n * If the user has opted out, return early instead of executing the method.\n * If a callback argument was provided, execute it passing the 0 error code.\n * @param {function} method - wrapped method to be executed if the user has not opted out\n * @returns {*} the result of executing method OR undefined if the user has opted out\n */\nfunction addOptOutCheckMixpanelPeople(method) {\n    return _addOptOutCheck(method, function(name) {\n        return this._get_config(name);\n    });\n}\n\n/**\n * Wrap a MixpanelGroup method with a check for whether the user is opted out of data tracking and cookies/localstorage for the given token\n * If the user has opted out, return early instead of executing the method.\n * If a callback argument was provided, execute it passing the 0 error code.\n * @param {function} method - wrapped method to be executed if the user has not opted out\n * @returns {*} the result of executing method OR undefined if the user has opted out\n */\nfunction addOptOutCheckMixpanelGroup(method) {\n    return _addOptOutCheck(method, function(name) {\n        return this._get_config(name);\n    });\n}\n\n/**\n * Clear the user's opt in/out status of data tracking and cookies/localstorage for the given token\n * @param {string} token - Mixpanel project tracking token\n * @param {Object} [options]\n * @param {string} [options.persistenceType] Persistence mechanism used - cookie or localStorage\n * @param {string} [options.persistencePrefix=__mp_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookieExpiration] - number of days until the opt-in cookie expires\n * @param {string} [options.cookieDomain] - custom cookie domain\n * @param {boolean} [options.crossSiteCookie] - whether the opt-in cookie is set as cross-site-enabled\n * @param {boolean} [options.crossSubdomainCookie] - whether the opt-in cookie is set as cross-subdomain or not\n * @param {boolean} [options.secureCookie] - whether the opt-in cookie is set as secure or not\n */\nfunction clearOptInOut(token, options) {\n    options = options || {};\n    _getStorage(options).remove(\n        _getStorageKey(token, options), !!options.crossSubdomainCookie, options.cookieDomain\n    );\n}\n\n/** Private **/\n\n/**\n * Get storage util\n * @param {Object} [options]\n * @param {string} [options.persistenceType]\n * @returns {object} either _.cookie or _.localstorage\n */\nfunction _getStorage(options) {\n    options = options || {};\n    return options.persistenceType === 'localStorage' ? _.localStorage : _.cookie;\n}\n\n/**\n * Get the name of the cookie that is used for the given opt type (tracking, cookie, etc.)\n * @param {string} token - Mixpanel project tracking token\n * @param {Object} [options]\n * @param {string} [options.persistencePrefix=__mp_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @returns {string} the name of the cookie for the given opt type\n */\nfunction _getStorageKey(token, options) {\n    options = options || {};\n    return (options.persistencePrefix || GDPR_DEFAULT_PERSISTENCE_PREFIX) + token;\n}\n\n/**\n * Get the value of the cookie that is used for the given opt type (tracking, cookie, etc.)\n * @param {string} token - Mixpanel project tracking token\n * @param {Object} [options]\n * @param {string} [options.persistencePrefix=__mp_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @returns {string} the value of the cookie for the given opt type\n */\nfunction _getStorageValue(token, options) {\n    return _getStorage(options).get(_getStorageKey(token, options));\n}\n\n/**\n * Check whether the user has set the DNT/doNotTrack setting to true in their browser\n * @param {Object} [options]\n * @param {string} [options.window] - alternate window object to check; used to force various DNT settings in browser tests\n * @param {boolean} [options.ignoreDnt] - flag to ignore browser DNT settings and always return false\n * @returns {boolean} whether the DNT setting is true\n */\nfunction _hasDoNotTrackFlagOn(options) {\n    if (options && options.ignoreDnt) {\n        return false;\n    }\n    var win = (options && options.window) || window$1;\n    var nav = win['navigator'] || {};\n    var hasDntOn = false;\n\n    _.each([\n        nav['doNotTrack'], // standard\n        nav['msDoNotTrack'],\n        win['doNotTrack']\n    ], function(dntValue) {\n        if (_.includes([true, 1, '1', 'yes'], dntValue)) {\n            hasDntOn = true;\n        }\n    });\n\n    return hasDntOn;\n}\n\n/**\n * Set cookie/localstorage for the user indicating that they are opted in or out for the given opt type\n * @param {boolean} optValue - whether to opt the user in or out for the given opt type\n * @param {string} token - Mixpanel project tracking token\n * @param {Object} [options]\n * @param {trackFunction} [options.track] - function used for tracking a Mixpanel event to record the opt-in action\n * @param {string} [options.trackEventName] - event name to be used for tracking the opt-in action\n * @param {Object} [options.trackProperties] - set of properties to be tracked along with the opt-in action\n * @param {string} [options.persistencePrefix=__mp_opt_in_out] - custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookieExpiration] - number of days until the opt-in cookie expires\n * @param {string} [options.cookieDomain] - custom cookie domain\n * @param {boolean} [options.crossSiteCookie] - whether the opt-in cookie is set as cross-site-enabled\n * @param {boolean} [options.crossSubdomainCookie] - whether the opt-in cookie is set as cross-subdomain or not\n * @param {boolean} [options.secureCookie] - whether the opt-in cookie is set as secure or not\n */\nfunction _optInOut(optValue, token, options) {\n    if (!_.isString(token) || !token.length) {\n        console.error('gdpr.' + (optValue ? 'optIn' : 'optOut') + ' called with an invalid token');\n        return;\n    }\n\n    options = options || {};\n\n    _getStorage(options).set(\n        _getStorageKey(token, options),\n        optValue ? 1 : 0,\n        _.isNumber(options.cookieExpiration) ? options.cookieExpiration : null,\n        !!options.crossSubdomainCookie,\n        !!options.secureCookie,\n        !!options.crossSiteCookie,\n        options.cookieDomain\n    );\n\n    if (options.track && optValue) { // only track event if opting in (optValue=true)\n        options.track(options.trackEventName || '$opt_in', options.trackProperties, {\n            'send_immediately': true\n        });\n    }\n}\n\n/**\n * Wrap a method with a check for whether the user is opted out of data tracking and cookies/localstorage for the given token\n * If the user has opted out, return early instead of executing the method.\n * If a callback argument was provided, execute it passing the 0 error code.\n * @param {function} method - wrapped method to be executed if the user has not opted out\n * @param {function} getConfigValue - getter function for the Mixpanel API token and other options to be used with opt-out check\n * @returns {*} the result of executing method OR undefined if the user has opted out\n */\nfunction _addOptOutCheck(method, getConfigValue) {\n    return function() {\n        var optedOut = false;\n\n        try {\n            var token = getConfigValue.call(this, 'token');\n            var ignoreDnt = getConfigValue.call(this, 'ignore_dnt');\n            var persistenceType = getConfigValue.call(this, 'opt_out_tracking_persistence_type');\n            var persistencePrefix = getConfigValue.call(this, 'opt_out_tracking_cookie_prefix');\n            var win = getConfigValue.call(this, 'window'); // used to override window during browser tests\n\n            if (token) { // if there was an issue getting the token, continue method execution as normal\n                optedOut = hasOptedOut(token, {\n                    ignoreDnt: ignoreDnt,\n                    persistenceType: persistenceType,\n                    persistencePrefix: persistencePrefix,\n                    window: win\n                });\n            }\n        } catch(err) {\n            console.error('Unexpected error when checking tracking opt-out status: ' + err);\n        }\n\n        if (!optedOut) {\n            return method.apply(this, arguments);\n        }\n\n        var callback = arguments[arguments.length - 1];\n        if (typeof(callback) === 'function') {\n            callback(0);\n        }\n\n        return;\n    };\n}\n\n/** @const */ var SET_ACTION      = '$set';\n/** @const */ var SET_ONCE_ACTION = '$set_once';\n/** @const */ var UNSET_ACTION    = '$unset';\n/** @const */ var ADD_ACTION      = '$add';\n/** @const */ var APPEND_ACTION   = '$append';\n/** @const */ var UNION_ACTION    = '$union';\n/** @const */ var REMOVE_ACTION   = '$remove';\n/** @const */ var DELETE_ACTION   = '$delete';\n\n// Common internal methods for mixpanel.people and mixpanel.group APIs.\n// These methods shouldn't involve network I/O.\nvar apiActions = {\n    set_action: function(prop, to) {\n        var data = {};\n        var $set = {};\n        if (_.isObject(prop)) {\n            _.each(prop, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $set[k] = v;\n                }\n            }, this);\n        } else {\n            $set[prop] = to;\n        }\n\n        data[SET_ACTION] = $set;\n        return data;\n    },\n\n    unset_action: function(prop) {\n        var data = {};\n        var $unset = [];\n        if (!_.isArray(prop)) {\n            prop = [prop];\n        }\n\n        _.each(prop, function(k) {\n            if (!this._is_reserved_property(k)) {\n                $unset.push(k);\n            }\n        }, this);\n\n        data[UNSET_ACTION] = $unset;\n        return data;\n    },\n\n    set_once_action: function(prop, to) {\n        var data = {};\n        var $set_once = {};\n        if (_.isObject(prop)) {\n            _.each(prop, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $set_once[k] = v;\n                }\n            }, this);\n        } else {\n            $set_once[prop] = to;\n        }\n        data[SET_ONCE_ACTION] = $set_once;\n        return data;\n    },\n\n    union_action: function(list_name, values) {\n        var data = {};\n        var $union = {};\n        if (_.isObject(list_name)) {\n            _.each(list_name, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $union[k] = _.isArray(v) ? v : [v];\n                }\n            }, this);\n        } else {\n            $union[list_name] = _.isArray(values) ? values : [values];\n        }\n        data[UNION_ACTION] = $union;\n        return data;\n    },\n\n    append_action: function(list_name, value) {\n        var data = {};\n        var $append = {};\n        if (_.isObject(list_name)) {\n            _.each(list_name, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $append[k] = v;\n                }\n            }, this);\n        } else {\n            $append[list_name] = value;\n        }\n        data[APPEND_ACTION] = $append;\n        return data;\n    },\n\n    remove_action: function(list_name, value) {\n        var data = {};\n        var $remove = {};\n        if (_.isObject(list_name)) {\n            _.each(list_name, function(v, k) {\n                if (!this._is_reserved_property(k)) {\n                    $remove[k] = v;\n                }\n            }, this);\n        } else {\n            $remove[list_name] = value;\n        }\n        data[REMOVE_ACTION] = $remove;\n        return data;\n    },\n\n    delete_action: function() {\n        var data = {};\n        data[DELETE_ACTION] = '';\n        return data;\n    }\n};\n\n/**\n * Mixpanel Group Object\n * @constructor\n */\nvar MixpanelGroup = function() {};\n\n_.extend(MixpanelGroup.prototype, apiActions);\n\nMixpanelGroup.prototype._init = function(mixpanel_instance, group_key, group_id) {\n    this._mixpanel = mixpanel_instance;\n    this._group_key = group_key;\n    this._group_id = group_id;\n};\n\n/**\n * Set properties on a group.\n *\n * ### Usage:\n *\n *     mixpanel.get_group('company', 'mixpanel').set('Location', '405 Howard');\n *\n *     // or set multiple properties at once\n *     mixpanel.get_group('company', 'mixpanel').set({\n *          'Location': '405 Howard',\n *          'Founded' : 2009,\n *     });\n *     // properties can be strings, integers, dates, or lists\n *\n * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.\n * @param {*} [to] A value to set on the given property name\n * @param {Function} [callback] If provided, the callback will be called after the tracking event\n */\nMixpanelGroup.prototype.set = addOptOutCheckMixpanelGroup(function(prop, to, callback) {\n    var data = this.set_action(prop, to);\n    if (_.isObject(prop)) {\n        callback = to;\n    }\n    return this._send_request(data, callback);\n});\n\n/**\n * Set properties on a group, only if they do not yet exist.\n * This will not overwrite previous group property values, unlike\n * group.set().\n *\n * ### Usage:\n *\n *     mixpanel.get_group('company', 'mixpanel').set_once('Location', '405 Howard');\n *\n *     // or set multiple properties at once\n *     mixpanel.get_group('company', 'mixpanel').set_once({\n *          'Location': '405 Howard',\n *          'Founded' : 2009,\n *     });\n *     // properties can be strings, integers, lists or dates\n *\n * @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.\n * @param {*} [to] A value to set on the given property name\n * @param {Function} [callback] If provided, the callback will be called after the tracking event\n */\nMixpanelGroup.prototype.set_once = addOptOutCheckMixpanelGroup(function(prop, to, callback) {\n    var data = this.set_once_action(prop, to);\n    if (_.isObject(prop)) {\n        callback = to;\n    }\n    return this._send_request(data, callback);\n});\n\n/**\n * Unset properties on a group permanently.\n *\n * ### Usage:\n *\n *     mixpanel.get_group('company', 'mixpanel').unset('Founded');\n *\n * @param {String} prop The name of the property.\n * @param {Function} [callback] If provided, the callback will be called after the tracking event\n */\nMixpanelGroup.prototype.unset = addOptOutCheckMixpanelGroup(function(prop, callback) {\n    var data = this.unset_action(prop);\n    return this._send_request(data, callback);\n});\n\n/**\n * Merge a given list with a list-valued group property, excluding duplicate values.\n *\n * ### Usage:\n *\n *     // merge a value to a list, creating it if needed\n *     mixpanel.get_group('company', 'mixpanel').union('Location', ['San Francisco', 'London']);\n *\n * @param {String} list_name Name of the property.\n * @param {Array} values Values to merge with the given property\n * @param {Function} [callback] If provided, the callback will be called after the tracking event\n */\nMixpanelGroup.prototype.union = addOptOutCheckMixpanelGroup(function(list_name, values, callback) {\n    if (_.isObject(list_name)) {\n        callback = values;\n    }\n    var data = this.union_action(list_name, values);\n    return this._send_request(data, callback);\n});\n\n/**\n * Permanently delete a group.\n *\n * ### Usage:\n *     mixpanel.get_group('company', 'mixpanel').delete();\n */\nMixpanelGroup.prototype['delete'] = addOptOutCheckMixpanelGroup(function(callback) {\n    var data = this.delete_action();\n    return this._send_request(data, callback);\n});\n\n/**\n * Remove a property from a group. The value will be ignored if doesn't exist.\n *\n * ### Usage:\n *\n *     mixpanel.get_group('company', 'mixpanel').remove('Location', 'London');\n *\n * @param {String} list_name Name of the property.\n * @param {Object} value Value to remove from the given group property\n * @param {Function} [callback] If provided, the callback will be called after the tracking event\n */\nMixpanelGroup.prototype.remove = addOptOutCheckMixpanelGroup(function(list_name, value, callback) {\n    var data = this.remove_action(list_name, value);\n    return this._send_request(data, callback);\n});\n\nMixpanelGroup.prototype._send_request = function(data, callback) {\n    data['$group_key'] = this._group_key;\n    data['$group_id'] = this._group_id;\n    data['$token'] = this._get_config('token');\n\n    var date_encoded_data = _.encodeDates(data);\n    return this._mixpanel._track_or_batch({\n        truncated_data: _.truncate(date_encoded_data, 255),\n        endpoint: this._get_config('api_host') + '/groups/',\n        batcher: this._mixpanel.request_batchers.groups\n    }, callback);\n};\n\nMixpanelGroup.prototype._is_reserved_property = function(prop) {\n    return prop === '$group_key' || prop === '$group_id';\n};\n\nMixpanelGroup.prototype._get_config = function(conf) {\n    return this._mixpanel.get_config(conf);\n};\n\nMixpanelGroup.prototype.toString = function() {\n    return this._mixpanel.toString() + '.group.' + this._group_key + '.' + this._group_id;\n};\n\n// MixpanelGroup Exports\nMixpanelGroup.prototype['remove']   = MixpanelGroup.prototype.remove;\nMixpanelGroup.prototype['set']      = MixpanelGroup.prototype.set;\nMixpanelGroup.prototype['set_once'] = MixpanelGroup.prototype.set_once;\nMixpanelGroup.prototype['union']    = MixpanelGroup.prototype.union;\nMixpanelGroup.prototype['unset']    = MixpanelGroup.prototype.unset;\nMixpanelGroup.prototype['toString'] = MixpanelGroup.prototype.toString;\n\n/*\n * Constants\n */\n/** @const */ var SET_QUEUE_KEY          = '__mps';\n/** @const */ var SET_ONCE_QUEUE_KEY     = '__mpso';\n/** @const */ var UNSET_QUEUE_KEY        = '__mpus';\n/** @const */ var ADD_QUEUE_KEY          = '__mpa';\n/** @const */ var APPEND_QUEUE_KEY       = '__mpap';\n/** @const */ var REMOVE_QUEUE_KEY       = '__mpr';\n/** @const */ var UNION_QUEUE_KEY        = '__mpu';\n// This key is deprecated, but we want to check for it to see whether aliasing is allowed.\n/** @const */ var PEOPLE_DISTINCT_ID_KEY = '$people_distinct_id';\n/** @const */ var ALIAS_ID_KEY           = '__alias';\n/** @const */ var CAMPAIGN_IDS_KEY       = '__cmpns';\n/** @const */ var EVENT_TIMERS_KEY       = '__timers';\n/** @const */ var RESERVED_PROPERTIES = [\n    SET_QUEUE_KEY,\n    SET_ONCE_QUEUE_KEY,\n    UNSET_QUEUE_KEY,\n    ADD_QUEUE_KEY,\n    APPEND_QUEUE_KEY,\n    REMOVE_QUEUE_KEY,\n    UNION_QUEUE_KEY,\n    PEOPLE_DISTINCT_ID_KEY,\n    ALIAS_ID_KEY,\n    CAMPAIGN_IDS_KEY,\n    EVENT_TIMERS_KEY\n];\n\n/**\n * Mixpanel Persistence Object\n * @constructor\n */\nvar MixpanelPersistence = function(config) {\n    this['props'] = {};\n    this.campaign_params_saved = false;\n\n    if (config['persistence_name']) {\n        this.name = 'mp_' + config['persistence_name'];\n    } else {\n        this.name = 'mp_' + config['token'] + '_mixpanel';\n    }\n\n    var storage_type = config['persistence'];\n    if (storage_type !== 'cookie' && storage_type !== 'localStorage') {\n        console$1.critical('Unknown persistence type ' + storage_type + '; falling back to cookie');\n        storage_type = config['persistence'] = 'cookie';\n    }\n\n    if (storage_type === 'localStorage' && _.localStorage.is_supported()) {\n        this.storage = _.localStorage;\n    } else {\n        this.storage = _.cookie;\n    }\n\n    this.load();\n    this.update_config(config);\n    this.upgrade(config);\n    this.save();\n};\n\nMixpanelPersistence.prototype.properties = function() {\n    var p = {};\n    // Filter out reserved properties\n    _.each(this['props'], function(v, k) {\n        if (!_.include(RESERVED_PROPERTIES, k)) {\n            p[k] = v;\n        }\n    });\n    return p;\n};\n\nMixpanelPersistence.prototype.load = function() {\n    if (this.disabled) { return; }\n\n    var entry = this.storage.parse(this.name);\n\n    if (entry) {\n        this['props'] = _.extend({}, entry);\n    }\n};\n\nMixpanelPersistence.prototype.upgrade = function(config) {\n    var upgrade_from_old_lib = config['upgrade'],\n        old_cookie_name,\n        old_cookie;\n\n    if (upgrade_from_old_lib) {\n        old_cookie_name = 'mp_super_properties';\n        // Case where they had a custom cookie name before.\n        if (typeof(upgrade_from_old_lib) === 'string') {\n            old_cookie_name = upgrade_from_old_lib;\n        }\n\n        old_cookie = this.storage.parse(old_cookie_name);\n\n        // remove the cookie\n        this.storage.remove(old_cookie_name);\n        this.storage.remove(old_cookie_name, true);\n\n        if (old_cookie) {\n            this['props'] = _.extend(\n                this['props'],\n                old_cookie['all'],\n                old_cookie['events']\n            );\n        }\n    }\n\n    if (!config['cookie_name'] && config['name'] !== 'mixpanel') {\n        // special case to handle people with cookies of the form\n        // mp_TOKEN_INSTANCENAME from the first release of this library\n        old_cookie_name = 'mp_' + config['token'] + '_' + config['name'];\n        old_cookie = this.storage.parse(old_cookie_name);\n\n        if (old_cookie) {\n            this.storage.remove(old_cookie_name);\n            this.storage.remove(old_cookie_name, true);\n\n            // Save the prop values that were in the cookie from before -\n            // this should only happen once as we delete the old one.\n            this.register_once(old_cookie);\n        }\n    }\n\n    if (this.storage === _.localStorage) {\n        old_cookie = _.cookie.parse(this.name);\n\n        _.cookie.remove(this.name);\n        _.cookie.remove(this.name, true);\n\n        if (old_cookie) {\n            this.register_once(old_cookie);\n        }\n    }\n};\n\nMixpanelPersistence.prototype.save = function() {\n    if (this.disabled) { return; }\n    this._expire_notification_campaigns();\n    this.storage.set(\n        this.name,\n        _.JSONEncode(this['props']),\n        this.expire_days,\n        this.cross_subdomain,\n        this.secure,\n        this.cross_site,\n        this.cookie_domain\n    );\n};\n\nMixpanelPersistence.prototype.remove = function() {\n    // remove both domain and subdomain cookies\n    this.storage.remove(this.name, false, this.cookie_domain);\n    this.storage.remove(this.name, true, this.cookie_domain);\n};\n\n// removes the storage entry and deletes all loaded data\n// forced name for tests\nMixpanelPersistence.prototype.clear = function() {\n    this.remove();\n    this['props'] = {};\n};\n\n/**\n* @param {Object} props\n* @param {*=} default_value\n* @param {number=} days\n*/\nMixpanelPersistence.prototype.register_once = function(props, default_value, days) {\n    if (_.isObject(props)) {\n        if (typeof(default_value) === 'undefined') { default_value = 'None'; }\n        this.expire_days = (typeof(days) === 'undefined') ? this.default_expiry : days;\n\n        _.each(props, function(val, prop) {\n            if (!this['props'].hasOwnProperty(prop) || this['props'][prop] === default_value) {\n                this['props'][prop] = val;\n            }\n        }, this);\n\n        this.save();\n\n        return true;\n    }\n    return false;\n};\n\n/**\n* @param {Object} props\n* @param {number=} days\n*/\nMixpanelPersistence.prototype.register = function(props, days) {\n    if (_.isObject(props)) {\n        this.expire_days = (typeof(days) === 'undefined') ? this.default_expiry : days;\n\n        _.extend(this['props'], props);\n\n        this.save();\n\n        return true;\n    }\n    return false;\n};\n\nMixpanelPersistence.prototype.unregister = function(prop) {\n    if (prop in this['props']) {\n        delete this['props'][prop];\n        this.save();\n    }\n};\n\nMixpanelPersistence.prototype._expire_notification_campaigns = _.safewrap(function() {\n    var campaigns_shown = this['props'][CAMPAIGN_IDS_KEY],\n        EXPIRY_TIME = Config.DEBUG ? 60 * 1000 : 60 * 60 * 1000; // 1 minute (Config.DEBUG) / 1 hour (PDXN)\n    if (!campaigns_shown) {\n        return;\n    }\n    for (var campaign_id in campaigns_shown) {\n        if (1 * new Date() - campaigns_shown[campaign_id] > EXPIRY_TIME) {\n            delete campaigns_shown[campaign_id];\n        }\n    }\n    if (_.isEmptyObject(campaigns_shown)) {\n        delete this['props'][CAMPAIGN_IDS_KEY];\n    }\n});\n\nMixpanelPersistence.prototype.update_campaign_params = function() {\n    if (!this.campaign_params_saved) {\n        this.register_once(_.info.campaignParams());\n        this.campaign_params_saved = true;\n    }\n};\n\nMixpanelPersistence.prototype.update_search_keyword = function(referrer) {\n    this.register(_.info.searchInfo(referrer));\n};\n\n// EXPORTED METHOD, we test this directly.\nMixpanelPersistence.prototype.update_referrer_info = function(referrer) {\n    // If referrer doesn't exist, we want to note the fact that it was type-in traffic.\n    this.register_once({\n        '$initial_referrer': referrer || '$direct',\n        '$initial_referring_domain': _.info.referringDomain(referrer) || '$direct'\n    }, '');\n};\n\nMixpanelPersistence.prototype.get_referrer_info = function() {\n    return _.strip_empty_properties({\n        '$initial_referrer': this['props']['$initial_referrer'],\n        '$initial_referring_domain': this['props']['$initial_referring_domain']\n    });\n};\n\n// safely fills the passed in object with stored properties,\n// does not override any properties defined in both\n// returns the passed in object\nMixpanelPersistence.prototype.safe_merge = function(props) {\n    _.each(this['props'], function(val, prop) {\n        if (!(prop in props)) {\n            props[prop] = val;\n        }\n    });\n\n    return props;\n};\n\nMixpanelPersistence.prototype.update_config = function(config) {\n    this.default_expiry = this.expire_days = config['cookie_expiration'];\n    this.set_disabled(config['disable_persistence']);\n    this.set_cookie_domain(config['cookie_domain']);\n    this.set_cross_site(config['cross_site_cookie']);\n    this.set_cross_subdomain(config['cross_subdomain_cookie']);\n    this.set_secure(config['secure_cookie']);\n};\n\nMixpanelPersistence.prototype.set_disabled = function(disabled) {\n    this.disabled = disabled;\n    if (this.disabled) {\n        this.remove();\n    } else {\n        this.save();\n    }\n};\n\nMixpanelPersistence.prototype.set_cookie_domain = function(cookie_domain) {\n    if (cookie_domain !== this.cookie_domain) {\n        this.remove();\n        this.cookie_domain = cookie_domain;\n        this.save();\n    }\n};\n\nMixpanelPersistence.prototype.set_cross_site = function(cross_site) {\n    if (cross_site !== this.cross_site) {\n        this.cross_site = cross_site;\n        this.remove();\n        this.save();\n    }\n};\n\nMixpanelPersistence.prototype.set_cross_subdomain = function(cross_subdomain) {\n    if (cross_subdomain !== this.cross_subdomain) {\n        this.cross_subdomain = cross_subdomain;\n        this.remove();\n        this.save();\n    }\n};\n\nMixpanelPersistence.prototype.get_cross_subdomain = function() {\n    return this.cross_subdomain;\n};\n\nMixpanelPersistence.prototype.set_secure = function(secure) {\n    if (secure !== this.secure) {\n        this.secure = secure ? true : false;\n        this.remove();\n        this.save();\n    }\n};\n\nMixpanelPersistence.prototype._add_to_people_queue = function(queue, data) {\n    var q_key = this._get_queue_key(queue),\n        q_data = data[queue],\n        set_q = this._get_or_create_queue(SET_ACTION),\n        set_once_q = this._get_or_create_queue(SET_ONCE_ACTION),\n        unset_q = this._get_or_create_queue(UNSET_ACTION),\n        add_q = this._get_or_create_queue(ADD_ACTION),\n        union_q = this._get_or_create_queue(UNION_ACTION),\n        remove_q = this._get_or_create_queue(REMOVE_ACTION, []),\n        append_q = this._get_or_create_queue(APPEND_ACTION, []);\n\n    if (q_key === SET_QUEUE_KEY) {\n        // Update the set queue - we can override any existing values\n        _.extend(set_q, q_data);\n        // if there was a pending increment, override it\n        // with the set.\n        this._pop_from_people_queue(ADD_ACTION, q_data);\n        // if there was a pending union, override it\n        // with the set.\n        this._pop_from_people_queue(UNION_ACTION, q_data);\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    } else if (q_key === SET_ONCE_QUEUE_KEY) {\n        // only queue the data if there is not already a set_once call for it.\n        _.each(q_data, function(v, k) {\n            if (!(k in set_once_q)) {\n                set_once_q[k] = v;\n            }\n        });\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    } else if (q_key === UNSET_QUEUE_KEY) {\n        _.each(q_data, function(prop) {\n\n            // undo previously-queued actions on this key\n            _.each([set_q, set_once_q, add_q, union_q], function(enqueued_obj) {\n                if (prop in enqueued_obj) {\n                    delete enqueued_obj[prop];\n                }\n            });\n            _.each(append_q, function(append_obj) {\n                if (prop in append_obj) {\n                    delete append_obj[prop];\n                }\n            });\n\n            unset_q[prop] = true;\n\n        });\n    } else if (q_key === ADD_QUEUE_KEY) {\n        _.each(q_data, function(v, k) {\n            // If it exists in the set queue, increment\n            // the value\n            if (k in set_q) {\n                set_q[k] += v;\n            } else {\n                // If it doesn't exist, update the add\n                // queue\n                if (!(k in add_q)) {\n                    add_q[k] = 0;\n                }\n                add_q[k] += v;\n            }\n        }, this);\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    } else if (q_key === UNION_QUEUE_KEY) {\n        _.each(q_data, function(v, k) {\n            if (_.isArray(v)) {\n                if (!(k in union_q)) {\n                    union_q[k] = [];\n                }\n                // We may send duplicates, the server will dedup them.\n                union_q[k] = union_q[k].concat(v);\n            }\n        });\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    } else if (q_key === REMOVE_QUEUE_KEY) {\n        remove_q.push(q_data);\n        this._pop_from_people_queue(APPEND_ACTION, q_data);\n    } else if (q_key === APPEND_QUEUE_KEY) {\n        append_q.push(q_data);\n        this._pop_from_people_queue(UNSET_ACTION, q_data);\n    }\n\n    console$1.log('MIXPANEL PEOPLE REQUEST (QUEUED, PENDING IDENTIFY):');\n    console$1.log(data);\n\n    this.save();\n};\n\nMixpanelPersistence.prototype._pop_from_people_queue = function(queue, data) {\n    var q = this._get_queue(queue);\n    if (!_.isUndefined(q)) {\n        _.each(data, function(v, k) {\n            if (queue === APPEND_ACTION || queue === REMOVE_ACTION) {\n                // list actions: only remove if both k+v match\n                // e.g. remove should not override append in a case like\n                // append({foo: 'bar'}); remove({foo: 'qux'})\n                _.each(q, function(queued_action) {\n                    if (queued_action[k] === v) {\n                        delete queued_action[k];\n                    }\n                });\n            } else {\n                delete q[k];\n            }\n        }, this);\n\n        this.save();\n    }\n};\n\nMixpanelPersistence.prototype._get_queue_key = function(queue) {\n    if (queue === SET_ACTION) {\n        return SET_QUEUE_KEY;\n    } else if (queue === SET_ONCE_ACTION) {\n        return SET_ONCE_QUEUE_KEY;\n    } else if (queue === UNSET_ACTION) {\n        return UNSET_QUEUE_KEY;\n    } else if (queue === ADD_ACTION) {\n        return ADD_QUEUE_KEY;\n    } else if (queue === APPEND_ACTION) {\n        return APPEND_QUEUE_KEY;\n    } else if (queue === REMOVE_ACTION) {\n        return REMOVE_QUEUE_KEY;\n    } else if (queue === UNION_ACTION) {\n        return UNION_QUEUE_KEY;\n    } else {\n        console$1.error('Invalid queue:', queue);\n    }\n};\n\nMixpanelPersistence.prototype._get_queue = function(queue) {\n    return this['props'][this._get_queue_key(queue)];\n};\nMixpanelPersistence.prototype._get_or_create_queue = function(queue, default_val) {\n    var key = this._get_queue_key(queue);\n    default_val = _.isUndefined(default_val) ? {} : default_val;\n\n    return this['props'][key] || (this['props'][key] = default_val);\n};\n\nMixpanelPersistence.prototype.set_event_timer = function(event_name, timestamp) {\n    var timers = this['props'][EVENT_TIMERS_KEY] || {};\n    timers[event_name] = timestamp;\n    this['props'][EVENT_TIMERS_KEY] = timers;\n    this.save();\n};\n\nMixpanelPersistence.prototype.remove_event_timer = function(event_name) {\n    var timers = this['props'][EVENT_TIMERS_KEY] || {};\n    var timestamp = timers[event_name];\n    if (!_.isUndefined(timestamp)) {\n        delete this['props'][EVENT_TIMERS_KEY][event_name];\n        this.save();\n    }\n    return timestamp;\n};\n\n/*\n * This file is a js implementation for a subset in eval_node.c\n */\n\n/*\n * Constants\n */\n// Metadata keys\n/** @const */   var OPERATOR_KEY                  = 'operator';\n/** @const */   var PROPERTY_KEY                  = 'property';\n/** @const */   var WINDOW_KEY                    = 'window';\n/** @const */   var UNIT_KEY                      = 'unit';\n/** @const */   var VALUE_KEY                     = 'value';\n/** @const */   var HOUR_KEY                      = 'hour';\n/** @const */   var DAY_KEY                       = 'day';\n/** @const */   var WEEK_KEY                      = 'week';\n/** @const */   var MONTH_KEY                     = 'month';\n\n// Operands\n/** @const */   var EVENT_PROPERTY         = 'event';\n/** @const */   var LITERAL_PROPERTY       = 'literal';\n\n// Binary Operators\n/** @const */   var AND_OPERATOR           = 'and';\n/** @const */   var OR_OPERATOR            = 'or';\n/** @const */   var IN_OPERATOR            = 'in';\n/** @const */   var NOT_IN_OPERATOR        = 'not in';\n/** @const */   var PLUS_OPERATOR          = '+';\n/** @const */   var MINUS_OPERATOR         = '-';\n/** @const */   var MUL_OPERATOR           = '*';\n/** @const */   var DIV_OPERATOR           = '/';\n/** @const */   var MOD_OPERATOR           = '%';\n/** @const */   var EQUALS_OPERATOR        = '==';\n/** @const */   var NOT_EQUALS_OPERATOR    = '!=';\n/** @const */   var GREATER_OPERATOR       = '>';\n/** @const */   var LESS_OPERATOR          = '<';\n/** @const */   var GREATER_EQUAL_OPERATOR = '>=';\n/** @const */   var LESS_EQUAL_OPERATOR    = '<=';\n\n// Typecast Operators\n/** @const */   var BOOLEAN_OPERATOR       = 'boolean';\n/** @const */   var DATETIME_OPERATOR      = 'datetime';\n/** @const */   var LIST_OPERATOR          = 'list';\n/** @const */   var NUMBER_OPERATOR        = 'number';\n/** @const */   var STRING_OPERATOR        = 'string';\n\n// Unary Operators\n/** @const */   var NOT_OPERATOR           = 'not';\n/** @const */   var DEFINED_OPERATOR       = 'defined';\n/** @const */   var NOT_DEFINED_OPERATOR   = 'not defined';\n\n// Special literals\n/** @const */   var NOW_LITERAL            = 'now';\n\n// Type cast functions\nfunction toNumber(value) {\n    if (value === null) {\n        return null;\n    }\n\n    switch (typeof(value)) {\n        case 'object':\n            if (_.isDate(value) && value.getTime() >= 0) {\n                return value.getTime();\n            }\n            return null;\n        case 'boolean':\n            return Number(value);\n        case 'number':\n            return value;\n        case 'string':\n            value = Number(value);\n            if (!isNaN(value)) {\n                return value;\n            }\n            return 0;\n    }\n    return null;\n}\n\nfunction evaluateNumber(op, properties) {\n    if (!op['operator'] || op['operator'] !== NUMBER_OPERATOR || !op['children'] || op['children'].length !== 1) {\n        throw ('Invalid cast operator: number ' + op);\n    }\n\n    return toNumber(evaluateSelector(op['children'][0], properties));\n}\n\nfunction toBoolean(value) {\n    if (value === null) {\n        return false;\n    }\n\n    switch (typeof value) {\n        case 'boolean':\n            return value;\n        case 'number':\n            return value !== 0.0;\n        case 'string':\n            return value.length > 0;\n        case 'object':\n            if (_.isArray(value) && value.length > 0) {\n                return true;\n            }\n            if (_.isDate(value) && value.getTime() > 0) {\n                return true;\n            }\n            if (_.isObject(value) && !_.isEmptyObject(value)) {\n                return true;\n            }\n            return false;\n    }\n    return false;\n}\n\nfunction evaluateBoolean(op, properties) {\n    if (!op['operator'] || op['operator'] !== BOOLEAN_OPERATOR || !op['children'] || op['children'].length !== 1) {\n        throw ('Invalid cast operator: boolean ' + op);\n    }\n\n    return toBoolean(evaluateSelector(op['children'][0], properties));\n}\n\nfunction evaluateDateTime(op, properties) {\n    if (!op['operator'] || op['operator'] !== DATETIME_OPERATOR || !op['children'] || op['children'].length !== 1) {\n        throw ('Invalid cast operator: datetime ' + op);\n    }\n\n    var v = evaluateSelector(op['children'][0], properties);\n    if (v === null) {\n        return null;\n    }\n\n    switch (typeof(v)) {\n        case 'number':\n        case 'string':\n            var d = new Date(v);\n            if (isNaN(d.getTime())) {\n                return null;\n            }\n            return d;\n        case 'object':\n            if (_.isDate(v)) {\n                return v;\n            }\n    }\n\n    return null;\n}\n\nfunction evaluateList(op, properties) {\n    if (!op['operator'] || op['operator'] !== LIST_OPERATOR || !op['children'] || op['children'].length !== 1) {\n        throw ('Invalid cast operator: list ' + op);\n    }\n\n    var v = evaluateSelector(op['children'][0], properties);\n    if (v === null) {\n        return null;\n    }\n\n    if (_.isArray(v)) {\n        return v;\n    }\n\n    return null;\n}\n\nfunction evaluateString(op, properties) {\n    if (!op['operator'] || op['operator'] !== STRING_OPERATOR || !op['children'] || op['children'].length !== 1) {\n        throw ('Invalid cast operator: string ' + op);\n    }\n\n    var v = evaluateSelector(op['children'][0], properties);\n    switch (typeof(v)) {\n        case 'object':\n            if (_.isDate(v)) {\n                return v.toJSON();\n            }\n            return JSON.stringify(v);\n    }\n    return String(v);\n}\n\n// Operators\nfunction evaluateAnd(op, properties) {\n    if (!op['operator'] || op['operator'] !== AND_OPERATOR || !op['children'] || op['children'].length !== 2) {\n        throw ('Invalid operator: AND ' + op);\n    }\n\n    return toBoolean(evaluateSelector(op['children'][0], properties)) && toBoolean(evaluateSelector(op['children'][1], properties));\n}\n\nfunction evaluateOr(op, properties) {\n    if (!op['operator'] || op['operator'] !== OR_OPERATOR || !op['children'] || op['children'].length !== 2) {\n        throw ('Invalid operator: OR ' + op);\n    }\n\n    return toBoolean(evaluateSelector(op['children'][0], properties)) || toBoolean(evaluateSelector(op['children'][1], properties));\n}\n\nfunction evaluateIn(op, properties) {\n    if (!op['operator'] || [IN_OPERATOR, NOT_IN_OPERATOR].indexOf(op['operator']) === -1 || !op['children'] || op['children'].length !== 2) {\n        throw ('Invalid operator: IN/NOT IN ' + op);\n    }\n    var leftValue = evaluateSelector(op['children'][0], properties);\n    var rightValue = evaluateSelector(op['children'][1], properties);\n\n    if (!_.isArray(rightValue) && !_.isString(rightValue)) {\n        throw ('Invalid operand for operator IN: invalid type' + rightValue);\n    }\n\n    var v = rightValue.indexOf(leftValue) > -1;\n    if (op['operator'] === NOT_IN_OPERATOR) {\n        return !v;\n    }\n    return v;\n}\n\nfunction evaluatePlus(op, properties) {\n    if (!op['operator'] || op['operator'] !== PLUS_OPERATOR || !op['children'] || op['children'].length < 2) {\n        throw ('Invalid operator: PLUS ' + op);\n    }\n    var l = evaluateSelector(op['children'][0], properties);\n    var r = evaluateSelector(op['children'][1], properties);\n\n    if (typeof l === 'number' && typeof r === 'number') {\n        return l + r;\n    }\n    if (typeof l === 'string' && typeof r === 'string') {\n        return l + r;\n    }\n    return null;\n}\n\nfunction evaluateArithmetic(op, properties) {\n    if (!op['operator'] || [MINUS_OPERATOR, MUL_OPERATOR, DIV_OPERATOR, MOD_OPERATOR].indexOf(op['operator']) === -1 ||\n        !op['children'] || op['children'].length < 2) {\n        throw ('Invalid arithmetic operator ' + op);\n    }\n\n    var l = evaluateSelector(op['children'][0], properties);\n    var r = evaluateSelector(op['children'][1], properties);\n\n    if (typeof l === 'number' && typeof r === 'number') {\n        switch (op['operator']) {\n            case MINUS_OPERATOR:\n                return l - r;\n            case MUL_OPERATOR:\n                return l * r;\n            case DIV_OPERATOR:\n                if (r !== 0) {\n                    return l / r;\n                }\n                return null;\n            case MOD_OPERATOR:\n                if (r === 0) {\n                    return null;\n                }\n                if (l === 0) {\n                    return 0;\n                }\n                if ((l < 0 && r > 0) || (l > 0 && r < 0)) {\n                    /* Mimic python modulo - result takes sign of the divisor\n                     * if one operand is negative. */\n                    return -(Math.floor(l / r) * r - l);\n                }\n                return l % r;\n            default:\n                throw('Unknown operator: ' + op['operator']);\n        }\n    }\n\n    return null;\n}\n\nfunction _isArrayEqual(l, r) {\n    if (l === r) return true;\n    if (l === null || r === null) return false;\n    if (l.length !== r.length) return false;\n\n    for (var i = 0; i < l.length; i++) {\n        if (l[i] !== r[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction _isEqual(l, r) {\n    if ( l === null && l === r ) {\n        return true;\n    }\n    if (typeof l === typeof r) {\n        switch (typeof l) {\n            case 'number':\n            case 'string':\n            case 'boolean':\n                return l === r;\n            case 'object':\n                if (_.isArray(l) && _.isArray(r)) {\n                    return _isArrayEqual(l, r);\n                }\n                if (_.isDate(l) && _.isDate(r)) {\n                    return l.getTime() === r.getTime();\n                }\n                if (_.isObject(l) && _.isObject(r)) {\n                    return JSON.stringify(l) === JSON.stringify(r);\n                }\n        }\n    }\n    return false;\n}\n\nfunction evaluateEquality(op, properties) {\n    if (!op['operator'] || [EQUALS_OPERATOR, NOT_EQUALS_OPERATOR].indexOf(op['operator']) === -1 || !op['children'] || op['children'].length !== 2) {\n        throw ('Invalid equality operator ' + op);\n    }\n\n    var v = _isEqual(evaluateSelector(op['children'][0], properties), evaluateSelector(op['children'][1], properties));\n\n    switch (op['operator']) {\n        case EQUALS_OPERATOR:\n            return v;\n        case NOT_EQUALS_OPERATOR:\n            return !v;\n    }\n}\n\nfunction evaluateComparison(op, properties) {\n    if (!op['operator'] ||\n        [GREATER_OPERATOR, GREATER_EQUAL_OPERATOR, LESS_OPERATOR, LESS_EQUAL_OPERATOR].indexOf(op['operator']) === -1 ||\n        !op['children'] || op['children'].length !== 2) {\n        throw ('Invalid comparison operator ' + op);\n    }\n    var l = evaluateSelector(op['children'][0], properties);\n    var r = evaluateSelector(op['children'][1], properties);\n\n    if (typeof(l) === typeof(r)) {\n        if (typeof(r) === 'number' || _.isDate(r)) {\n            l = toNumber(l);\n            r = toNumber(r);\n            switch (op['operator']) {\n                case GREATER_OPERATOR:\n                    return l > r;\n                case GREATER_EQUAL_OPERATOR:\n                    return l >= r;\n                case LESS_OPERATOR:\n                    return l < r;\n                case LESS_EQUAL_OPERATOR:\n                    return l <= r;\n            }\n        } else if (typeof(r) === 'string') {\n            var compare = l.localeCompare(r);\n            switch (op['operator']) {\n                case GREATER_OPERATOR:\n                    return compare > 0;\n                case GREATER_EQUAL_OPERATOR:\n                    return compare >= 0;\n                case LESS_OPERATOR:\n                    return compare < 0;\n                case LESS_EQUAL_OPERATOR:\n                    return compare <= 0;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction evaluateDefined(op, properties) {\n    if (!op['operator'] || [DEFINED_OPERATOR, NOT_DEFINED_OPERATOR].indexOf(op['operator']) === -1 ||\n        !op['children'] || op['children'].length !== 1) {\n        throw ('Invalid defined/not defined operator: ' + op);\n    }\n\n    var b = evaluateSelector(op['children'][0], properties) !== null;\n    if (op['operator'] === NOT_DEFINED_OPERATOR) {\n        return !b;\n    }\n\n    return b;\n}\n\nfunction evaluateNot(op, properties) {\n    if (!op['operator'] || op['operator'] !== NOT_OPERATOR || !op['children'] || op['children'].length !== 1) {\n        throw ('Invalid not operator: ' + op);\n    }\n\n    var v = evaluateSelector(op['children'][0], properties);\n    if (v === null) {\n        return true;\n    }\n\n    if (typeof(v) === 'boolean') {\n        return !v;\n    }\n\n    return null;\n}\n\nfunction evaluateOperator(op, properties) {\n    if (!op['operator']) {\n        throw ('Invalid operator: operator key missing ' + op);\n    }\n\n    switch (op['operator']) {\n        case AND_OPERATOR:\n            return evaluateAnd(op, properties);\n        case OR_OPERATOR:\n            return evaluateOr(op, properties);\n        case IN_OPERATOR:\n        case NOT_IN_OPERATOR:\n            return evaluateIn(op, properties);\n        case PLUS_OPERATOR:\n            return evaluatePlus(op, properties);\n        case MINUS_OPERATOR:\n        case MUL_OPERATOR:\n        case DIV_OPERATOR:\n        case MOD_OPERATOR:\n            return evaluateArithmetic(op, properties);\n        case EQUALS_OPERATOR:\n        case NOT_EQUALS_OPERATOR:\n            return evaluateEquality(op, properties);\n        case GREATER_OPERATOR:\n        case LESS_OPERATOR:\n        case GREATER_EQUAL_OPERATOR:\n        case LESS_EQUAL_OPERATOR:\n            return evaluateComparison(op, properties);\n        case BOOLEAN_OPERATOR:\n            return evaluateBoolean(op, properties);\n        case DATETIME_OPERATOR:\n            return evaluateDateTime(op, properties);\n        case LIST_OPERATOR:\n            return evaluateList(op, properties);\n        case NUMBER_OPERATOR:\n            return evaluateNumber(op, properties);\n        case STRING_OPERATOR:\n            return evaluateString(op, properties);\n        case DEFINED_OPERATOR:\n        case NOT_DEFINED_OPERATOR:\n            return evaluateDefined(op, properties);\n        case NOT_OPERATOR:\n            return evaluateNot(op, properties);\n    }\n}\n\nfunction evaluateWindow(value) {\n    var win = value[WINDOW_KEY];\n    if (!win || !win[UNIT_KEY] || !win[VALUE_KEY]) {\n        throw('Invalid window: missing required keys ' + JSON.stringify(value));\n    }\n    var out = new Date();\n    switch (win[UNIT_KEY]) {\n        case HOUR_KEY:\n            out.setTime(out.getTime() + (win[VALUE_KEY]*-1*60*60*1000));\n            break;\n        case DAY_KEY:\n            out.setTime(out.getTime() + (win[VALUE_KEY]*-1*24*60*60*1000));\n            break;\n        case WEEK_KEY:\n            out.setTime(out.getTime() + (win[VALUE_KEY]*-1*7*24*60*60*1000));\n            break;\n        case MONTH_KEY:\n            out.setTime(out.getTime() + (win[VALUE_KEY]*-1*30*24*60*60*1000));\n            break;\n        default:\n            throw('Invalid unit: ' + win[UNIT_KEY]);\n    }\n\n    return out;\n}\n\nfunction evaluateOperand(op, properties) {\n    if (!op['property'] || !op['value']) {\n        throw('Invalid operand: missing required keys ' + op);\n    }\n    switch (op['property']) {\n        case EVENT_PROPERTY:\n            if (properties[op['value']] !== undefined) {\n                return properties[op['value']];\n            }\n            return null;\n        case LITERAL_PROPERTY:\n            if (op['value'] === NOW_LITERAL) {\n                return new Date();\n            }\n            if (typeof(op['value']) === 'object') {\n                return evaluateWindow(op['value']);\n            }\n            return op['value'];\n        default:\n            throw('Invalid operand: Invalid property type ' + op['property']);\n    }\n}\n\nfunction evaluateSelector(filters, properties) {\n    if (filters[PROPERTY_KEY]) {\n        return evaluateOperand(filters, properties);\n    }\n    if (filters[OPERATOR_KEY]) {\n        return evaluateOperator(filters, properties);\n    }\n}\n\n// Internal class for notification display\n\nvar MixpanelNotification = function(notif_data, mixpanel_instance) {\n    _.bind_instance_methods(this);\n\n    this.mixpanel          = mixpanel_instance;\n    this.persistence       = this.mixpanel['persistence'];\n    this.resource_protocol = this.mixpanel.get_config('inapp_protocol');\n    this.cdn_host          = this.mixpanel.get_config('cdn');\n\n    this.campaign_id = _.escapeHTML(notif_data['id']);\n    this.message_id  = _.escapeHTML(notif_data['message_id']);\n\n    this.body            = (_.escapeHTML(notif_data['body']) || '').replace(/\\n/g, '<br/>');\n    this.cta             = _.escapeHTML(notif_data['cta']) || 'Close';\n    this.notif_type      = _.escapeHTML(notif_data['type']) || 'takeover';\n    this.style           = _.escapeHTML(notif_data['style']) || 'light';\n    this.title           = _.escapeHTML(notif_data['title']) || '';\n    this.video_width     = MixpanelNotification.VIDEO_WIDTH;\n    this.video_height    = MixpanelNotification.VIDEO_HEIGHT;\n\n    this.display_triggers = notif_data['display_triggers'] || [];\n\n    // These fields are url-sanitized in the backend already.\n    this.dest_url        = notif_data['cta_url'] || null;\n    this.image_url       = notif_data['image_url'] || null;\n    this.thumb_image_url = notif_data['thumb_image_url'] || null;\n    this.video_url       = notif_data['video_url'] || null;\n\n    if (this.thumb_image_url && this.thumb_image_url.indexOf('//') === 0) {\n        this.thumb_image_url = this.thumb_image_url.replace('//', this.resource_protocol);\n    }\n\n    this.clickthrough = true;\n    if (!this.dest_url) {\n        this.dest_url = '#dismiss';\n        this.clickthrough = false;\n    }\n\n    this.mini = this.notif_type === 'mini';\n    if (!this.mini) {\n        this.notif_type = 'takeover';\n    }\n    this.notif_width = !this.mini ? MixpanelNotification.NOTIF_WIDTH : MixpanelNotification.NOTIF_WIDTH_MINI;\n\n    this._set_client_config();\n    this.imgs_to_preload = this._init_image_html();\n    this._init_video();\n};\n\nMixpanelNotification.ANIM_TIME         = 200;\nMixpanelNotification.MARKUP_PREFIX     = 'mixpanel-notification';\nMixpanelNotification.BG_OPACITY        = 0.6;\nMixpanelNotification.NOTIF_TOP         = 25;\nMixpanelNotification.NOTIF_START_TOP   = 200;\nMixpanelNotification.NOTIF_WIDTH       = 388;\nMixpanelNotification.NOTIF_WIDTH_MINI  = 420;\nMixpanelNotification.NOTIF_HEIGHT_MINI = 85;\nMixpanelNotification.THUMB_BORDER_SIZE = 5;\nMixpanelNotification.THUMB_IMG_SIZE    = 60;\nMixpanelNotification.THUMB_OFFSET      = Math.round(MixpanelNotification.THUMB_IMG_SIZE / 2);\nMixpanelNotification.VIDEO_WIDTH       = 595;\nMixpanelNotification.VIDEO_HEIGHT      = 334;\n\nMixpanelNotification.prototype.show = function() {\n    var self = this;\n    this._set_client_config();\n\n    // don't display until HTML body exists\n    if (!this.body_el) {\n        setTimeout(function() { self.show(); }, 300);\n        return;\n    }\n\n    this._init_styles();\n    this._init_notification_el();\n\n    // wait for any images to load before showing notification\n    this._preload_images(this._attach_and_animate);\n};\n\nMixpanelNotification.prototype.dismiss = _.safewrap(function() {\n    if (!this.marked_as_shown) {\n        // unexpected condition: user interacted with notif even though we didn't consider it\n        // visible (see _mark_as_shown()); send tracking signals to mark delivery\n        this._mark_delivery({'invisible': true});\n    }\n\n    var exiting_el = this.showing_video ? this._get_el('video') : this._get_notification_display_el();\n    if (this.use_transitions) {\n        this._remove_class('bg', 'visible');\n        this._add_class(exiting_el, 'exiting');\n        setTimeout(this._remove_notification_el, MixpanelNotification.ANIM_TIME);\n    } else {\n        var notif_attr, notif_start, notif_goal;\n        if (this.mini) {\n            notif_attr  = 'right';\n            notif_start = 20;\n            notif_goal  = -100;\n        } else {\n            notif_attr  = 'top';\n            notif_start = MixpanelNotification.NOTIF_TOP;\n            notif_goal  = MixpanelNotification.NOTIF_START_TOP + MixpanelNotification.NOTIF_TOP;\n        }\n        this._animate_els([\n            {\n                el:    this._get_el('bg'),\n                attr:  'opacity',\n                start: MixpanelNotification.BG_OPACITY,\n                goal:  0.0\n            },\n            {\n                el:    exiting_el,\n                attr:  'opacity',\n                start: 1.0,\n                goal:  0.0\n            },\n            {\n                el:    exiting_el,\n                attr:  notif_attr,\n                start: notif_start,\n                goal:  notif_goal\n            }\n        ], MixpanelNotification.ANIM_TIME, this._remove_notification_el);\n    }\n});\n\nMixpanelNotification.prototype._add_class = _.safewrap(function(el, class_name) {\n    class_name = MixpanelNotification.MARKUP_PREFIX + '-' + class_name;\n    if (typeof el === 'string') {\n        el = this._get_el(el);\n    }\n    if (!el.className) {\n        el.className = class_name;\n    } else if (!~(' ' + el.className + ' ').indexOf(' ' + class_name + ' ')) {\n        el.className += ' ' + class_name;\n    }\n});\nMixpanelNotification.prototype._remove_class = _.safewrap(function(el, class_name) {\n    class_name = MixpanelNotification.MARKUP_PREFIX + '-' + class_name;\n    if (typeof el === 'string') {\n        el = this._get_el(el);\n    }\n    if (el.className) {\n        el.className = (' ' + el.className + ' ')\n            .replace(' ' + class_name + ' ', '')\n            .replace(/^[\\s\\xA0]+/, '')\n            .replace(/[\\s\\xA0]+$/, '');\n    }\n});\n\nMixpanelNotification.prototype._animate_els = _.safewrap(function(anims, mss, done_cb, start_time) {\n    var self = this,\n        in_progress = false,\n        ai, anim,\n        cur_time = 1 * new Date(), time_diff;\n\n    start_time = start_time || cur_time;\n    time_diff = cur_time - start_time;\n\n    for (ai = 0; ai < anims.length; ai++) {\n        anim = anims[ai];\n        if (typeof anim.val === 'undefined') {\n            anim.val = anim.start;\n        }\n        if (anim.val !== anim.goal) {\n            in_progress = true;\n            var anim_diff = anim.goal - anim.start,\n                anim_dir = anim.goal >= anim.start ? 1 : -1;\n            anim.val = anim.start + anim_diff * time_diff / mss;\n            if (anim.attr !== 'opacity') {\n                anim.val = Math.round(anim.val);\n            }\n            if ((anim_dir > 0 && anim.val >= anim.goal) || (anim_dir < 0 && anim.val <= anim.goal)) {\n                anim.val = anim.goal;\n            }\n        }\n    }\n    if (!in_progress) {\n        if (done_cb) {\n            done_cb();\n        }\n        return;\n    }\n\n    for (ai = 0; ai < anims.length; ai++) {\n        anim = anims[ai];\n        if (anim.el) {\n            var suffix = anim.attr === 'opacity' ? '' : 'px';\n            anim.el.style[anim.attr] = String(anim.val) + suffix;\n        }\n    }\n    setTimeout(function() { self._animate_els(anims, mss, done_cb, start_time); }, 10);\n});\n\nMixpanelNotification.prototype._attach_and_animate = _.safewrap(function() {\n    var self = this;\n\n    // no possibility to double-display\n    if (this.shown || this._get_shown_campaigns()[this.campaign_id]) {\n        return;\n    }\n    this.shown = true;\n\n    this.body_el.appendChild(this.notification_el);\n    setTimeout(function() {\n        var notif_el = self._get_notification_display_el();\n        if (self.use_transitions) {\n            if (!self.mini) {\n                self._add_class('bg', 'visible');\n            }\n            self._add_class(notif_el, 'visible');\n            self._mark_as_shown();\n        } else {\n            var notif_attr, notif_start, notif_goal;\n            if (self.mini) {\n                notif_attr  = 'right';\n                notif_start = -100;\n                notif_goal  = 20;\n            } else {\n                notif_attr  = 'top';\n                notif_start = MixpanelNotification.NOTIF_START_TOP + MixpanelNotification.NOTIF_TOP;\n                notif_goal  = MixpanelNotification.NOTIF_TOP;\n            }\n            self._animate_els([\n                {\n                    el:    self._get_el('bg'),\n                    attr:  'opacity',\n                    start: 0.0,\n                    goal:  MixpanelNotification.BG_OPACITY\n                },\n                {\n                    el:    notif_el,\n                    attr:  'opacity',\n                    start: 0.0,\n                    goal:  1.0\n                },\n                {\n                    el:    notif_el,\n                    attr:  notif_attr,\n                    start: notif_start,\n                    goal:  notif_goal\n                }\n            ], MixpanelNotification.ANIM_TIME, self._mark_as_shown);\n        }\n    }, 100);\n    _.register_event(self._get_el('cancel'), 'click', function(e) {\n        e.preventDefault();\n        self.dismiss();\n    });\n    var click_el = self._get_el('button') ||\n                        self._get_el('mini-content');\n    _.register_event(click_el, 'click', function(e) {\n        e.preventDefault();\n        if (self.show_video) {\n            self._track_event('$campaign_open', {'$resource_type': 'video'});\n            self._switch_to_video();\n        } else {\n            self.dismiss();\n            if (self.clickthrough) {\n                var tracking_cb = null;\n                if (self.mixpanel.get_config('inapp_link_new_window')) {\n                    window.open(self.dest_url);\n                } else {\n                    tracking_cb = function() {\n                        window.location.href = self.dest_url;\n                    };\n                }\n                self._track_event('$campaign_open', {'$resource_type': 'link'}, tracking_cb);\n            }\n        }\n    });\n});\n\nMixpanelNotification.prototype._get_el = function(id) {\n    return document.getElementById(MixpanelNotification.MARKUP_PREFIX + '-' + id);\n};\n\nMixpanelNotification.prototype._get_notification_display_el = function() {\n    return this._get_el(this.notif_type);\n};\n\nMixpanelNotification.prototype._get_shown_campaigns = function() {\n    return this.persistence['props'][CAMPAIGN_IDS_KEY] || (this.persistence['props'][CAMPAIGN_IDS_KEY] = {});\n};\n\nMixpanelNotification.prototype._matches_event_data = _.safewrap(function(event_data) {\n    var event_name = event_data['event'] || '';\n    for (var i = 0; i < this.display_triggers.length; i++) {\n        var display_trigger = this.display_triggers[i];\n        var match_event = display_trigger['event'] || '';\n        if (match_event === '$any_event' || event_name === display_trigger['event']) {\n            if (display_trigger['selector'] && !_.isEmptyObject(display_trigger['selector'])) {\n                if (evaluateSelector(display_trigger['selector'], event_data['properties'])) {\n                    return true;\n                }\n            } else {\n                return true;\n            }\n        }\n    }\n    return false;\n});\n\n\nMixpanelNotification.prototype._browser_lte = function(browser, version) {\n    return this.browser_versions[browser] && this.browser_versions[browser] <= version;\n};\n\nMixpanelNotification.prototype._init_image_html = function() {\n    var imgs_to_preload = [];\n\n    if (!this.mini) {\n        if (this.image_url) {\n            imgs_to_preload.push(this.image_url);\n            this.img_html = '<img id=\"img\" src=\"' + this.image_url + '\"/>';\n        } else {\n            this.img_html = '';\n        }\n        if (this.thumb_image_url) {\n            imgs_to_preload.push(this.thumb_image_url);\n            this.thumb_img_html =\n                    '<div id=\"thumbborder-wrapper\"><div id=\"thumbborder\"></div></div>' +\n                    '<img id=\"thumbnail\"' +\n                        ' src=\"' + this.thumb_image_url + '\"' +\n                        ' width=\"' + MixpanelNotification.THUMB_IMG_SIZE + '\"' +\n                        ' height=\"' + MixpanelNotification.THUMB_IMG_SIZE + '\"' +\n                    '/>' +\n                    '<div id=\"thumbspacer\"></div>';\n        } else {\n            this.thumb_img_html = '';\n        }\n    } else {\n        this.thumb_image_url = this.thumb_image_url || (this.cdn_host + '/site_media/images/icons/notifications/mini-news-dark.png');\n        imgs_to_preload.push(this.thumb_image_url);\n    }\n\n    return imgs_to_preload;\n};\n\nMixpanelNotification.prototype._init_notification_el = function() {\n    var notification_html = '';\n    var video_src         = '';\n    var video_html        = '';\n    var cancel_html       = '<div id=\"cancel\">' +\n                                    '<div id=\"cancel-icon\"></div>' +\n                                '</div>';\n\n    this.notification_el = document.createElement('div');\n    this.notification_el.id = MixpanelNotification.MARKUP_PREFIX + '-wrapper';\n    if (!this.mini) {\n        // TAKEOVER notification\n        var close_html  = (this.clickthrough || this.show_video) ? '' : '<div id=\"button-close\"></div>',\n            play_html   = this.show_video ? '<div id=\"button-play\"></div>' : '';\n        if (this._browser_lte('ie', 7)) {\n            close_html = '';\n            play_html = '';\n        }\n        notification_html =\n                '<div id=\"takeover\">' +\n                    this.thumb_img_html +\n                    '<div id=\"mainbox\">' +\n                        cancel_html +\n                        '<div id=\"content\">' +\n                            this.img_html +\n                            '<div id=\"title\">' + this.title + '</div>' +\n                            '<div id=\"body\">' + this.body + '</div>' +\n                            '<div id=\"tagline\">' +\n                                '<a href=\"http://mixpanel.com?from=inapp\" target=\"_blank\">POWERED BY MIXPANEL</a>' +\n                            '</div>' +\n                        '</div>' +\n                        '<div id=\"button\">' +\n                            close_html +\n                            '<a id=\"button-link\" href=\"' + this.dest_url + '\">' + this.cta + '</a>' +\n                            play_html +\n                        '</div>' +\n                    '</div>' +\n                '</div>';\n    } else {\n        // MINI notification\n        notification_html =\n                '<div id=\"mini\">' +\n                    '<div id=\"mainbox\">' +\n                        cancel_html +\n                        '<div id=\"mini-content\">' +\n                            '<div id=\"mini-icon\">' +\n                                '<div id=\"mini-icon-img\"></div>' +\n                            '</div>' +\n                            '<div id=\"body\">' +\n                                '<div id=\"body-text\"><div>' + this.body + '</div></div>' +\n                            '</div>' +\n                        '</div>' +\n                    '</div>' +\n                    '<div id=\"mini-border\"></div>' +\n                '</div>';\n    }\n    if (this.youtube_video) {\n        video_src = this.resource_protocol + 'www.youtube.com/embed/' + this.youtube_video +\n                '?wmode=transparent&showinfo=0&modestbranding=0&rel=0&autoplay=1&loop=0&vq=hd1080';\n        if (this.yt_custom) {\n            video_src += '&enablejsapi=1&html5=1&controls=0';\n            video_html =\n                    '<div id=\"video-controls\">' +\n                        '<div id=\"video-progress\" class=\"video-progress-el\">' +\n                            '<div id=\"video-progress-total\" class=\"video-progress-el\"></div>' +\n                            '<div id=\"video-elapsed\" class=\"video-progress-el\"></div>' +\n                        '</div>' +\n                        '<div id=\"video-time\" class=\"video-progress-el\"></div>' +\n                    '</div>';\n        }\n    } else if (this.vimeo_video) {\n        video_src = this.resource_protocol + 'player.vimeo.com/video/' + this.vimeo_video + '?autoplay=1&title=0&byline=0&portrait=0';\n    }\n    if (this.show_video) {\n        this.video_iframe =\n                '<iframe id=\"' + MixpanelNotification.MARKUP_PREFIX + '-video-frame\" ' +\n                    'width=\"' + this.video_width + '\" height=\"' + this.video_height + '\" ' +\n                    ' src=\"' + video_src + '\"' +\n                    ' frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen=\"1\" scrolling=\"no\"' +\n                '></iframe>';\n        video_html =\n                '<div id=\"video-' + (this.flip_animate ? '' : 'no') + 'flip\">' +\n                    '<div id=\"video\">' +\n                        '<div id=\"video-holder\"></div>' +\n                        video_html +\n                    '</div>' +\n                '</div>';\n    }\n    var main_html = video_html + notification_html;\n    if (this.flip_animate) {\n        main_html =\n                (this.mini ? notification_html : '') +\n                '<div id=\"flipcontainer\"><div id=\"flipper\">' +\n                    (this.mini ? video_html : main_html) +\n                '</div></div>';\n    }\n\n    this.notification_el.innerHTML =\n        ('<div id=\"overlay\" class=\"' + this.notif_type + '\">' +\n            '<div id=\"campaignid-' + this.campaign_id + '\">' +\n                '<div id=\"bgwrapper\">' +\n                    '<div id=\"bg\"></div>' +\n                    main_html +\n                '</div>' +\n            '</div>' +\n        '</div>')\n            .replace(/class=\"/g, 'class=\"' + MixpanelNotification.MARKUP_PREFIX + '-')\n            .replace(/id=\"/g, 'id=\"' + MixpanelNotification.MARKUP_PREFIX + '-');\n};\n\nMixpanelNotification.prototype._init_styles = function() {\n    if (this.style === 'dark') {\n        this.style_vals = {\n            bg:             '#1d1f25',\n            bg_actions:     '#282b32',\n            bg_hover:       '#3a4147',\n            bg_light:       '#4a5157',\n            border_gray:    '#32353c',\n            cancel_opacity: '0.4',\n            mini_hover:     '#2a3137',\n            text_title:     '#fff',\n            text_main:      '#9498a3',\n            text_tagline:   '#464851',\n            text_hover:     '#ddd'\n        };\n    } else {\n        this.style_vals = {\n            bg:             '#fff',\n            bg_actions:     '#e7eaee',\n            bg_hover:       '#eceff3',\n            bg_light:       '#f5f5f5',\n            border_gray:    '#e4ecf2',\n            cancel_opacity: '1.0',\n            mini_hover:     '#fafafa',\n            text_title:     '#5c6578',\n            text_main:      '#8b949b',\n            text_tagline:   '#ced9e6',\n            text_hover:     '#7c8598'\n        };\n    }\n    var shadow = '0px 0px 35px 0px rgba(45, 49, 56, 0.7)',\n        video_shadow = shadow,\n        mini_shadow = shadow,\n        thumb_total_size = MixpanelNotification.THUMB_IMG_SIZE + MixpanelNotification.THUMB_BORDER_SIZE * 2,\n        anim_seconds = (MixpanelNotification.ANIM_TIME / 1000) + 's';\n    if (this.mini) {\n        shadow = 'none';\n    }\n\n    // don't display on small viewports\n    var notif_media_queries = {},\n        min_width = MixpanelNotification.NOTIF_WIDTH_MINI + 20;\n    notif_media_queries['@media only screen and (max-width: ' + (min_width - 1) + 'px)'] = {\n        '#overlay': {\n            'display': 'none'\n        }\n    };\n    var notif_styles = {\n        '.flipped': {\n            'transform': 'rotateY(180deg)'\n        },\n        '#overlay': {\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'width': '100%',\n            'height': '100%',\n            'overflow': 'auto',\n            'text-align': 'center',\n            'z-index': '10000',\n            'font-family': '\"Helvetica\", \"Arial\", sans-serif',\n            '-webkit-font-smoothing': 'antialiased',\n            '-moz-osx-font-smoothing': 'grayscale'\n        },\n        '#overlay.mini': {\n            'height': '0',\n            'overflow': 'visible'\n        },\n        '#overlay a': {\n            'width': 'initial',\n            'padding': '0',\n            'text-decoration': 'none',\n            'text-transform': 'none',\n            'color': 'inherit'\n        },\n        '#bgwrapper': {\n            'position': 'relative',\n            'width': '100%',\n            'height': '100%'\n        },\n        '#bg': {\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'width': '100%',\n            'height': '100%',\n            'min-width': this.doc_width * 4 + 'px',\n            'min-height': this.doc_height * 4 + 'px',\n            'background-color': 'black',\n            'opacity': '0.0',\n            '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=60)', // IE8\n            'filter': 'alpha(opacity=60)', // IE5-7\n            'transition': 'opacity ' + anim_seconds\n        },\n        '#bg.visible': {\n            'opacity': MixpanelNotification.BG_OPACITY\n        },\n        '.mini #bg': {\n            'width': '0',\n            'height': '0',\n            'min-width': '0'\n        },\n        '#flipcontainer': {\n            'perspective': '1000px',\n            'position': 'absolute',\n            'width': '100%'\n        },\n        '#flipper': {\n            'position': 'relative',\n            'transform-style': 'preserve-3d',\n            'transition': '0.3s'\n        },\n        '#takeover': {\n            'position': 'absolute',\n            'left': '50%',\n            'width': MixpanelNotification.NOTIF_WIDTH + 'px',\n            'margin-left': Math.round(-MixpanelNotification.NOTIF_WIDTH / 2) + 'px',\n            'backface-visibility': 'hidden',\n            'transform': 'rotateY(0deg)',\n            'opacity': '0.0',\n            'top': MixpanelNotification.NOTIF_START_TOP + 'px',\n            'transition': 'opacity ' + anim_seconds + ', top ' + anim_seconds\n        },\n        '#takeover.visible': {\n            'opacity': '1.0',\n            'top': MixpanelNotification.NOTIF_TOP + 'px'\n        },\n        '#takeover.exiting': {\n            'opacity': '0.0',\n            'top': MixpanelNotification.NOTIF_START_TOP + 'px'\n        },\n        '#thumbspacer': {\n            'height': MixpanelNotification.THUMB_OFFSET + 'px'\n        },\n        '#thumbborder-wrapper': {\n            'position': 'absolute',\n            'top': (-MixpanelNotification.THUMB_BORDER_SIZE) + 'px',\n            'left': (MixpanelNotification.NOTIF_WIDTH / 2 - MixpanelNotification.THUMB_OFFSET - MixpanelNotification.THUMB_BORDER_SIZE) + 'px',\n            'width': thumb_total_size + 'px',\n            'height': (thumb_total_size / 2) + 'px',\n            'overflow': 'hidden'\n        },\n        '#thumbborder': {\n            'position': 'absolute',\n            'width': thumb_total_size + 'px',\n            'height': thumb_total_size + 'px',\n            'border-radius': thumb_total_size + 'px',\n            'background-color': this.style_vals.bg_actions,\n            'opacity': '0.5'\n        },\n        '#thumbnail': {\n            'position': 'absolute',\n            'top': '0px',\n            'left': (MixpanelNotification.NOTIF_WIDTH / 2 - MixpanelNotification.THUMB_OFFSET) + 'px',\n            'width': MixpanelNotification.THUMB_IMG_SIZE + 'px',\n            'height': MixpanelNotification.THUMB_IMG_SIZE + 'px',\n            'overflow': 'hidden',\n            'z-index': '100',\n            'border-radius': MixpanelNotification.THUMB_IMG_SIZE + 'px'\n        },\n        '#mini': {\n            'position': 'absolute',\n            'right': '20px',\n            'top': MixpanelNotification.NOTIF_TOP + 'px',\n            'width': this.notif_width + 'px',\n            'height': MixpanelNotification.NOTIF_HEIGHT_MINI * 2 + 'px',\n            'margin-top': 20 - MixpanelNotification.NOTIF_HEIGHT_MINI + 'px',\n            'backface-visibility': 'hidden',\n            'opacity': '0.0',\n            'transform': 'rotateX(90deg)',\n            'transition': 'opacity 0.3s, transform 0.3s, right 0.3s'\n        },\n        '#mini.visible': {\n            'opacity': '1.0',\n            'transform': 'rotateX(0deg)'\n        },\n        '#mini.exiting': {\n            'opacity': '0.0',\n            'right': '-150px'\n        },\n        '#mainbox': {\n            'border-radius': '4px',\n            'box-shadow': shadow,\n            'text-align': 'center',\n            'background-color': this.style_vals.bg,\n            'font-size': '14px',\n            'color': this.style_vals.text_main\n        },\n        '#mini #mainbox': {\n            'height': MixpanelNotification.NOTIF_HEIGHT_MINI + 'px',\n            'margin-top': MixpanelNotification.NOTIF_HEIGHT_MINI + 'px',\n            'border-radius': '3px',\n            'transition': 'background-color ' + anim_seconds\n        },\n        '#mini-border': {\n            'height': (MixpanelNotification.NOTIF_HEIGHT_MINI + 6) + 'px',\n            'width': (MixpanelNotification.NOTIF_WIDTH_MINI + 6) + 'px',\n            'position': 'absolute',\n            'top': '-3px',\n            'left': '-3px',\n            'margin-top': MixpanelNotification.NOTIF_HEIGHT_MINI + 'px',\n            'border-radius': '6px',\n            'opacity': '0.25',\n            'background-color': '#fff',\n            'z-index': '-1',\n            'box-shadow': mini_shadow\n        },\n        '#mini-icon': {\n            'position': 'relative',\n            'display': 'inline-block',\n            'width': '75px',\n            'height': MixpanelNotification.NOTIF_HEIGHT_MINI + 'px',\n            'border-radius': '3px 0 0 3px',\n            'background-color': this.style_vals.bg_actions,\n            'background': 'linear-gradient(135deg, ' + this.style_vals.bg_light + ' 0%, ' + this.style_vals.bg_actions + ' 100%)',\n            'transition': 'background-color ' + anim_seconds\n        },\n        '#mini:hover #mini-icon': {\n            'background-color': this.style_vals.mini_hover\n        },\n        '#mini:hover #mainbox': {\n            'background-color': this.style_vals.mini_hover\n        },\n        '#mini-icon-img': {\n            'position': 'absolute',\n            'background-image': 'url(' + this.thumb_image_url + ')',\n            'width': '48px',\n            'height': '48px',\n            'top': '20px',\n            'left': '12px'\n        },\n        '#content': {\n            'padding': '30px 20px 0px 20px'\n        },\n        '#mini-content': {\n            'text-align': 'left',\n            'height': MixpanelNotification.NOTIF_HEIGHT_MINI + 'px',\n            'cursor': 'pointer'\n        },\n        '#img': {\n            'width': '328px',\n            'margin-top': '30px',\n            'border-radius': '5px'\n        },\n        '#title': {\n            'max-height': '600px',\n            'overflow': 'hidden',\n            'word-wrap': 'break-word',\n            'padding': '25px 0px 20px 0px',\n            'font-size': '19px',\n            'font-weight': 'bold',\n            'color': this.style_vals.text_title\n        },\n        '#body': {\n            'max-height': '600px',\n            'margin-bottom': '25px',\n            'overflow': 'hidden',\n            'word-wrap': 'break-word',\n            'line-height': '21px',\n            'font-size': '15px',\n            'font-weight': 'normal',\n            'text-align': 'left'\n        },\n        '#mini #body': {\n            'display': 'inline-block',\n            'max-width': '250px',\n            'margin': '0 0 0 30px',\n            'height': MixpanelNotification.NOTIF_HEIGHT_MINI + 'px',\n            'font-size': '16px',\n            'letter-spacing': '0.8px',\n            'color': this.style_vals.text_title\n        },\n        '#mini #body-text': {\n            'display': 'table',\n            'height': MixpanelNotification.NOTIF_HEIGHT_MINI + 'px'\n        },\n        '#mini #body-text div': {\n            'display': 'table-cell',\n            'vertical-align': 'middle'\n        },\n        '#tagline': {\n            'margin-bottom': '15px',\n            'font-size': '10px',\n            'font-weight': '600',\n            'letter-spacing': '0.8px',\n            'color': '#ccd7e0',\n            'text-align': 'left'\n        },\n        '#tagline a': {\n            'color': this.style_vals.text_tagline,\n            'transition': 'color ' + anim_seconds\n        },\n        '#tagline a:hover': {\n            'color': this.style_vals.text_hover\n        },\n        '#cancel': {\n            'position': 'absolute',\n            'right': '0',\n            'width': '8px',\n            'height': '8px',\n            'padding': '10px',\n            'border-radius': '20px',\n            'margin': '12px 12px 0 0',\n            'box-sizing': 'content-box',\n            'cursor': 'pointer',\n            'transition': 'background-color ' + anim_seconds\n        },\n        '#mini #cancel': {\n            'margin': '7px 7px 0 0'\n        },\n        '#cancel-icon': {\n            'width': '8px',\n            'height': '8px',\n            'overflow': 'hidden',\n            'background-image': 'url(' + this.cdn_host + '/site_media/images/icons/notifications/cancel-x.png)',\n            'opacity': this.style_vals.cancel_opacity\n        },\n        '#cancel:hover': {\n            'background-color': this.style_vals.bg_hover\n        },\n        '#button': {\n            'display': 'block',\n            'height': '60px',\n            'line-height': '60px',\n            'text-align': 'center',\n            'background-color': this.style_vals.bg_actions,\n            'border-radius': '0 0 4px 4px',\n            'overflow': 'hidden',\n            'cursor': 'pointer',\n            'transition': 'background-color ' + anim_seconds\n        },\n        '#button-close': {\n            'display': 'inline-block',\n            'width': '9px',\n            'height': '60px',\n            'margin-right': '8px',\n            'vertical-align': 'top',\n            'background-image': 'url(' + this.cdn_host + '/site_media/images/icons/notifications/close-x-' + this.style + '.png)',\n            'background-repeat': 'no-repeat',\n            'background-position': '0px 25px'\n        },\n        '#button-play': {\n            'display': 'inline-block',\n            'width': '30px',\n            'height': '60px',\n            'margin-left': '15px',\n            'background-image': 'url(' + this.cdn_host + '/site_media/images/icons/notifications/play-' + this.style + '-small.png)',\n            'background-repeat': 'no-repeat',\n            'background-position': '0px 15px'\n        },\n        'a#button-link': {\n            'display': 'inline-block',\n            'vertical-align': 'top',\n            'text-align': 'center',\n            'font-size': '17px',\n            'font-weight': 'bold',\n            'overflow': 'hidden',\n            'word-wrap': 'break-word',\n            'color': this.style_vals.text_title,\n            'transition': 'color ' + anim_seconds\n        },\n        '#button:hover': {\n            'background-color': this.style_vals.bg_hover,\n            'color': this.style_vals.text_hover\n        },\n        '#button:hover a': {\n            'color': this.style_vals.text_hover\n        },\n\n        '#video-noflip': {\n            'position': 'relative',\n            'top': (-this.video_height * 2) + 'px'\n        },\n        '#video-flip': {\n            'backface-visibility': 'hidden',\n            'transform': 'rotateY(180deg)'\n        },\n        '#video': {\n            'position': 'absolute',\n            'width': (this.video_width - 1) + 'px',\n            'height': this.video_height + 'px',\n            'top': MixpanelNotification.NOTIF_TOP + 'px',\n            'margin-top': '100px',\n            'left': '50%',\n            'margin-left': Math.round(-this.video_width / 2) + 'px',\n            'overflow': 'hidden',\n            'border-radius': '5px',\n            'box-shadow': video_shadow,\n            'transform': 'translateZ(1px)', // webkit rendering bug http://stackoverflow.com/questions/18167981/clickable-link-area-unexpectedly-smaller-after-css-transform\n            'transition': 'opacity ' + anim_seconds + ', top ' + anim_seconds\n        },\n        '#video.exiting': {\n            'opacity': '0.0',\n            'top': this.video_height + 'px'\n        },\n        '#video-holder': {\n            'position': 'absolute',\n            'width': (this.video_width - 1) + 'px',\n            'height': this.video_height + 'px',\n            'overflow': 'hidden',\n            'border-radius': '5px'\n        },\n        '#video-frame': {\n            'margin-left': '-1px',\n            'width': this.video_width + 'px'\n        },\n        '#video-controls': {\n            'opacity': '0',\n            'transition': 'opacity 0.5s'\n        },\n        '#video:hover #video-controls': {\n            'opacity': '1.0'\n        },\n        '#video .video-progress-el': {\n            'position': 'absolute',\n            'bottom': '0',\n            'height': '25px',\n            'border-radius': '0 0 0 5px'\n        },\n        '#video-progress': {\n            'width': '90%'\n        },\n        '#video-progress-total': {\n            'width': '100%',\n            'background-color': this.style_vals.bg,\n            'opacity': '0.7'\n        },\n        '#video-elapsed': {\n            'width': '0',\n            'background-color': '#6cb6f5',\n            'opacity': '0.9'\n        },\n        '#video #video-time': {\n            'width': '10%',\n            'right': '0',\n            'font-size': '11px',\n            'line-height': '25px',\n            'color': this.style_vals.text_main,\n            'background-color': '#666',\n            'border-radius': '0 0 5px 0'\n        }\n    };\n\n    // IE hacks\n    if (this._browser_lte('ie', 8)) {\n        _.extend(notif_styles, {\n            '* html #overlay': {\n                'position': 'absolute'\n            },\n            '* html #bg': {\n                'position': 'absolute'\n            },\n            'html, body': {\n                'height': '100%'\n            }\n        });\n    }\n    if (this._browser_lte('ie', 7)) {\n        _.extend(notif_styles, {\n            '#mini #body': {\n                'display': 'inline',\n                'zoom': '1',\n                'border': '1px solid ' + this.style_vals.bg_hover\n            },\n            '#mini #body-text': {\n                'padding': '20px'\n            },\n            '#mini #mini-icon': {\n                'display': 'none'\n            }\n        });\n    }\n\n    // add vendor-prefixed style rules\n    var VENDOR_STYLES = [\n            'backface-visibility', 'border-radius', 'box-shadow', 'opacity',\n            'perspective', 'transform', 'transform-style', 'transition'\n        ],\n        VENDOR_PREFIXES = ['khtml', 'moz', 'ms', 'o', 'webkit'];\n    for (var selector in notif_styles) {\n        for (var si = 0; si < VENDOR_STYLES.length; si++) {\n            var prop = VENDOR_STYLES[si];\n            if (prop in notif_styles[selector]) {\n                var val = notif_styles[selector][prop];\n                for (var pi = 0; pi < VENDOR_PREFIXES.length; pi++) {\n                    notif_styles[selector]['-' + VENDOR_PREFIXES[pi] + '-' + prop] = val;\n                }\n            }\n        }\n    }\n\n    var inject_styles = function(styles, media_queries) {\n        var create_style_text = function(style_defs) {\n            var st = '';\n            for (var selector in style_defs) {\n                var mp_selector = selector\n                    .replace(/#/g, '#' + MixpanelNotification.MARKUP_PREFIX + '-')\n                    .replace(/\\./g, '.' + MixpanelNotification.MARKUP_PREFIX + '-');\n                st += '\\n' + mp_selector + ' {';\n                var props = style_defs[selector];\n                for (var k in props) {\n                    st += k + ':' + props[k] + ';';\n                }\n                st += '}';\n            }\n            return st;\n        };\n        var create_media_query_text = function(mq_defs) {\n            var mqt = '';\n            for (var mq in mq_defs) {\n                mqt += '\\n' + mq + ' {' + create_style_text(mq_defs[mq]) + '\\n}';\n            }\n            return mqt;\n        };\n\n        var style_text = create_style_text(styles) + create_media_query_text(media_queries),\n            head_el = document.head || document.getElementsByTagName('head')[0] || document.documentElement,\n            style_el = document.createElement('style');\n        head_el.appendChild(style_el);\n        style_el.setAttribute('type', 'text/css');\n        if (style_el.styleSheet) { // IE\n            style_el.styleSheet.cssText = style_text;\n        } else {\n            style_el.textContent = style_text;\n        }\n    };\n    inject_styles(notif_styles, notif_media_queries);\n};\n\nMixpanelNotification.prototype._init_video = _.safewrap(function() {\n    if (!this.video_url) {\n        return;\n    }\n    var self = this;\n\n    // Youtube iframe API compatibility\n    self.yt_custom = 'postMessage' in window;\n\n    self.dest_url = self.video_url;\n    var youtube_match = self.video_url.match(\n            // http://stackoverflow.com/questions/2936467/parse-youtube-video-id-using-preg-match\n            /(?:youtube(?:-nocookie)?\\.com\\/(?:[^/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?/ ]{11})/i\n        ),\n        vimeo_match = self.video_url.match(\n            /vimeo\\.com\\/.*?(\\d+)/i\n        );\n    if (youtube_match) {\n        self.show_video = true;\n        self.youtube_video = youtube_match[1];\n\n        if (self.yt_custom) {\n            window['onYouTubeIframeAPIReady'] = function() {\n                if (self._get_el('video-frame')) {\n                    self._yt_video_ready();\n                }\n            };\n\n            // load Youtube iframe API; see https://developers.google.com/youtube/iframe_api_reference\n            var tag = document.createElement('script');\n            tag.src = self.resource_protocol + 'www.youtube.com/iframe_api';\n            var firstScriptTag = document.getElementsByTagName('script')[0];\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        }\n    } else if (vimeo_match) {\n        self.show_video = true;\n        self.vimeo_video = vimeo_match[1];\n    }\n\n    // IE <= 7, FF <= 3: fall through to video link rather than embedded player\n    if (self._browser_lte('ie', 7) || self._browser_lte('firefox', 3)) {\n        self.show_video = false;\n        self.clickthrough = true;\n    }\n});\n\nMixpanelNotification.prototype._mark_as_shown = _.safewrap(function() {\n    // click on background to dismiss\n    var self = this;\n    _.register_event(self._get_el('bg'), 'click', function() {\n        self.dismiss();\n    });\n\n    var get_style = function(el, style_name) {\n        var styles = {};\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            styles = document.defaultView.getComputedStyle(el, null); // FF3 requires both args\n        } else if (el.currentStyle) { // IE\n            styles = el.currentStyle;\n        }\n        return styles[style_name];\n    };\n\n    if (this.campaign_id) {\n        var notif_el = this._get_el('overlay');\n        if (notif_el && get_style(notif_el, 'visibility') !== 'hidden' && get_style(notif_el, 'display') !== 'none') {\n            this._mark_delivery();\n        }\n    }\n});\n\nMixpanelNotification.prototype._mark_delivery = _.safewrap(function(extra_props) {\n    if (!this.marked_as_shown) {\n        this.marked_as_shown = true;\n\n        if (this.campaign_id) {\n            // mark notification shown (local cache)\n            this._get_shown_campaigns()[this.campaign_id] = 1 * new Date();\n            this.persistence.save();\n        }\n\n        // track delivery\n        this._track_event('$campaign_delivery', extra_props);\n\n        // mark notification shown (mixpanel property)\n        this.mixpanel['people']['append']({\n            '$campaigns': this.campaign_id,\n            '$notifications': {\n                'campaign_id': this.campaign_id,\n                'message_id':  this.message_id,\n                'type':        'web',\n                'time':        new Date()\n            }\n        });\n    }\n});\n\nMixpanelNotification.prototype._preload_images = function(all_loaded_cb) {\n    var self = this;\n    if (this.imgs_to_preload.length === 0) {\n        all_loaded_cb();\n        return;\n    }\n\n    var preloaded_imgs = 0;\n    var img_objs = [];\n    var onload = function() {\n        preloaded_imgs++;\n        if (preloaded_imgs === self.imgs_to_preload.length && all_loaded_cb) {\n            all_loaded_cb();\n            all_loaded_cb = null;\n        }\n    };\n    for (var i = 0; i < this.imgs_to_preload.length; i++) {\n        var img = new Image();\n        img.onload = onload;\n        img.src = this.imgs_to_preload[i];\n        if (img.complete) {\n            onload();\n        }\n        img_objs.push(img);\n    }\n\n    // IE6/7 doesn't fire onload reliably\n    if (this._browser_lte('ie', 7)) {\n        setTimeout(function() {\n            var imgs_loaded = true;\n            for (i = 0; i < img_objs.length; i++) {\n                if (!img_objs[i].complete) {\n                    imgs_loaded = false;\n                }\n            }\n            if (imgs_loaded && all_loaded_cb) {\n                all_loaded_cb();\n                all_loaded_cb = null;\n            }\n        }, 500);\n    }\n};\n\nMixpanelNotification.prototype._remove_notification_el = _.safewrap(function() {\n    window.clearInterval(this._video_progress_checker);\n    this.notification_el.style.visibility = 'hidden';\n    this.body_el.removeChild(this.notification_el);\n});\n\nMixpanelNotification.prototype._set_client_config = function() {\n    var get_browser_version = function(browser_ex) {\n        var match = navigator.userAgent.match(browser_ex);\n        return match && match[1];\n    };\n    this.browser_versions = {};\n    this.browser_versions['chrome']  = get_browser_version(/Chrome\\/(\\d+)/);\n    this.browser_versions['firefox'] = get_browser_version(/Firefox\\/(\\d+)/);\n    this.browser_versions['ie']      = get_browser_version(/MSIE (\\d+).+/);\n    if (!this.browser_versions['ie'] && !(window.ActiveXObject) && 'ActiveXObject' in window) {\n        this.browser_versions['ie'] = 11;\n    }\n\n    this.body_el = document.body || document.getElementsByTagName('body')[0];\n    if (this.body_el) {\n        this.doc_width = Math.max(\n            this.body_el.scrollWidth, document.documentElement.scrollWidth,\n            this.body_el.offsetWidth, document.documentElement.offsetWidth,\n            this.body_el.clientWidth, document.documentElement.clientWidth\n        );\n        this.doc_height = Math.max(\n            this.body_el.scrollHeight, document.documentElement.scrollHeight,\n            this.body_el.offsetHeight, document.documentElement.offsetHeight,\n            this.body_el.clientHeight, document.documentElement.clientHeight\n        );\n    }\n\n    // detect CSS compatibility\n    var ie_ver = this.browser_versions['ie'];\n    var sample_styles = document.createElement('div').style,\n        is_css_compatible = function(rule) {\n            if (rule in sample_styles) {\n                return true;\n            }\n            if (!ie_ver) {\n                rule = rule[0].toUpperCase() + rule.slice(1);\n                var props = ['O' + rule, 'Webkit' + rule, 'Moz' + rule];\n                for (var i = 0; i < props.length; i++) {\n                    if (props[i] in sample_styles) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n    this.use_transitions = this.body_el &&\n        is_css_compatible('transition') &&\n        is_css_compatible('transform');\n    this.flip_animate = (this.browser_versions['chrome'] >= 33 || this.browser_versions['firefox'] >= 15) &&\n        this.body_el &&\n        is_css_compatible('backfaceVisibility') &&\n        is_css_compatible('perspective') &&\n        is_css_compatible('transform');\n};\n\nMixpanelNotification.prototype._switch_to_video = _.safewrap(function() {\n    var self = this,\n        anims = [\n            {\n                el:    self._get_notification_display_el(),\n                attr:  'opacity',\n                start: 1.0,\n                goal:  0.0\n            },\n            {\n                el:    self._get_notification_display_el(),\n                attr:  'top',\n                start: MixpanelNotification.NOTIF_TOP,\n                goal:  -500\n            },\n            {\n                el:    self._get_el('video-noflip'),\n                attr:  'opacity',\n                start: 0.0,\n                goal:  1.0\n            },\n            {\n                el:    self._get_el('video-noflip'),\n                attr:  'top',\n                start: -self.video_height * 2,\n                goal:  0\n            }\n        ];\n\n    if (self.mini) {\n        var bg = self._get_el('bg'),\n            overlay = self._get_el('overlay');\n        bg.style.width = '100%';\n        bg.style.height = '100%';\n        overlay.style.width = '100%';\n\n        self._add_class(self._get_notification_display_el(), 'exiting');\n        self._add_class(bg, 'visible');\n\n        anims.push({\n            el:    self._get_el('bg'),\n            attr:  'opacity',\n            start: 0.0,\n            goal:  MixpanelNotification.BG_OPACITY\n        });\n    }\n\n    var video_el = self._get_el('video-holder');\n    video_el.innerHTML = self.video_iframe;\n\n    var video_ready = function() {\n        if (window['YT'] && window['YT']['loaded']) {\n            self._yt_video_ready();\n        }\n        self.showing_video = true;\n        self._get_notification_display_el().style.visibility = 'hidden';\n    };\n    if (self.flip_animate) {\n        self._add_class('flipper', 'flipped');\n        setTimeout(video_ready, MixpanelNotification.ANIM_TIME);\n    } else {\n        self._animate_els(anims, MixpanelNotification.ANIM_TIME, video_ready);\n    }\n});\n\nMixpanelNotification.prototype._track_event = function(event_name, properties, cb) {\n    if (this.campaign_id) {\n        properties = properties || {};\n        properties = _.extend(properties, {\n            'campaign_id':     this.campaign_id,\n            'message_id':      this.message_id,\n            'message_type':    'web_inapp',\n            'message_subtype': this.notif_type\n        });\n        this.mixpanel['track'](event_name, properties, cb);\n    } else if (cb) {\n        cb.call();\n    }\n};\n\nMixpanelNotification.prototype._yt_video_ready = _.safewrap(function() {\n    var self = this;\n    if (self.video_inited) {\n        return;\n    }\n    self.video_inited = true;\n\n    var progress_bar  = self._get_el('video-elapsed'),\n        progress_time = self._get_el('video-time'),\n        progress_el   = self._get_el('video-progress');\n\n    new window['YT']['Player'](MixpanelNotification.MARKUP_PREFIX + '-video-frame', {\n        'events': {\n            'onReady': function(event) {\n                var ytplayer = event['target'],\n                    video_duration = ytplayer['getDuration'](),\n                    pad = function(i) {\n                        return ('00' + i).slice(-2);\n                    },\n                    update_video_time = function(current_time) {\n                        var secs = Math.round(video_duration - current_time),\n                            mins = Math.floor(secs / 60),\n                            hours = Math.floor(mins / 60);\n                        secs -= mins * 60;\n                        mins -= hours * 60;\n                        progress_time.innerHTML = '-' + (hours ? hours + ':' : '') + pad(mins) + ':' + pad(secs);\n                    };\n                update_video_time(0);\n                self._video_progress_checker = window.setInterval(function() {\n                    var current_time = ytplayer['getCurrentTime']();\n                    progress_bar.style.width = (current_time / video_duration * 100) + '%';\n                    update_video_time(current_time);\n                }, 250);\n                _.register_event(progress_el, 'click', function(e) {\n                    var clickx = Math.max(0, e.pageX - progress_el.getBoundingClientRect().left);\n                    ytplayer['seekTo'](video_duration * clickx / progress_el.clientWidth, true);\n                });\n            }\n        }\n    });\n});\n\n/**\n * Mixpanel People Object\n * @constructor\n */\nvar MixpanelPeople = function() {};\n\n_.extend(MixpanelPeople.prototype, apiActions);\n\nMixpanelPeople.prototype._init = function(mixpanel_instance) {\n    this._mixpanel = mixpanel_instance;\n};\n\n/*\n* Set properties on a user record.\n*\n* ### Usage:\n*\n*     mixpanel.people.set('gender', 'm');\n*\n*     // or set multiple properties at once\n*     mixpanel.people.set({\n*         'Company': 'Acme',\n*         'Plan': 'Premium',\n*         'Upgrade date': new Date()\n*     });\n*     // properties can be strings, integers, dates, or lists\n*\n* @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [to] A value to set on the given property name\n* @param {Function} [callback] If provided, the callback will be called after tracking the event.\n*/\nMixpanelPeople.prototype.set = addOptOutCheckMixpanelPeople(function(prop, to, callback) {\n    var data = this.set_action(prop, to);\n    if (_.isObject(prop)) {\n        callback = to;\n    }\n    // make sure that the referrer info has been updated and saved\n    if (this._get_config('save_referrer')) {\n        this._mixpanel['persistence'].update_referrer_info(document.referrer);\n    }\n\n    // update $set object with default people properties\n    data[SET_ACTION] = _.extend(\n        {},\n        _.info.people_properties(),\n        this._mixpanel['persistence'].get_referrer_info(),\n        data[SET_ACTION]\n    );\n    return this._send_request(data, callback);\n});\n\n/*\n* Set properties on a user record, only if they do not yet exist.\n* This will not overwrite previous people property values, unlike\n* people.set().\n*\n* ### Usage:\n*\n*     mixpanel.people.set_once('First Login Date', new Date());\n*\n*     // or set multiple properties at once\n*     mixpanel.people.set_once({\n*         'First Login Date': new Date(),\n*         'Starting Plan': 'Premium'\n*     });\n*\n*     // properties can be strings, integers or dates\n*\n* @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [to] A value to set on the given property name\n* @param {Function} [callback] If provided, the callback will be called after tracking the event.\n*/\nMixpanelPeople.prototype.set_once = addOptOutCheckMixpanelPeople(function(prop, to, callback) {\n    var data = this.set_once_action(prop, to);\n    if (_.isObject(prop)) {\n        callback = to;\n    }\n    return this._send_request(data, callback);\n});\n\n/*\n* Unset properties on a user record (permanently removes the properties and their values from a profile).\n*\n* ### Usage:\n*\n*     mixpanel.people.unset('gender');\n*\n*     // or unset multiple properties at once\n*     mixpanel.people.unset(['gender', 'Company']);\n*\n* @param {Array|String} prop If a string, this is the name of the property. If an array, this is a list of property names.\n* @param {Function} [callback] If provided, the callback will be called after tracking the event.\n*/\nMixpanelPeople.prototype.unset = addOptOutCheckMixpanelPeople(function(prop, callback) {\n    var data = this.unset_action(prop);\n    return this._send_request(data, callback);\n});\n\n/*\n* Increment/decrement numeric people analytics properties.\n*\n* ### Usage:\n*\n*     mixpanel.people.increment('page_views', 1);\n*\n*     // or, for convenience, if you're just incrementing a counter by\n*     // 1, you can simply do\n*     mixpanel.people.increment('page_views');\n*\n*     // to decrement a counter, pass a negative number\n*     mixpanel.people.increment('credits_left', -1);\n*\n*     // like mixpanel.people.set(), you can increment multiple\n*     // properties at once:\n*     mixpanel.people.increment({\n*         counter1: 1,\n*         counter2: 6\n*     });\n*\n* @param {Object|String} prop If a string, this is the name of the property. If an object, this is an associative array of names and numeric values.\n* @param {Number} [by] An amount to increment the given property\n* @param {Function} [callback] If provided, the callback will be called after tracking the event.\n*/\nMixpanelPeople.prototype.increment = addOptOutCheckMixpanelPeople(function(prop, by, callback) {\n    var data = {};\n    var $add = {};\n    if (_.isObject(prop)) {\n        _.each(prop, function(v, k) {\n            if (!this._is_reserved_property(k)) {\n                if (isNaN(parseFloat(v))) {\n                    console$1.error('Invalid increment value passed to mixpanel.people.increment - must be a number');\n                    return;\n                } else {\n                    $add[k] = v;\n                }\n            }\n        }, this);\n        callback = by;\n    } else {\n        // convenience: mixpanel.people.increment('property'); will\n        // increment 'property' by 1\n        if (_.isUndefined(by)) {\n            by = 1;\n        }\n        $add[prop] = by;\n    }\n    data[ADD_ACTION] = $add;\n\n    return this._send_request(data, callback);\n});\n\n/*\n* Append a value to a list-valued people analytics property.\n*\n* ### Usage:\n*\n*     // append a value to a list, creating it if needed\n*     mixpanel.people.append('pages_visited', 'homepage');\n*\n*     // like mixpanel.people.set(), you can append multiple\n*     // properties at once:\n*     mixpanel.people.append({\n*         list1: 'bob',\n*         list2: 123\n*     });\n*\n* @param {Object|String} list_name If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [value] value An item to append to the list\n* @param {Function} [callback] If provided, the callback will be called after tracking the event.\n*/\nMixpanelPeople.prototype.append = addOptOutCheckMixpanelPeople(function(list_name, value, callback) {\n    if (_.isObject(list_name)) {\n        callback = value;\n    }\n    var data = this.append_action(list_name, value);\n    return this._send_request(data, callback);\n});\n\n/*\n* Remove a value from a list-valued people analytics property.\n*\n* ### Usage:\n*\n*     mixpanel.people.remove('School', 'UCB');\n*\n* @param {Object|String} list_name If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [value] value Item to remove from the list\n* @param {Function} [callback] If provided, the callback will be called after tracking the event.\n*/\nMixpanelPeople.prototype.remove = addOptOutCheckMixpanelPeople(function(list_name, value, callback) {\n    if (_.isObject(list_name)) {\n        callback = value;\n    }\n    var data = this.remove_action(list_name, value);\n    return this._send_request(data, callback);\n});\n\n/*\n* Merge a given list with a list-valued people analytics property,\n* excluding duplicate values.\n*\n* ### Usage:\n*\n*     // merge a value to a list, creating it if needed\n*     mixpanel.people.union('pages_visited', 'homepage');\n*\n*     // like mixpanel.people.set(), you can append multiple\n*     // properties at once:\n*     mixpanel.people.union({\n*         list1: 'bob',\n*         list2: 123\n*     });\n*\n*     // like mixpanel.people.append(), you can append multiple\n*     // values to the same list:\n*     mixpanel.people.union({\n*         list1: ['bob', 'billy']\n*     });\n*\n* @param {Object|String} list_name If a string, this is the name of the property. If an object, this is an associative array of names and values.\n* @param {*} [value] Value / values to merge with the given property\n* @param {Function} [callback] If provided, the callback will be called after tracking the event.\n*/\nMixpanelPeople.prototype.union = addOptOutCheckMixpanelPeople(function(list_name, values, callback) {\n    if (_.isObject(list_name)) {\n        callback = values;\n    }\n    var data = this.union_action(list_name, values);\n    return this._send_request(data, callback);\n});\n\n/*\n* Record that you have charged the current user a certain amount\n* of money. Charges recorded with track_charge() will appear in the\n* Mixpanel revenue report.\n*\n* ### Usage:\n*\n*     // charge a user $50\n*     mixpanel.people.track_charge(50);\n*\n*     // charge a user $30.50 on the 2nd of january\n*     mixpanel.people.track_charge(30.50, {\n*         '$time': new Date('jan 1 2012')\n*     });\n*\n* @param {Number} amount The amount of money charged to the current user\n* @param {Object} [properties] An associative array of properties associated with the charge\n* @param {Function} [callback] If provided, the callback will be called when the server responds\n*/\nMixpanelPeople.prototype.track_charge = addOptOutCheckMixpanelPeople(function(amount, properties, callback) {\n    if (!_.isNumber(amount)) {\n        amount = parseFloat(amount);\n        if (isNaN(amount)) {\n            console$1.error('Invalid value passed to mixpanel.people.track_charge - must be a number');\n            return;\n        }\n    }\n\n    return this.append('$transactions', _.extend({\n        '$amount': amount\n    }, properties), callback);\n});\n\n/*\n* Permanently clear all revenue report transactions from the\n* current user's people analytics profile.\n*\n* ### Usage:\n*\n*     mixpanel.people.clear_charges();\n*\n* @param {Function} [callback] If provided, the callback will be called after tracking the event.\n*/\nMixpanelPeople.prototype.clear_charges = function(callback) {\n    return this.set('$transactions', [], callback);\n};\n\n/*\n* Permanently deletes the current people analytics profile from\n* Mixpanel (using the current distinct_id).\n*\n* ### Usage:\n*\n*     // remove the all data you have stored about the current user\n*     mixpanel.people.delete_user();\n*\n*/\nMixpanelPeople.prototype.delete_user = function() {\n    if (!this._identify_called()) {\n        console$1.error('mixpanel.people.delete_user() requires you to call identify() first');\n        return;\n    }\n    var data = {'$delete': this._mixpanel.get_distinct_id()};\n    return this._send_request(data);\n};\n\nMixpanelPeople.prototype.toString = function() {\n    return this._mixpanel.toString() + '.people';\n};\n\nMixpanelPeople.prototype._send_request = function(data, callback) {\n    data['$token'] = this._get_config('token');\n    data['$distinct_id'] = this._mixpanel.get_distinct_id();\n    var device_id = this._mixpanel.get_property('$device_id');\n    var user_id = this._mixpanel.get_property('$user_id');\n    var had_persisted_distinct_id = this._mixpanel.get_property('$had_persisted_distinct_id');\n    if (device_id) {\n        data['$device_id'] = device_id;\n    }\n    if (user_id) {\n        data['$user_id'] = user_id;\n    }\n    if (had_persisted_distinct_id) {\n        data['$had_persisted_distinct_id'] = had_persisted_distinct_id;\n    }\n\n    var date_encoded_data = _.encodeDates(data);\n    var truncated_data = _.truncate(date_encoded_data, 255);\n\n    if (!this._identify_called()) {\n        this._enqueue(data);\n        if (!_.isUndefined(callback)) {\n            if (this._get_config('verbose')) {\n                callback({status: -1, error: null});\n            } else {\n                callback(-1);\n            }\n        }\n        return truncated_data;\n    }\n\n    return this._mixpanel._track_or_batch({\n        truncated_data: truncated_data,\n        endpoint: this._get_config('api_host') + '/engage/',\n        batcher: this._mixpanel.request_batchers.people\n    }, callback);\n};\n\nMixpanelPeople.prototype._get_config = function(conf_var) {\n    return this._mixpanel.get_config(conf_var);\n};\n\nMixpanelPeople.prototype._identify_called = function() {\n    return this._mixpanel._flags.identify_called === true;\n};\n\n// Queue up engage operations if identify hasn't been called yet.\nMixpanelPeople.prototype._enqueue = function(data) {\n    if (SET_ACTION in data) {\n        this._mixpanel['persistence']._add_to_people_queue(SET_ACTION, data);\n    } else if (SET_ONCE_ACTION in data) {\n        this._mixpanel['persistence']._add_to_people_queue(SET_ONCE_ACTION, data);\n    } else if (UNSET_ACTION in data) {\n        this._mixpanel['persistence']._add_to_people_queue(UNSET_ACTION, data);\n    } else if (ADD_ACTION in data) {\n        this._mixpanel['persistence']._add_to_people_queue(ADD_ACTION, data);\n    } else if (APPEND_ACTION in data) {\n        this._mixpanel['persistence']._add_to_people_queue(APPEND_ACTION, data);\n    } else if (REMOVE_ACTION in data) {\n        this._mixpanel['persistence']._add_to_people_queue(REMOVE_ACTION, data);\n    } else if (UNION_ACTION in data) {\n        this._mixpanel['persistence']._add_to_people_queue(UNION_ACTION, data);\n    } else {\n        console$1.error('Invalid call to _enqueue():', data);\n    }\n};\n\nMixpanelPeople.prototype._flush_one_queue = function(action, action_method, callback, queue_to_params_fn) {\n    var _this = this;\n    var queued_data = _.extend({}, this._mixpanel['persistence']._get_queue(action));\n    var action_params = queued_data;\n\n    if (!_.isUndefined(queued_data) && _.isObject(queued_data) && !_.isEmptyObject(queued_data)) {\n        _this._mixpanel['persistence']._pop_from_people_queue(action, queued_data);\n        if (queue_to_params_fn) {\n            action_params = queue_to_params_fn(queued_data);\n        }\n        action_method.call(_this, action_params, function(response, data) {\n            // on bad response, we want to add it back to the queue\n            if (response === 0) {\n                _this._mixpanel['persistence']._add_to_people_queue(action, queued_data);\n            }\n            if (!_.isUndefined(callback)) {\n                callback(response, data);\n            }\n        });\n    }\n};\n\n// Flush queued engage operations - order does not matter,\n// and there are network level race conditions anyway\nMixpanelPeople.prototype._flush = function(\n    _set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback, _unset_callback, _remove_callback\n) {\n    var _this = this;\n    var $append_queue = this._mixpanel['persistence']._get_queue(APPEND_ACTION);\n    var $remove_queue = this._mixpanel['persistence']._get_queue(REMOVE_ACTION);\n\n    this._flush_one_queue(SET_ACTION, this.set, _set_callback);\n    this._flush_one_queue(SET_ONCE_ACTION, this.set_once, _set_once_callback);\n    this._flush_one_queue(UNSET_ACTION, this.unset, _unset_callback, function(queue) { return _.keys(queue); });\n    this._flush_one_queue(ADD_ACTION, this.increment, _add_callback);\n    this._flush_one_queue(UNION_ACTION, this.union, _union_callback);\n\n    // we have to fire off each $append individually since there is\n    // no concat method server side\n    if (!_.isUndefined($append_queue) && _.isArray($append_queue) && $append_queue.length) {\n        var $append_item;\n        var append_callback = function(response, data) {\n            if (response === 0) {\n                _this._mixpanel['persistence']._add_to_people_queue(APPEND_ACTION, $append_item);\n            }\n            if (!_.isUndefined(_append_callback)) {\n                _append_callback(response, data);\n            }\n        };\n        for (var i = $append_queue.length - 1; i >= 0; i--) {\n            $append_item = $append_queue.pop();\n            if (!_.isEmptyObject($append_item)) {\n                _this.append($append_item, append_callback);\n            }\n        }\n        // Save the shortened append queue\n        _this._mixpanel['persistence'].save();\n    }\n\n    // same for $remove\n    if (!_.isUndefined($remove_queue) && _.isArray($remove_queue) && $remove_queue.length) {\n        var $remove_item;\n        var remove_callback = function(response, data) {\n            if (response === 0) {\n                _this._mixpanel['persistence']._add_to_people_queue(REMOVE_ACTION, $remove_item);\n            }\n            if (!_.isUndefined(_remove_callback)) {\n                _remove_callback(response, data);\n            }\n        };\n        for (var j = $remove_queue.length - 1; j >= 0; j--) {\n            $remove_item = $remove_queue.pop();\n            if (!_.isEmptyObject($remove_item)) {\n                _this.remove($remove_item, remove_callback);\n            }\n        }\n        _this._mixpanel['persistence'].save();\n    }\n};\n\nMixpanelPeople.prototype._is_reserved_property = function(prop) {\n    return prop === '$distinct_id' || prop === '$token' || prop === '$device_id' || prop === '$user_id' || prop === '$had_persisted_distinct_id';\n};\n\n// MixpanelPeople Exports\nMixpanelPeople.prototype['set']           = MixpanelPeople.prototype.set;\nMixpanelPeople.prototype['set_once']      = MixpanelPeople.prototype.set_once;\nMixpanelPeople.prototype['unset']         = MixpanelPeople.prototype.unset;\nMixpanelPeople.prototype['increment']     = MixpanelPeople.prototype.increment;\nMixpanelPeople.prototype['append']        = MixpanelPeople.prototype.append;\nMixpanelPeople.prototype['remove']        = MixpanelPeople.prototype.remove;\nMixpanelPeople.prototype['union']         = MixpanelPeople.prototype.union;\nMixpanelPeople.prototype['track_charge']  = MixpanelPeople.prototype.track_charge;\nMixpanelPeople.prototype['clear_charges'] = MixpanelPeople.prototype.clear_charges;\nMixpanelPeople.prototype['delete_user']   = MixpanelPeople.prototype.delete_user;\nMixpanelPeople.prototype['toString']      = MixpanelPeople.prototype.toString;\n\n/*\n * Mixpanel JS Library\n *\n * Copyright 2012, Mixpanel, Inc. All Rights Reserved\n * http://mixpanel.com/\n *\n * Includes portions of Underscore.js\n * http://documentcloud.github.com/underscore/\n * (c) 2011 Jeremy Ashkenas, DocumentCloud Inc.\n * Released under the MIT License.\n */\n\n// ==ClosureCompiler==\n// @compilation_level ADVANCED_OPTIMIZATIONS\n// @output_file_name mixpanel-2.8.min.js\n// ==/ClosureCompiler==\n\n/*\nSIMPLE STYLE GUIDE:\n\nthis.x === public function\nthis._x === internal - only use within this file\nthis.__x === private - only use within the class\n\nGlobals should be all caps\n*/\n\nvar init_type;       // MODULE or SNIPPET loader\nvar mixpanel_master; // main mixpanel instance / object\nvar INIT_MODULE  = 0;\nvar INIT_SNIPPET = 1;\n\n/** @const */ var PRIMARY_INSTANCE_NAME = 'mixpanel';\n\n\n/*\n * Dynamic... constants? Is that an oxymoron?\n */\n// http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\n// https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#withCredentials\nvar USE_XHR = (window$1.XMLHttpRequest && 'withCredentials' in new XMLHttpRequest());\n\n// IE<10 does not support cross-origin XHR's but script tags\n// with defer won't block window.onload; ENQUEUE_REQUESTS\n// should only be true for Opera<12\nvar ENQUEUE_REQUESTS = !USE_XHR && (userAgent.indexOf('MSIE') === -1) && (userAgent.indexOf('Mozilla') === -1);\n\n// save reference to navigator.sendBeacon so it can be minified\nvar sendBeacon = null;\nif (navigator$1['sendBeacon']) {\n    sendBeacon = function() {\n        // late reference to navigator.sendBeacon to allow patching/spying\n        return navigator$1['sendBeacon'].apply(navigator$1, arguments);\n    };\n}\n\n/*\n * Module-level globals\n */\nvar DEFAULT_CONFIG = {\n    'api_host':                          'https://api-js.mixpanel.com',\n    'api_method':                        'POST',\n    'api_transport':                     'XHR',\n    'app_host':                          'https://mixpanel.com',\n    'autotrack':                         true,\n    'cdn':                               'https://cdn.mxpnl.com',\n    'cross_site_cookie':                 false,\n    'cross_subdomain_cookie':            true,\n    'persistence':                       'cookie',\n    'persistence_name':                  '',\n    'cookie_domain':                     '',\n    'cookie_name':                       '',\n    'loaded':                            function() {},\n    'store_google':                      true,\n    'save_referrer':                     true,\n    'test':                              false,\n    'verbose':                           false,\n    'img':                               false,\n    'track_pageview':                    false,\n    'debug':                             false,\n    'track_links_timeout':               300,\n    'cookie_expiration':                 365,\n    'upgrade':                           false,\n    'disable_persistence':               false,\n    'disable_cookie':                    false,\n    'secure_cookie':                     false,\n    'ip':                                true,\n    'opt_out_tracking_by_default':       false,\n    'opt_out_persistence_by_default':    false,\n    'opt_out_tracking_persistence_type': 'localStorage',\n    'opt_out_tracking_cookie_prefix':    null,\n    'property_blacklist':                [],\n    'xhr_headers':                       {}, // { header: value, header2: value }\n    'inapp_protocol':                    '//',\n    'inapp_link_new_window':             false,\n    'ignore_dnt':                        false,\n    'batch_requests':                    false, // for now\n    'batch_size':                        50,\n    'batch_flush_interval_ms':           5000,\n    'batch_request_timeout_ms':          90000\n};\n\nvar DOM_LOADED = false;\n\n/**\n * Mixpanel Library Object\n * @constructor\n */\nvar MixpanelLib = function() {};\n\n\n/**\n * create_mplib(token:string, config:object, name:string)\n *\n * This function is used by the init method of MixpanelLib objects\n * as well as the main initializer at the end of the JSLib (that\n * initializes document.mixpanel as well as any additional instances\n * declared before this file has loaded).\n */\nvar create_mplib = function(token, config, name) {\n    var instance,\n        target = (name === PRIMARY_INSTANCE_NAME) ? mixpanel_master : mixpanel_master[name];\n\n    if (target && init_type === INIT_MODULE) {\n        instance = target;\n    } else {\n        if (target && !_.isArray(target)) {\n            console$1.error('You have already initialized ' + name);\n            return;\n        }\n        instance = new MixpanelLib();\n    }\n\n    instance._cached_groups = {}; // cache groups in a pool\n    instance._user_decide_check_complete = false;\n    instance._events_tracked_before_user_decide_check_complete = [];\n\n    instance._init(token, config, name);\n\n    instance['people'] = new MixpanelPeople();\n    instance['people']._init(instance);\n\n    // if any instance on the page has debug = true, we set the\n    // global debug to be true\n    Config.DEBUG = Config.DEBUG || instance.get_config('debug');\n\n    instance['__autotrack_enabled'] = instance.get_config('autotrack');\n    if (instance.get_config('autotrack')) {\n        var num_buckets = 100;\n        var num_enabled_buckets = 100;\n        if (!autotrack.enabledForProject(instance.get_config('token'), num_buckets, num_enabled_buckets)) {\n            instance['__autotrack_enabled'] = false;\n            console$1.log('Not in active bucket: disabling Automatic Event Collection.');\n        } else if (!autotrack.isBrowserSupported()) {\n            instance['__autotrack_enabled'] = false;\n            console$1.log('Disabling Automatic Event Collection because this browser is not supported');\n        } else {\n            autotrack.init(instance);\n        }\n    }\n\n    // if target is not defined, we called init after the lib already\n    // loaded, so there won't be an array of things to execute\n    if (!_.isUndefined(target) && _.isArray(target)) {\n        // Crunch through the people queue first - we queue this data up &\n        // flush on identify, so it's better to do all these operations first\n        instance._execute_array.call(instance['people'], target['people']);\n        instance._execute_array(target);\n    }\n\n    return instance;\n};\n\nvar encode_data_for_request = function(data) {\n    var json_data = _.JSONEncode(data);\n    var encoded_data = _.base64Encode(json_data);\n    return {'data': encoded_data};\n};\n\n// Initialization methods\n\n/**\n * This function initializes a new instance of the Mixpanel tracking object.\n * All new instances are added to the main mixpanel object as sub properties (such as\n * mixpanel.library_name) and also returned by this function. To define a\n * second instance on the page, you would call:\n *\n *     mixpanel.init('new token', { your: 'config' }, 'library_name');\n *\n * and use it like so:\n *\n *     mixpanel.library_name.track(...);\n *\n * @param {String} token   Your Mixpanel API token\n * @param {Object} [config]  A dictionary of config options to override. <a href=\"https://github.com/mixpanel/mixpanel-js/blob/8b2e1f7b/src/mixpanel-core.js#L87-L110\">See a list of default config options</a>.\n * @param {String} [name]    The name for the new mixpanel instance that you want created\n */\nMixpanelLib.prototype.init = function (token, config, name) {\n    if (_.isUndefined(name)) {\n        console$1.error('You must name your new library: init(token, config, name)');\n        return;\n    }\n    if (name === PRIMARY_INSTANCE_NAME) {\n        console$1.error('You must initialize the main mixpanel object right after you include the Mixpanel js snippet');\n        return;\n    }\n\n    var instance = create_mplib(token, config, name);\n    mixpanel_master[name] = instance;\n    instance._loaded();\n\n    return instance;\n};\n\n// mixpanel._init(token:string, config:object, name:string)\n//\n// This function sets up the current instance of the mixpanel\n// library.  The difference between this method and the init(...)\n// method is this one initializes the actual instance, whereas the\n// init(...) method sets up a new library and calls _init on it.\n//\nMixpanelLib.prototype._init = function(token, config, name) {\n    this['__loaded'] = true;\n    this['config'] = {};\n    this['_triggered_notifs'] = [];\n\n    // rollout: enable batch_requests by default for 10% of projects\n    // (only if they have not specified a value in their init config)\n    var variable_features = {};\n    if (!('batch_requests' in (config || {})) && determine_eligibility(token, 'batch', 10)) {\n        variable_features['batch_requests'] = true;\n    }\n\n    this.set_config(_.extend({}, DEFAULT_CONFIG, variable_features, config, {\n        'name': name,\n        'token': token,\n        'callback_fn': ((name === PRIMARY_INSTANCE_NAME) ? name : PRIMARY_INSTANCE_NAME + '.' + name) + '._jsc'\n    }));\n\n    this['_jsc'] = function() {};\n\n    this.__dom_loaded_queue = [];\n    this.__request_queue = [];\n    this.__disabled_events = [];\n    this._flags = {\n        'disable_all_events': false,\n        'identify_called': false\n    };\n\n    // set up request queueing/batching\n    this.request_batchers = {};\n    this._batch_requests = this.get_config('batch_requests');\n    if (this._batch_requests) {\n        if (!_.localStorage.is_supported(true) || !USE_XHR) {\n            this._batch_requests = false;\n            console$1.log('Turning off Mixpanel request-queueing; needs XHR and localStorage support');\n        } else {\n            this.start_batch_requests();\n            if (sendBeacon && window$1.addEventListener) {\n                window$1.addEventListener('unload', _.bind(function() {\n                    // Before page closes, attempt to flush any events queued up via navigator.sendBeacon.\n                    // Since sendBeacon doesn't report success/failure, events will not be removed from\n                    // the persistent store; if the site is loaded again, the events will be flushed again\n                    // on startup and deduplicated on the Mixpanel server side.\n                    this.request_batchers.events.flush({sendBeacon: true});\n                }, this));\n            }\n        }\n    }\n\n    this['persistence'] = this['cookie'] = new MixpanelPersistence(this['config']);\n    this._gdpr_init();\n\n    var uuid = _.UUID();\n    if (!this.get_distinct_id()) {\n        // There is no need to set the distinct id\n        // or the device id if something was already stored\n        // in the persitence\n        this.register_once({\n            'distinct_id': uuid,\n            '$device_id': uuid\n        }, '');\n    }\n};\n\n// Private methods\n\nMixpanelLib.prototype._loaded = function() {\n    this.get_config('loaded')(this);\n\n    // this happens after so a user can call identify/name_tag in\n    // the loaded callback\n    if (this.get_config('track_pageview')) {\n        this.track_pageview();\n    }\n};\n\nMixpanelLib.prototype._dom_loaded = function() {\n    _.each(this.__dom_loaded_queue, function(item) {\n        this._track_dom.apply(this, item);\n    }, this);\n\n    if (!this.has_opted_out_tracking()) {\n        _.each(this.__request_queue, function(item) {\n            this._send_request.apply(this, item);\n        }, this);\n    }\n\n    delete this.__dom_loaded_queue;\n    delete this.__request_queue;\n};\n\nMixpanelLib.prototype._track_dom = function(DomClass, args) {\n    if (this.get_config('img')) {\n        console$1.error('You can\\'t use DOM tracking functions with img = true.');\n        return false;\n    }\n\n    if (!DOM_LOADED) {\n        this.__dom_loaded_queue.push([DomClass, args]);\n        return false;\n    }\n\n    var dt = new DomClass().init(this);\n    return dt.track.apply(dt, args);\n};\n\n/**\n * _prepare_callback() should be called by callers of _send_request for use\n * as the callback argument.\n *\n * If there is no callback, this returns null.\n * If we are going to make XHR/XDR requests, this returns a function.\n * If we are going to use script tags, this returns a string to use as the\n * callback GET param.\n */\nMixpanelLib.prototype._prepare_callback = function(callback, data) {\n    if (_.isUndefined(callback)) {\n        return null;\n    }\n\n    if (USE_XHR) {\n        var callback_function = function(response) {\n            callback(response, data);\n        };\n        return callback_function;\n    } else {\n        // if the user gives us a callback, we store as a random\n        // property on this instances jsc function and update our\n        // callback string to reflect that.\n        var jsc = this['_jsc'];\n        var randomized_cb = '' + Math.floor(Math.random() * 100000000);\n        var callback_string = this.get_config('callback_fn') + '[' + randomized_cb + ']';\n        jsc[randomized_cb] = function(response) {\n            delete jsc[randomized_cb];\n            callback(response, data);\n        };\n        return callback_string;\n    }\n};\n\nMixpanelLib.prototype._send_request = function(url, data, options, callback) {\n    var succeeded = true;\n\n    if (ENQUEUE_REQUESTS) {\n        this.__request_queue.push(arguments);\n        return succeeded;\n    }\n\n    var DEFAULT_OPTIONS = {\n        method: this.get_config('api_method'),\n        transport: this.get_config('api_transport'),\n        verbose: this.get_config('verbose')\n    };\n    var body_data = null;\n\n    if (!callback && (_.isFunction(options) || typeof options === 'string')) {\n        callback = options;\n        options = null;\n    }\n    options = _.extend(DEFAULT_OPTIONS, options || {});\n    if (!USE_XHR) {\n        options.method = 'GET';\n    }\n    var use_post = options.method === 'POST';\n    var use_sendBeacon = sendBeacon && use_post && options.transport.toLowerCase() === 'sendbeacon';\n\n    // needed to correctly format responses\n    var verbose_mode = options.verbose;\n    if (data['verbose']) { verbose_mode = true; }\n\n    if (this.get_config('test')) { data['test'] = 1; }\n    if (verbose_mode) { data['verbose'] = 1; }\n    if (this.get_config('img')) { data['img'] = 1; }\n    if (!USE_XHR) {\n        if (callback) {\n            data['callback'] = callback;\n        } else if (verbose_mode || this.get_config('test')) {\n            // Verbose output (from verbose mode, or an error in test mode) is a json blob,\n            // which by itself is not valid javascript. Without a callback, this verbose output will\n            // cause an error when returned via jsonp, so we force a no-op callback param.\n            // See the ECMA script spec: http://www.ecma-international.org/ecma-262/5.1/#sec-12.4\n            data['callback'] = '(function(){})';\n        }\n    }\n\n    data['ip'] = this.get_config('ip')?1:0;\n    data['_'] = new Date().getTime().toString();\n\n    if (use_post) {\n        body_data = 'data=' + data['data'];\n        delete data['data'];\n    }\n\n    url += '?' + _.HTTPBuildQuery(data);\n\n    if ('img' in data) {\n        var img = document$1.createElement('img');\n        img.src = url;\n        document$1.body.appendChild(img);\n    } else if (use_sendBeacon) {\n        try {\n            succeeded = sendBeacon(url, body_data);\n        } catch (e) {\n            console$1.error(e);\n            succeeded = false;\n        }\n    } else if (USE_XHR) {\n        try {\n            var req = new XMLHttpRequest();\n            req.open(options.method, url, true);\n\n            var headers = this.get_config('xhr_headers');\n            if (use_post) {\n                headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            }\n            _.each(headers, function(headerValue, headerName) {\n                req.setRequestHeader(headerName, headerValue);\n            });\n\n            if (options.timeout_ms && typeof req.timeout !== 'undefined') {\n                req.timeout = options.timeout_ms;\n                var start_time = new Date().getTime();\n            }\n\n            // send the mp_optout cookie\n            // withCredentials cannot be modified until after calling .open on Android and Mobile Safari\n            req.withCredentials = true;\n            req.onreadystatechange = function () {\n                if (req.readyState === 4) { // XMLHttpRequest.DONE == 4, except in safari 4\n                    if (req.status === 200) {\n                        if (callback) {\n                            if (verbose_mode) {\n                                var response;\n                                try {\n                                    response = _.JSONDecode(req.responseText);\n                                } catch (e) {\n                                    console$1.error(e);\n                                    if (options.ignore_json_errors) {\n                                        response = req.responseText;\n                                    } else {\n                                        return;\n                                    }\n                                }\n                                callback(response);\n                            } else {\n                                callback(Number(req.responseText));\n                            }\n                        }\n                    } else {\n                        var error;\n                        if (\n                            req.timeout &&\n                            !req.status &&\n                            new Date().getTime() - start_time >= req.timeout\n                        ) {\n                            error = 'timeout';\n                        } else {\n                            error = 'Bad HTTP status: ' + req.status + ' ' + req.statusText;\n                        }\n                        console$1.error(error);\n                        if (callback) {\n                            if (verbose_mode) {\n                                callback({status: 0, error: error, xhr_req: req});\n                            } else {\n                                callback(0);\n                            }\n                        }\n                    }\n                }\n            };\n            req.send(body_data);\n        } catch (e) {\n            console$1.error(e);\n            succeeded = false;\n        }\n    } else {\n        var script = document$1.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.src = url;\n        var s = document$1.getElementsByTagName('script')[0];\n        s.parentNode.insertBefore(script, s);\n    }\n\n    return succeeded;\n};\n\n/**\n * _execute_array() deals with processing any mixpanel function\n * calls that were called before the Mixpanel library were loaded\n * (and are thus stored in an array so they can be called later)\n *\n * Note: we fire off all the mixpanel function calls && user defined\n * functions BEFORE we fire off mixpanel tracking calls. This is so\n * identify/register/set_config calls can properly modify early\n * tracking calls.\n *\n * @param {Array} array\n */\nMixpanelLib.prototype._execute_array = function(array) {\n    var fn_name, alias_calls = [], other_calls = [], tracking_calls = [];\n    _.each(array, function(item) {\n        if (item) {\n            fn_name = item[0];\n            if (_.isArray(fn_name)) {\n                tracking_calls.push(item); // chained call e.g. mixpanel.get_group().set()\n            } else if (typeof(item) === 'function') {\n                item.call(this);\n            } else if (_.isArray(item) && fn_name === 'alias') {\n                alias_calls.push(item);\n            } else if (_.isArray(item) && fn_name.indexOf('track') !== -1 && typeof(this[fn_name]) === 'function') {\n                tracking_calls.push(item);\n            } else {\n                other_calls.push(item);\n            }\n        }\n    }, this);\n\n    var execute = function(calls, context) {\n        _.each(calls, function(item) {\n            if (_.isArray(item[0])) {\n                // chained call\n                var caller = context;\n                _.each(item, function(call) {\n                    caller = caller[call[0]].apply(caller, call.slice(1));\n                });\n            } else {\n                this[item[0]].apply(this, item.slice(1));\n            }\n        }, context);\n    };\n\n    execute(alias_calls, this);\n    execute(other_calls, this);\n    execute(tracking_calls, this);\n};\n\n// request queueing utils\n\nMixpanelLib.prototype.start_batch_requests = function() {\n    var token = this.get_config('token');\n    if (!this.request_batchers.events) { // no batchers initialized yet\n        var batcher_config = {\n            libConfig: this['config'],\n            sendRequestFunc: _.bind(function(endpoint, data, options, cb) {\n                this._send_request(\n                    this.get_config('api_host') + endpoint,\n                    encode_data_for_request(data),\n                    options,\n                    this._prepare_callback(cb, data)\n                );\n            }, this)\n        };\n        this.request_batchers = {\n            events: new RequestBatcher('__mpq_' + token + '_ev', '/track/', batcher_config),\n            people: new RequestBatcher('__mpq_' + token + '_pp', '/engage/', batcher_config),\n            groups: new RequestBatcher('__mpq_' + token + '_gr', '/groups/', batcher_config)\n        };\n    }\n    _.each(this.request_batchers, function(batcher) {\n        batcher.start();\n    });\n};\n\nMixpanelLib.prototype.stop_batch_requests = function() {\n    this._batch_requests = false;\n    _.each(this.request_batchers, function(batcher) {\n        batcher.stop();\n        batcher.clear();\n    });\n};\n\n/**\n * push() keeps the standard async-array-push\n * behavior around after the lib is loaded.\n * This is only useful for external integrations that\n * do not wish to rely on our convenience methods\n * (created in the snippet).\n *\n * ### Usage:\n *     mixpanel.push(['register', { a: 'b' }]);\n *\n * @param {Array} item A [function_name, args...] array to be executed\n */\nMixpanelLib.prototype.push = function(item) {\n    this._execute_array([item]);\n};\n\n/**\n * Disable events on the Mixpanel object. If passed no arguments,\n * this function disables tracking of any event. If passed an\n * array of event names, those events will be disabled, but other\n * events will continue to be tracked.\n *\n * Note: this function does not stop other mixpanel functions from\n * firing, such as register() or people.set().\n *\n * @param {Array} [events] An array of event names to disable\n */\nMixpanelLib.prototype.disable = function(events) {\n    if (typeof(events) === 'undefined') {\n        this._flags.disable_all_events = true;\n    } else {\n        this.__disabled_events = this.__disabled_events.concat(events);\n    }\n};\n\n// internal method for handling track vs batch-enqueue logic\nMixpanelLib.prototype._track_or_batch = function(options, callback) {\n    var truncated_data = options.truncated_data;\n    var endpoint = options.endpoint;\n    var batcher = options.batcher;\n    var should_send_immediately = options.should_send_immediately;\n    var send_request_options = options.send_request_options || {};\n    callback = callback || function() {};\n\n    var request_enqueued_or_initiated = true;\n    var send_request_immediately = _.bind(function() {\n        console$1.log('MIXPANEL REQUEST:');\n        console$1.log(truncated_data);\n        return this._send_request(\n            endpoint,\n            encode_data_for_request(truncated_data),\n            send_request_options,\n            this._prepare_callback(callback, truncated_data)\n        );\n    }, this);\n\n    if (this._batch_requests && !should_send_immediately) {\n        batcher.enqueue(truncated_data, function(succeeded) {\n            if (succeeded) {\n                callback(1, truncated_data);\n            } else {\n                send_request_immediately();\n            }\n        });\n    } else {\n        request_enqueued_or_initiated = send_request_immediately();\n    }\n\n    return request_enqueued_or_initiated && truncated_data;\n};\n\n/**\n * Track an event. This is the most important and\n * frequently used Mixpanel function.\n *\n * ### Usage:\n *\n *     // track an event named 'Registered'\n *     mixpanel.track('Registered', {'Gender': 'Male', 'Age': 21});\n *\n *     // track an event using navigator.sendBeacon\n *     mixpanel.track('Left page', {'duration_seconds': 35}, {transport: 'sendBeacon'});\n *\n * To track link clicks or form submissions, see track_links() or track_forms().\n *\n * @param {String} event_name The name of the event. This can be anything the user does - 'Button Click', 'Sign Up', 'Item Purchased', etc.\n * @param {Object} [properties] A set of properties to include with the event you're sending. These describe the user who did the event or details about the event itself.\n * @param {Object} [options] Optional configuration for this track request.\n * @param {String} [options.transport] Transport method for network request ('xhr' or 'sendBeacon').\n * @param {Boolean} [options.send_immediately] Whether to bypass batching/queueing and send track request immediately.\n * @param {Function} [callback] If provided, the callback function will be called after tracking the event.\n * @returns {Boolean|Object} If the tracking request was successfully initiated/queued, an object\n * with the tracking payload sent to the API server is returned; otherwise false.\n */\nMixpanelLib.prototype.track = addOptOutCheckMixpanelLib(function(event_name, properties, options, callback) {\n    if (!callback && typeof options === 'function') {\n        callback = options;\n        options = null;\n    }\n    options = options || {};\n    var transport = options['transport']; // external API, don't minify 'transport' prop\n    if (transport) {\n        options.transport = transport; // 'transport' prop name can be minified internally\n    }\n    var should_send_immediately = options['send_immediately'];\n    if (typeof callback !== 'function') {\n        callback = function() {};\n    }\n\n    if (_.isUndefined(event_name)) {\n        console$1.error('No event name provided to mixpanel.track');\n        return;\n    }\n\n    if (this._event_is_disabled(event_name)) {\n        callback(0);\n        return;\n    }\n\n    // set defaults\n    properties = properties || {};\n    properties['token'] = this.get_config('token');\n\n    // set $duration if time_event was previously called for this event\n    var start_timestamp = this['persistence'].remove_event_timer(event_name);\n    if (!_.isUndefined(start_timestamp)) {\n        var duration_in_ms = new Date().getTime() - start_timestamp;\n        properties['$duration'] = parseFloat((duration_in_ms / 1000).toFixed(3));\n    }\n\n    // update persistence\n    this['persistence'].update_search_keyword(document$1.referrer);\n\n    if (this.get_config('store_google')) { this['persistence'].update_campaign_params(); }\n    if (this.get_config('save_referrer')) { this['persistence'].update_referrer_info(document$1.referrer); }\n\n    // note: extend writes to the first object, so lets make sure we\n    // don't write to the persistence properties object and info\n    // properties object by passing in a new object\n\n    // update properties with pageview info and super-properties\n    properties = _.extend(\n        {},\n        _.info.properties(),\n        this['persistence'].properties(),\n        properties\n    );\n\n    var property_blacklist = this.get_config('property_blacklist');\n    if (_.isArray(property_blacklist)) {\n        _.each(property_blacklist, function(blacklisted_prop) {\n            delete properties[blacklisted_prop];\n        });\n    } else {\n        console$1.error('Invalid value for property_blacklist config: ' + property_blacklist);\n    }\n\n    var data = {\n        'event': event_name,\n        'properties': properties\n    };\n    var ret = this._track_or_batch({\n        truncated_data: _.truncate(data, 255),\n        endpoint: this.get_config('api_host') + '/track/',\n        batcher: this.request_batchers.events,\n        should_send_immediately: should_send_immediately,\n        send_request_options: options\n    }, callback);\n\n    this._check_and_handle_triggered_notifications(data);\n\n    return ret;\n});\n\n/**\n * Register the current user into one/many groups.\n *\n * ### Usage:\n *\n *      mixpanel.set_group('company', ['mixpanel', 'google']) // an array of IDs\n *      mixpanel.set_group('company', 'mixpanel')\n *      mixpanel.set_group('company', 128746312)\n *\n * @param {String} group_key Group key\n * @param {Array|String|Number} group_ids An array of group IDs, or a singular group ID\n * @param {Function} [callback] If provided, the callback will be called after tracking the event.\n *\n */\nMixpanelLib.prototype.set_group = addOptOutCheckMixpanelLib(function(group_key, group_ids, callback) {\n    if (!_.isArray(group_ids)) {\n        group_ids = [group_ids];\n    }\n    var prop = {};\n    prop[group_key] = group_ids;\n    this.register(prop);\n    return this['people'].set(group_key, group_ids, callback);\n});\n\n/**\n * Add a new group for this user.\n *\n * ### Usage:\n *\n *      mixpanel.add_group('company', 'mixpanel')\n *\n * @param {String} group_key Group key\n * @param {*} group_id A valid Mixpanel property type\n * @param {Function} [callback] If provided, the callback will be called after tracking the event.\n */\nMixpanelLib.prototype.add_group = addOptOutCheckMixpanelLib(function(group_key, group_id, callback) {\n    var old_values = this.get_property(group_key);\n    if (old_values === undefined) {\n        var prop = {};\n        prop[group_key] = [group_id];\n        this.register(prop);\n    } else {\n        if (old_values.indexOf(group_id) === -1) {\n            old_values.push(group_id);\n            this.register(prop);\n        }\n    }\n    return this['people'].union(group_key, group_id, callback);\n});\n\n/**\n * Remove a group from this user.\n *\n * ### Usage:\n *\n *      mixpanel.remove_group('company', 'mixpanel')\n *\n * @param {String} group_key Group key\n * @param {*} group_id A valid Mixpanel property type\n * @param {Function} [callback] If provided, the callback will be called after tracking the event.\n */\nMixpanelLib.prototype.remove_group = addOptOutCheckMixpanelLib(function(group_key, group_id, callback) {\n    var old_value = this.get_property(group_key);\n    // if the value doesn't exist, the persistent store is unchanged\n    if (old_value !== undefined) {\n        var idx = old_value.indexOf(group_id);\n        if (idx > -1) {\n            old_value.splice(idx, 1);\n            this.register({group_key: old_value});\n        }\n        if (old_value.length === 0) {\n            this.unregister(group_key);\n        }\n    }\n    return this['people'].remove(group_key, group_id, callback);\n});\n\n/**\n * Track an event with specific groups.\n *\n * ### Usage:\n *\n *      mixpanel.track_with_groups('purchase', {'product': 'iphone'}, {'University': ['UCB', 'UCLA']})\n *\n * @param {String} event_name The name of the event (see `mixpanel.track()`)\n * @param {Object=} properties A set of properties to include with the event you're sending (see `mixpanel.track()`)\n * @param {Object=} groups An object mapping group name keys to one or more values\n * @param {Function} [callback] If provided, the callback will be called after tracking the event.\n */\nMixpanelLib.prototype.track_with_groups = addOptOutCheckMixpanelLib(function(event_name, properties, groups, callback) {\n    var tracking_props = _.extend({}, properties || {});\n    _.each(groups, function(v, k) {\n        if (v !== null && v !== undefined) {\n            tracking_props[k] = v;\n        }\n    });\n    return this.track(event_name, tracking_props, callback);\n});\n\nMixpanelLib.prototype._create_map_key = function (group_key, group_id) {\n    return group_key + '_' + JSON.stringify(group_id);\n};\n\nMixpanelLib.prototype._remove_group_from_cache = function (group_key, group_id) {\n    delete this._cached_groups[this._create_map_key(group_key, group_id)];\n};\n\n/**\n * Look up reference to a Mixpanel group\n *\n * ### Usage:\n *\n *       mixpanel.get_group(group_key, group_id)\n *\n * @param {String} group_key Group key\n * @param {Object} group_id A valid Mixpanel property type\n * @returns {Object} A MixpanelGroup identifier\n */\nMixpanelLib.prototype.get_group = function (group_key, group_id) {\n    var map_key = this._create_map_key(group_key, group_id);\n    var group = this._cached_groups[map_key];\n    if (group === undefined || group._group_key !== group_key || group._group_id !== group_id) {\n        group = new MixpanelGroup();\n        group._init(this, group_key, group_id);\n        this._cached_groups[map_key] = group;\n    }\n    return group;\n};\n\n/**\n * Track a page view event, which is currently ignored by the server.\n * This function is called by default on page load unless the\n * track_pageview configuration variable is false.\n *\n * @param {String} [page] The url of the page to record. If you don't include this, it defaults to the current url.\n * @api private\n */\nMixpanelLib.prototype.track_pageview = function(page) {\n    if (_.isUndefined(page)) {\n        page = document$1.location.href;\n    }\n    this.track('mp_page_view', _.info.pageviewInfo(page));\n};\n\n/**\n * Track clicks on a set of document elements. Selector must be a\n * valid query. Elements must exist on the page at the time track_links is called.\n *\n * ### Usage:\n *\n *     // track click for link id #nav\n *     mixpanel.track_links('#nav', 'Clicked Nav Link');\n *\n * ### Notes:\n *\n * This function will wait up to 300 ms for the Mixpanel\n * servers to respond. If they have not responded by that time\n * it will head to the link without ensuring that your event\n * has been tracked.  To configure this timeout please see the\n * set_config() documentation below.\n *\n * If you pass a function in as the properties argument, the\n * function will receive the DOMElement that triggered the\n * event as an argument.  You are expected to return an object\n * from the function; any properties defined on this object\n * will be sent to mixpanel as event properties.\n *\n * @type {Function}\n * @param {Object|String} query A valid DOM query, element or jQuery-esque list\n * @param {String} event_name The name of the event to track\n * @param {Object|Function} [properties] A properties object or function that returns a dictionary of properties when passed a DOMElement\n */\nMixpanelLib.prototype.track_links = function() {\n    return this._track_dom.call(this, LinkTracker, arguments);\n};\n\n/**\n * Track form submissions. Selector must be a valid query.\n *\n * ### Usage:\n *\n *     // track submission for form id 'register'\n *     mixpanel.track_forms('#register', 'Created Account');\n *\n * ### Notes:\n *\n * This function will wait up to 300 ms for the mixpanel\n * servers to respond, if they have not responded by that time\n * it will head to the link without ensuring that your event\n * has been tracked.  To configure this timeout please see the\n * set_config() documentation below.\n *\n * If you pass a function in as the properties argument, the\n * function will receive the DOMElement that triggered the\n * event as an argument.  You are expected to return an object\n * from the function; any properties defined on this object\n * will be sent to mixpanel as event properties.\n *\n * @type {Function}\n * @param {Object|String} query A valid DOM query, element or jQuery-esque list\n * @param {String} event_name The name of the event to track\n * @param {Object|Function} [properties] This can be a set of properties, or a function that returns a set of properties after being passed a DOMElement\n */\nMixpanelLib.prototype.track_forms = function() {\n    return this._track_dom.call(this, FormTracker, arguments);\n};\n\n/**\n * Time an event by including the time between this call and a\n * later 'track' call for the same event in the properties sent\n * with the event.\n *\n * ### Usage:\n *\n *     // time an event named 'Registered'\n *     mixpanel.time_event('Registered');\n *     mixpanel.track('Registered', {'Gender': 'Male', 'Age': 21});\n *\n * When called for a particular event name, the next track call for that event\n * name will include the elapsed time between the 'time_event' and 'track'\n * calls. This value is stored as seconds in the '$duration' property.\n *\n * @param {String} event_name The name of the event.\n */\nMixpanelLib.prototype.time_event = function(event_name) {\n    if (_.isUndefined(event_name)) {\n        console$1.error('No event name provided to mixpanel.time_event');\n        return;\n    }\n\n    if (this._event_is_disabled(event_name)) {\n        return;\n    }\n\n    this['persistence'].set_event_timer(event_name,  new Date().getTime());\n};\n\n/**\n * Register a set of super properties, which are included with all\n * events. This will overwrite previous super property values.\n *\n * ### Usage:\n *\n *     // register 'Gender' as a super property\n *     mixpanel.register({'Gender': 'Female'});\n *\n *     // register several super properties when a user signs up\n *     mixpanel.register({\n *         'Email': 'jdoe@example.com',\n *         'Account Type': 'Free'\n *     });\n *\n * @param {Object} properties An associative array of properties to store about the user\n * @param {Number} [days] How many days since the user's last visit to store the super properties\n */\nMixpanelLib.prototype.register = function(props, days) {\n    this['persistence'].register(props, days);\n};\n\n/**\n * Register a set of super properties only once. This will not\n * overwrite previous super property values, unlike register().\n *\n * ### Usage:\n *\n *     // register a super property for the first time only\n *     mixpanel.register_once({\n *         'First Login Date': new Date().toISOString()\n *     });\n *\n * ### Notes:\n *\n * If default_value is specified, current super properties\n * with that value will be overwritten.\n *\n * @param {Object} properties An associative array of properties to store about the user\n * @param {*} [default_value] Value to override if already set in super properties (ex: 'False') Default: 'None'\n * @param {Number} [days] How many days since the users last visit to store the super properties\n */\nMixpanelLib.prototype.register_once = function(props, default_value, days) {\n    this['persistence'].register_once(props, default_value, days);\n};\n\n/**\n * Delete a super property stored with the current user.\n *\n * @param {String} property The name of the super property to remove\n */\nMixpanelLib.prototype.unregister = function(property) {\n    this['persistence'].unregister(property);\n};\n\nMixpanelLib.prototype._register_single = function(prop, value) {\n    var props = {};\n    props[prop] = value;\n    this.register(props);\n};\n\n/**\n * Identify a user with a unique ID to track user activity across\n * devices, tie a user to their events, and create a user profile.\n * If you never call this method, unique visitors are tracked using\n * a UUID generated the first time they visit the site.\n *\n * Call identify when you know the identity of the current user,\n * typically after login or signup. We recommend against using\n * identify for anonymous visitors to your site.\n *\n * ### Notes:\n * If your project has\n * <a href=\"https://help.mixpanel.com/hc/en-us/articles/360039133851\">ID Merge</a>\n * enabled, the identify method will connect pre- and\n * post-authentication events when appropriate.\n *\n * If your project does not have ID Merge enabled, identify will\n * change the user's local distinct_id to the unique ID you pass.\n * Events tracked prior to authentication will not be connected\n * to the same user identity. If ID Merge is disabled, alias can\n * be used to connect pre- and post-registration events.\n *\n * @param {String} [unique_id] A string that uniquely identifies a user. If not provided, the distinct_id currently in the persistent store (cookie or localStorage) will be used.\n */\nMixpanelLib.prototype.identify = function(\n    new_distinct_id, _set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback, _unset_callback, _remove_callback\n) {\n    // Optional Parameters\n    //  _set_callback:function  A callback to be run if and when the People set queue is flushed\n    //  _add_callback:function  A callback to be run if and when the People add queue is flushed\n    //  _append_callback:function  A callback to be run if and when the People append queue is flushed\n    //  _set_once_callback:function  A callback to be run if and when the People set_once queue is flushed\n    //  _union_callback:function  A callback to be run if and when the People union queue is flushed\n    //  _unset_callback:function  A callback to be run if and when the People unset queue is flushed\n\n    var previous_distinct_id = this.get_distinct_id();\n    this.register({'$user_id': new_distinct_id});\n\n    if (!this.get_property('$device_id')) {\n        // The persisted distinct id might not actually be a device id at all\n        // it might be a distinct id of the user from before\n        var device_id = previous_distinct_id;\n        this.register_once({\n            '$had_persisted_distinct_id': true,\n            '$device_id': device_id\n        }, '');\n    }\n\n    // identify only changes the distinct id if it doesn't match either the existing or the alias;\n    // if it's new, blow away the alias as well.\n    if (new_distinct_id !== previous_distinct_id && new_distinct_id !== this.get_property(ALIAS_ID_KEY)) {\n        this.unregister(ALIAS_ID_KEY);\n        this.register({'distinct_id': new_distinct_id});\n    }\n    this._check_and_handle_notifications(this.get_distinct_id());\n    this._flags.identify_called = true;\n    // Flush any queued up people requests\n    this['people']._flush(_set_callback, _add_callback, _append_callback, _set_once_callback, _union_callback, _unset_callback, _remove_callback);\n\n    // send an $identify event any time the distinct_id is changing - logic on the server\n    // will determine whether or not to do anything with it.\n    if (new_distinct_id !== previous_distinct_id) {\n        this.track('$identify', { 'distinct_id': new_distinct_id, '$anon_distinct_id': previous_distinct_id });\n    }\n};\n\n/**\n * Clears super properties and generates a new random distinct_id for this instance.\n * Useful for clearing data when a user logs out.\n */\nMixpanelLib.prototype.reset = function() {\n    this['persistence'].clear();\n    this._flags.identify_called = false;\n    var uuid = _.UUID();\n    this.register_once({\n        'distinct_id': uuid,\n        '$device_id': uuid\n    }, '');\n};\n\n/**\n * Returns the current distinct id of the user. This is either the id automatically\n * generated by the library or the id that has been passed by a call to identify().\n *\n * ### Notes:\n *\n * get_distinct_id() can only be called after the Mixpanel library has finished loading.\n * init() has a loaded function available to handle this automatically. For example:\n *\n *     // set distinct_id after the mixpanel library has loaded\n *     mixpanel.init('YOUR PROJECT TOKEN', {\n *         loaded: function(mixpanel) {\n *             distinct_id = mixpanel.get_distinct_id();\n *         }\n *     });\n */\nMixpanelLib.prototype.get_distinct_id = function() {\n    return this.get_property('distinct_id');\n};\n\n/**\n * The alias method creates an alias which Mixpanel will use to\n * remap one id to another. Multiple aliases can point to the\n * same identifier.\n *\n * The following is a valid use of alias:\n *\n *     mixpanel.alias('new_id', 'existing_id');\n *     // You can add multiple id aliases to the existing ID\n *     mixpanel.alias('newer_id', 'existing_id');\n *\n * Aliases can also be chained - the following is a valid example:\n *\n *     mixpanel.alias('new_id', 'existing_id');\n *     // chain newer_id - new_id - existing_id\n *     mixpanel.alias('newer_id', 'new_id');\n *\n * Aliases cannot point to multiple identifiers - the following\n * example will not work:\n *\n *     mixpanel.alias('new_id', 'existing_id');\n *     // this is invalid as 'new_id' already points to 'existing_id'\n *     mixpanel.alias('new_id', 'newer_id');\n *\n * ### Notes:\n *\n * If your project does not have\n * <a href=\"https://help.mixpanel.com/hc/en-us/articles/360039133851\">ID Merge</a>\n * enabled, the best practice is to call alias once when a unique\n * ID is first created for a user (e.g., when a user first registers\n * for an account). Do not use alias multiple times for a single\n * user without ID Merge enabled.\n *\n * @param {String} alias A unique identifier that you want to use for this user in the future.\n * @param {String} [original] The current identifier being used for this user.\n */\nMixpanelLib.prototype.alias = function(alias, original) {\n    // If the $people_distinct_id key exists in persistence, there has been a previous\n    // mixpanel.people.identify() call made for this user. It is VERY BAD to make an alias with\n    // this ID, as it will duplicate users.\n    if (alias === this.get_property(PEOPLE_DISTINCT_ID_KEY)) {\n        console$1.critical('Attempting to create alias for existing People user - aborting.');\n        return -2;\n    }\n\n    var _this = this;\n    if (_.isUndefined(original)) {\n        original = this.get_distinct_id();\n    }\n    if (alias !== original) {\n        this._register_single(ALIAS_ID_KEY, alias);\n        return this.track('$create_alias', { 'alias': alias, 'distinct_id': original }, function() {\n            // Flush the people queue\n            _this.identify(alias);\n        });\n    } else {\n        console$1.error('alias matches current distinct_id - skipping api call.');\n        this.identify(alias);\n        return -1;\n    }\n};\n\n/**\n * Provide a string to recognize the user by. The string passed to\n * this method will appear in the Mixpanel Streams product rather\n * than an automatically generated name. Name tags do not have to\n * be unique.\n *\n * This value will only be included in Streams data.\n *\n * @param {String} name_tag A human readable name for the user\n * @api private\n */\nMixpanelLib.prototype.name_tag = function(name_tag) {\n    this._register_single('mp_name_tag', name_tag);\n};\n\n/**\n * Update the configuration of a mixpanel library instance.\n *\n * The default config is:\n *\n *     {\n *       // HTTP method for tracking requests\n *       api_method: 'POST'\n *\n *       // transport for sending requests ('XHR' or 'sendBeacon')\n *       // NB: sendBeacon should only be used for scenarios such as\n *       // page unload where a \"best-effort\" attempt to send is\n *       // acceptable; the sendBeacon API does not support callbacks\n *       // or any way to know the result of the request. Mixpanel\n *       // tracking via sendBeacon will not support any event-\n *       // batching or retry mechanisms.\n *       api_transport: 'XHR'\n *\n *       // turn on request-batching/queueing/retry\n *       batch_requests: false,\n *\n *       // maximum number of events/updates to send in a single\n *       // network request\n *       batch_size: 50,\n *\n *       // milliseconds to wait between sending batch requests\n *       batch_flush_interval_ms: 5000,\n *\n *       // milliseconds to wait for network responses to batch requests\n *       // before they are considered timed-out and retried\n *       batch_request_timeout_ms: 90000,\n *\n *       // override value for cookie domain, only useful for ensuring\n *       // correct cross-subdomain cookies on unusual domains like\n *       // subdomain.mainsite.avocat.fr; NB this cannot be used to\n *       // set cookies on a different domain than the current origin\n *       cookie_domain: ''\n *\n *       // super properties cookie expiration (in days)\n *       cookie_expiration: 365\n *\n *       // if true, cookie will be set with SameSite=None; Secure\n *       // this is only useful in special situations, like embedded\n *       // 3rd-party iframes that set up a Mixpanel instance\n *       cross_site_cookie: false\n *\n *       // super properties span subdomains\n *       cross_subdomain_cookie: true\n *\n *       // debug mode\n *       debug: false\n *\n *       // if this is true, the mixpanel cookie or localStorage entry\n *       // will be deleted, and no user persistence will take place\n *       disable_persistence: false\n *\n *       // if this is true, Mixpanel will automatically determine\n *       // City, Region and Country data using the IP address of\n *       //the client\n *       ip: true\n *\n *       // opt users out of tracking by this Mixpanel instance by default\n *       opt_out_tracking_by_default: false\n *\n *       // opt users out of browser data storage by this Mixpanel instance by default\n *       opt_out_persistence_by_default: false\n *\n *       // persistence mechanism used by opt-in/opt-out methods - cookie\n *       // or localStorage - falls back to cookie if localStorage is unavailable\n *       opt_out_tracking_persistence_type: 'localStorage'\n *\n *       // customize the name of cookie/localStorage set by opt-in/opt-out methods\n *       opt_out_tracking_cookie_prefix: null\n *\n *       // type of persistent store for super properties (cookie/\n *       // localStorage) if set to 'localStorage', any existing\n *       // mixpanel cookie value with the same persistence_name\n *       // will be transferred to localStorage and deleted\n *       persistence: 'cookie'\n *\n *       // name for super properties persistent store\n *       persistence_name: ''\n *\n *       // names of properties/superproperties which should never\n *       // be sent with track() calls\n *       property_blacklist: []\n *\n *       // if this is true, mixpanel cookies will be marked as\n *       // secure, meaning they will only be transmitted over https\n *       secure_cookie: false\n *\n *       // the amount of time track_links will\n *       // wait for Mixpanel's servers to respond\n *       track_links_timeout: 300\n *\n *       // if you set upgrade to be true, the library will check for\n *       // a cookie from our old js library and import super\n *       // properties from it, then the old cookie is deleted\n *       // The upgrade config option only works in the initialization,\n *       // so make sure you set it when you create the library.\n *       upgrade: false\n *\n *       // extra HTTP request headers to set for each API request, in\n *       // the format {'Header-Name': value}\n *       xhr_headers: {}\n *\n *       // protocol for fetching in-app message resources, e.g.\n *       // 'https://' or 'http://'; defaults to '//' (which defers to the\n *       // current page's protocol)\n *       inapp_protocol: '//'\n *\n *       // whether to open in-app message link in new tab/window\n *       inapp_link_new_window: false\n *\n *       // whether to ignore or respect the web browser's Do Not Track setting\n *       ignore_dnt: false\n *     }\n *\n *\n * @param {Object} config A dictionary of new configuration values to update\n */\nMixpanelLib.prototype.set_config = function(config) {\n    if (_.isObject(config)) {\n        _.extend(this['config'], config);\n\n        var new_batch_size = config['batch_size'];\n        if (new_batch_size) {\n            _.each(this.request_batchers, function(batcher) {\n                batcher.resetBatchSize();\n            });\n        }\n\n        if (!this.get_config('persistence_name')) {\n            this['config']['persistence_name'] = this['config']['cookie_name'];\n        }\n        if (!this.get_config('disable_persistence')) {\n            this['config']['disable_persistence'] = this['config']['disable_cookie'];\n        }\n\n        if (this['persistence']) {\n            this['persistence'].update_config(this['config']);\n        }\n        Config.DEBUG = Config.DEBUG || this.get_config('debug');\n    }\n};\n\n/**\n * returns the current config object for the library.\n */\nMixpanelLib.prototype.get_config = function(prop_name) {\n    return this['config'][prop_name];\n};\n\n/**\n * Returns the value of the super property named property_name. If no such\n * property is set, get_property() will return the undefined value.\n *\n * ### Notes:\n *\n * get_property() can only be called after the Mixpanel library has finished loading.\n * init() has a loaded function available to handle this automatically. For example:\n *\n *     // grab value for 'user_id' after the mixpanel library has loaded\n *     mixpanel.init('YOUR PROJECT TOKEN', {\n *         loaded: function(mixpanel) {\n *             user_id = mixpanel.get_property('user_id');\n *         }\n *     });\n *\n * @param {String} property_name The name of the super property you want to retrieve\n */\nMixpanelLib.prototype.get_property = function(property_name) {\n    return this['persistence']['props'][property_name];\n};\n\nMixpanelLib.prototype.toString = function() {\n    var name = this.get_config('name');\n    if (name !== PRIMARY_INSTANCE_NAME) {\n        name = PRIMARY_INSTANCE_NAME + '.' + name;\n    }\n    return name;\n};\n\nMixpanelLib.prototype._event_is_disabled = function(event_name) {\n    return _.isBlockedUA(userAgent) ||\n        this._flags.disable_all_events ||\n        _.include(this.__disabled_events, event_name);\n};\n\nMixpanelLib.prototype._check_and_handle_triggered_notifications = addOptOutCheckMixpanelLib(function(event_data) {\n    if (!this._user_decide_check_complete) {\n        this._events_tracked_before_user_decide_check_complete.push(event_data);\n    } else {\n        var arr = this['_triggered_notifs'];\n        for (var i = 0; i < arr.length; i++) {\n            var notif = new MixpanelNotification(arr[i], this);\n            if (notif._matches_event_data(event_data)) {\n                this._show_notification(arr[i]);\n                return;\n            }\n        }\n    }\n});\n\nMixpanelLib.prototype._check_and_handle_notifications = addOptOutCheckMixpanelLib(function(distinct_id) {\n    if (\n        !distinct_id ||\n        this._flags.identify_called ||\n        this.get_config('disable_notifications')\n    ) {\n        return;\n    }\n\n    console$1.log('MIXPANEL NOTIFICATION CHECK');\n\n    var data = {\n        'verbose':     true,\n        'version':     '3',\n        'lib':         'web',\n        'token':       this.get_config('token'),\n        'distinct_id': distinct_id\n    };\n    this._send_request(\n        this.get_config('api_host') + '/decide/',\n        data,\n        {method: 'GET', transport: 'XHR'},\n        this._prepare_callback(_.bind(function(result) {\n            if (result['notifications'] && result['notifications'].length > 0) {\n                this['_triggered_notifs'] = [];\n                var notifications = [];\n                _.each(result['notifications'], function(notif) {\n                    (notif['display_triggers'] && notif['display_triggers'].length > 0 ? this['_triggered_notifs'] : notifications).push(notif);\n                }, this);\n                if (notifications.length > 0) {\n                    this._show_notification.call(this, notifications[0]);\n                }\n            }\n            this._handle_user_decide_check_complete();\n        }, this))\n    );\n});\n\nMixpanelLib.prototype._handle_user_decide_check_complete = function() {\n    this._user_decide_check_complete = true;\n\n    // check notifications against events that were tracked before decide call completed\n    var events = this._events_tracked_before_user_decide_check_complete;\n    while (events.length > 0) {\n        var data = events.shift(); // replay in the same order they came in\n        this._check_and_handle_triggered_notifications(data);\n    }\n};\n\nMixpanelLib.prototype._show_notification = function(notif_data) {\n    var notification = new MixpanelNotification(notif_data, this);\n    notification.show();\n};\n\n// perform some housekeeping around GDPR opt-in/out state\nMixpanelLib.prototype._gdpr_init = function() {\n    var is_localStorage_requested = this.get_config('opt_out_tracking_persistence_type') === 'localStorage';\n\n    // try to convert opt-in/out cookies to localStorage if possible\n    if (is_localStorage_requested && _.localStorage.is_supported()) {\n        if (!this.has_opted_in_tracking() && this.has_opted_in_tracking({'persistence_type': 'cookie'})) {\n            this.opt_in_tracking({'enable_persistence': false});\n        }\n        if (!this.has_opted_out_tracking() && this.has_opted_out_tracking({'persistence_type': 'cookie'})) {\n            this.opt_out_tracking({'clear_persistence': false});\n        }\n        this.clear_opt_in_out_tracking({\n            'persistence_type': 'cookie',\n            'enable_persistence': false\n        });\n    }\n\n    // check whether the user has already opted out - if so, clear & disable persistence\n    if (this.has_opted_out_tracking()) {\n        this._gdpr_update_persistence({'clear_persistence': true});\n\n    // check whether we should opt out by default\n    // note: we don't clear persistence here by default since opt-out default state is often\n    //       used as an initial state while GDPR information is being collected\n    } else if (!this.has_opted_in_tracking() && (\n        this.get_config('opt_out_tracking_by_default') || _.cookie.get('mp_optout')\n    )) {\n        _.cookie.remove('mp_optout');\n        this.opt_out_tracking({\n            'clear_persistence': this.get_config('opt_out_persistence_by_default')\n        });\n    }\n};\n\n/**\n * Enable or disable persistence based on options\n * only enable/disable if persistence is not already in this state\n * @param {boolean} [options.clear_persistence] If true, will delete all data stored by the sdk in persistence and disable it\n * @param {boolean} [options.enable_persistence] If true, will re-enable sdk persistence\n */\nMixpanelLib.prototype._gdpr_update_persistence = function(options) {\n    var disabled;\n    if (options && options['clear_persistence']) {\n        disabled = true;\n    } else if (options && options['enable_persistence']) {\n        disabled = false;\n    } else {\n        return;\n    }\n\n    if (!this.get_config('disable_persistence') && this['persistence'].disabled !== disabled) {\n        this['persistence'].set_disabled(disabled);\n    }\n\n    if (disabled) {\n        _.each(this.request_batchers, function(batcher) {\n            batcher.clear();\n        });\n    }\n};\n\n// call a base gdpr function after constructing the appropriate token and options args\nMixpanelLib.prototype._gdpr_call_func = function(func, options) {\n    options = _.extend({\n        'track': _.bind(this.track, this),\n        'persistence_type': this.get_config('opt_out_tracking_persistence_type'),\n        'cookie_prefix': this.get_config('opt_out_tracking_cookie_prefix'),\n        'cookie_expiration': this.get_config('cookie_expiration'),\n        'cross_site_cookie': this.get_config('cross_site_cookie'),\n        'cross_subdomain_cookie': this.get_config('cross_subdomain_cookie'),\n        'cookie_domain': this.get_config('cookie_domain'),\n        'secure_cookie': this.get_config('secure_cookie'),\n        'ignore_dnt': this.get_config('ignore_dnt')\n    }, options);\n\n    // check if localStorage can be used for recording opt out status, fall back to cookie if not\n    if (!_.localStorage.is_supported()) {\n        options['persistence_type'] = 'cookie';\n    }\n\n    return func(this.get_config('token'), {\n        track: options['track'],\n        trackEventName: options['track_event_name'],\n        trackProperties: options['track_properties'],\n        persistenceType: options['persistence_type'],\n        persistencePrefix: options['cookie_prefix'],\n        cookieDomain: options['cookie_domain'],\n        cookieExpiration: options['cookie_expiration'],\n        crossSiteCookie: options['cross_site_cookie'],\n        crossSubdomainCookie: options['cross_subdomain_cookie'],\n        secureCookie: options['secure_cookie'],\n        ignoreDnt: options['ignore_dnt']\n    });\n};\n\n/**\n * Opt the user in to data tracking and cookies/localstorage for this Mixpanel instance\n *\n * ### Usage\n *\n *     // opt user in\n *     mixpanel.opt_in_tracking();\n *\n *     // opt user in with specific event name, properties, cookie configuration\n *     mixpanel.opt_in_tracking({\n *         track_event_name: 'User opted in',\n *         track_event_properties: {\n *             'Email': 'jdoe@example.com'\n *         },\n *         cookie_expiration: 30,\n *         secure_cookie: true\n *     });\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {function} [options.track] Function used for tracking a Mixpanel event to record the opt-in action (default is this Mixpanel instance's track method)\n * @param {string} [options.track_event_name=$opt_in] Event name to be used for tracking the opt-in action\n * @param {Object} [options.track_properties] Set of properties to be tracked along with the opt-in action\n * @param {boolean} [options.enable_persistence=true] If true, will re-enable sdk persistence\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__mp_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookie_expiration] Number of days until the opt-in cookie expires (overrides value specified in this Mixpanel instance's config)\n * @param {string} [options.cookie_domain] Custom cookie domain (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.cross_site_cookie] Whether the opt-in cookie is set as cross-site-enabled (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.cross_subdomain_cookie] Whether the opt-in cookie is set as cross-subdomain or not (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.secure_cookie] Whether the opt-in cookie is set as secure or not (overrides value specified in this Mixpanel instance's config)\n */\nMixpanelLib.prototype.opt_in_tracking = function(options) {\n    options = _.extend({\n        'enable_persistence': true\n    }, options);\n\n    this._gdpr_call_func(optIn, options);\n    this._gdpr_update_persistence(options);\n};\n\n/**\n * Opt the user out of data tracking and cookies/localstorage for this Mixpanel instance\n *\n * ### Usage\n *\n *     // opt user out\n *     mixpanel.opt_out_tracking();\n *\n *     // opt user out with different cookie configuration from Mixpanel instance\n *     mixpanel.opt_out_tracking({\n *         cookie_expiration: 30,\n *         secure_cookie: true\n *     });\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {boolean} [options.delete_user=true] If true, will delete the currently identified user's profile and clear all charges after opting the user out\n * @param {boolean} [options.clear_persistence=true] If true, will delete all data stored by the sdk in persistence\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__mp_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookie_expiration] Number of days until the opt-in cookie expires (overrides value specified in this Mixpanel instance's config)\n * @param {string} [options.cookie_domain] Custom cookie domain (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.cross_site_cookie] Whether the opt-in cookie is set as cross-site-enabled (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.cross_subdomain_cookie] Whether the opt-in cookie is set as cross-subdomain or not (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.secure_cookie] Whether the opt-in cookie is set as secure or not (overrides value specified in this Mixpanel instance's config)\n */\nMixpanelLib.prototype.opt_out_tracking = function(options) {\n    options = _.extend({\n        'clear_persistence': true,\n        'delete_user': true\n    }, options);\n\n    // delete user and clear charges since these methods may be disabled by opt-out\n    if (options['delete_user'] && this['people'] && this['people']._identify_called()) {\n        this['people'].delete_user();\n        this['people'].clear_charges();\n    }\n\n    this._gdpr_call_func(optOut, options);\n    this._gdpr_update_persistence(options);\n};\n\n/**\n * Check whether the user has opted in to data tracking and cookies/localstorage for this Mixpanel instance\n *\n * ### Usage\n *\n *     var has_opted_in = mixpanel.has_opted_in_tracking();\n *     // use has_opted_in value\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__mp_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @returns {boolean} current opt-in status\n */\nMixpanelLib.prototype.has_opted_in_tracking = function(options) {\n    return this._gdpr_call_func(hasOptedIn, options);\n};\n\n/**\n * Check whether the user has opted out of data tracking and cookies/localstorage for this Mixpanel instance\n *\n * ### Usage\n *\n *     var has_opted_out = mixpanel.has_opted_out_tracking();\n *     // use has_opted_out value\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__mp_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @returns {boolean} current opt-out status\n */\nMixpanelLib.prototype.has_opted_out_tracking = function(options) {\n    return this._gdpr_call_func(hasOptedOut, options);\n};\n\n/**\n * Clear the user's opt in/out status of data tracking and cookies/localstorage for this Mixpanel instance\n *\n * ### Usage\n *\n *     // clear user's opt-in/out status\n *     mixpanel.clear_opt_in_out_tracking();\n *\n *     // clear user's opt-in/out status with specific cookie configuration - should match\n *     // configuration used when opt_in_tracking/opt_out_tracking methods were called.\n *     mixpanel.clear_opt_in_out_tracking({\n *         cookie_expiration: 30,\n *         secure_cookie: true\n *     });\n *\n * @param {Object} [options] A dictionary of config options to override\n * @param {boolean} [options.enable_persistence=true] If true, will re-enable sdk persistence\n * @param {string} [options.persistence_type=localStorage] Persistence mechanism used - cookie or localStorage - falls back to cookie if localStorage is unavailable\n * @param {string} [options.cookie_prefix=__mp_opt_in_out] Custom prefix to be used in the cookie/localstorage name\n * @param {Number} [options.cookie_expiration] Number of days until the opt-in cookie expires (overrides value specified in this Mixpanel instance's config)\n * @param {string} [options.cookie_domain] Custom cookie domain (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.cross_site_cookie] Whether the opt-in cookie is set as cross-site-enabled (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.cross_subdomain_cookie] Whether the opt-in cookie is set as cross-subdomain or not (overrides value specified in this Mixpanel instance's config)\n * @param {boolean} [options.secure_cookie] Whether the opt-in cookie is set as secure or not (overrides value specified in this Mixpanel instance's config)\n */\nMixpanelLib.prototype.clear_opt_in_out_tracking = function(options) {\n    options = _.extend({\n        'enable_persistence': true\n    }, options);\n\n    this._gdpr_call_func(clearOptInOut, options);\n    this._gdpr_update_persistence(options);\n};\n\n// EXPORTS (for closure compiler)\n\n// MixpanelLib Exports\nMixpanelLib.prototype['init']                               = MixpanelLib.prototype.init;\nMixpanelLib.prototype['reset']                              = MixpanelLib.prototype.reset;\nMixpanelLib.prototype['disable']                            = MixpanelLib.prototype.disable;\nMixpanelLib.prototype['time_event']                         = MixpanelLib.prototype.time_event;\nMixpanelLib.prototype['track']                              = MixpanelLib.prototype.track;\nMixpanelLib.prototype['track_links']                        = MixpanelLib.prototype.track_links;\nMixpanelLib.prototype['track_forms']                        = MixpanelLib.prototype.track_forms;\nMixpanelLib.prototype['track_pageview']                     = MixpanelLib.prototype.track_pageview;\nMixpanelLib.prototype['register']                           = MixpanelLib.prototype.register;\nMixpanelLib.prototype['register_once']                      = MixpanelLib.prototype.register_once;\nMixpanelLib.prototype['unregister']                         = MixpanelLib.prototype.unregister;\nMixpanelLib.prototype['identify']                           = MixpanelLib.prototype.identify;\nMixpanelLib.prototype['alias']                              = MixpanelLib.prototype.alias;\nMixpanelLib.prototype['name_tag']                           = MixpanelLib.prototype.name_tag;\nMixpanelLib.prototype['set_config']                         = MixpanelLib.prototype.set_config;\nMixpanelLib.prototype['get_config']                         = MixpanelLib.prototype.get_config;\nMixpanelLib.prototype['get_property']                       = MixpanelLib.prototype.get_property;\nMixpanelLib.prototype['get_distinct_id']                    = MixpanelLib.prototype.get_distinct_id;\nMixpanelLib.prototype['toString']                           = MixpanelLib.prototype.toString;\nMixpanelLib.prototype['_check_and_handle_notifications']    = MixpanelLib.prototype._check_and_handle_notifications;\nMixpanelLib.prototype['_handle_user_decide_check_complete'] = MixpanelLib.prototype._handle_user_decide_check_complete;\nMixpanelLib.prototype['_show_notification']                 = MixpanelLib.prototype._show_notification;\nMixpanelLib.prototype['opt_out_tracking']                   = MixpanelLib.prototype.opt_out_tracking;\nMixpanelLib.prototype['opt_in_tracking']                    = MixpanelLib.prototype.opt_in_tracking;\nMixpanelLib.prototype['has_opted_out_tracking']             = MixpanelLib.prototype.has_opted_out_tracking;\nMixpanelLib.prototype['has_opted_in_tracking']              = MixpanelLib.prototype.has_opted_in_tracking;\nMixpanelLib.prototype['clear_opt_in_out_tracking']          = MixpanelLib.prototype.clear_opt_in_out_tracking;\nMixpanelLib.prototype['get_group']                          = MixpanelLib.prototype.get_group;\nMixpanelLib.prototype['set_group']                          = MixpanelLib.prototype.set_group;\nMixpanelLib.prototype['add_group']                          = MixpanelLib.prototype.add_group;\nMixpanelLib.prototype['remove_group']                       = MixpanelLib.prototype.remove_group;\nMixpanelLib.prototype['track_with_groups']                  = MixpanelLib.prototype.track_with_groups;\nMixpanelLib.prototype['stop_batch_requests']                = MixpanelLib.prototype.stop_batch_requests;\n\n// MixpanelPersistence Exports\nMixpanelPersistence.prototype['properties']            = MixpanelPersistence.prototype.properties;\nMixpanelPersistence.prototype['update_search_keyword'] = MixpanelPersistence.prototype.update_search_keyword;\nMixpanelPersistence.prototype['update_referrer_info']  = MixpanelPersistence.prototype.update_referrer_info;\nMixpanelPersistence.prototype['get_cross_subdomain']   = MixpanelPersistence.prototype.get_cross_subdomain;\nMixpanelPersistence.prototype['clear']                 = MixpanelPersistence.prototype.clear;\n\n_.safewrap_class(MixpanelLib, ['identify', '_check_and_handle_notifications', '_show_notification']);\n\n\nvar instances = {};\nvar extend_mp = function() {\n    // add all the sub mixpanel instances\n    _.each(instances, function(instance, name) {\n        if (name !== PRIMARY_INSTANCE_NAME) { mixpanel_master[name] = instance; }\n    });\n\n    // add private functions as _\n    mixpanel_master['_'] = _;\n};\n\nvar override_mp_init_func = function() {\n    // we override the snippets init function to handle the case where a\n    // user initializes the mixpanel library after the script loads & runs\n    mixpanel_master['init'] = function(token, config, name) {\n        if (name) {\n            // initialize a sub library\n            if (!mixpanel_master[name]) {\n                mixpanel_master[name] = instances[name] = create_mplib(token, config, name);\n                mixpanel_master[name]._loaded();\n            }\n            return mixpanel_master[name];\n        } else {\n            var instance = mixpanel_master;\n\n            if (instances[PRIMARY_INSTANCE_NAME]) {\n                // main mixpanel lib already initialized\n                instance = instances[PRIMARY_INSTANCE_NAME];\n            } else if (token) {\n                // intialize the main mixpanel lib\n                instance = create_mplib(token, config, PRIMARY_INSTANCE_NAME);\n                instance._loaded();\n                instances[PRIMARY_INSTANCE_NAME] = instance;\n            }\n\n            mixpanel_master = instance;\n            if (init_type === INIT_SNIPPET) {\n                window$1[PRIMARY_INSTANCE_NAME] = mixpanel_master;\n            }\n            extend_mp();\n        }\n    };\n};\n\nvar add_dom_loaded_handler = function() {\n    // Cross browser DOM Loaded support\n    function dom_loaded_handler() {\n        // function flag since we only want to execute this once\n        if (dom_loaded_handler.done) { return; }\n        dom_loaded_handler.done = true;\n\n        DOM_LOADED = true;\n        ENQUEUE_REQUESTS = false;\n\n        _.each(instances, function(inst) {\n            inst._dom_loaded();\n        });\n    }\n\n    function do_scroll_check() {\n        try {\n            document$1.documentElement.doScroll('left');\n        } catch(e) {\n            setTimeout(do_scroll_check, 1);\n            return;\n        }\n\n        dom_loaded_handler();\n    }\n\n    if (document$1.addEventListener) {\n        if (document$1.readyState === 'complete') {\n            // safari 4 can fire the DOMContentLoaded event before loading all\n            // external JS (including this file). you will see some copypasta\n            // on the internet that checks for 'complete' and 'loaded', but\n            // 'loaded' is an IE thing\n            dom_loaded_handler();\n        } else {\n            document$1.addEventListener('DOMContentLoaded', dom_loaded_handler, false);\n        }\n    } else if (document$1.attachEvent) {\n        // IE\n        document$1.attachEvent('onreadystatechange', dom_loaded_handler);\n\n        // check to make sure we arn't in a frame\n        var toplevel = false;\n        try {\n            toplevel = window$1.frameElement === null;\n        } catch(e) {\n            // noop\n        }\n\n        if (document$1.documentElement.doScroll && toplevel) {\n            do_scroll_check();\n        }\n    }\n\n    // fallback handler, always will work\n    _.register_event(window$1, 'load', dom_loaded_handler, true);\n};\n\nfunction init_as_module() {\n    init_type = INIT_MODULE;\n    mixpanel_master = new MixpanelLib();\n\n    override_mp_init_func();\n    mixpanel_master['init']();\n    add_dom_loaded_handler();\n\n    return mixpanel_master;\n}\n\nvar mixpanel = init_as_module();\n\nmodule.exports = mixpanel;","module.exports={name:\"exisim\",version:\"3.5.0\",description:\"Zero-player human existence simulator\",author:{name:\"Leszek Pietrzak\",email:\"leszek@magicznyleszek.xyz\"},private:!1,homepage:\"https://github.com/magicznyleszek/exisim\",repository:\"git+https://github.com/magicznyleszek/exisim.git\",bugs:\"https://github.com/magicznyleszek/exisim/issues\",license:\"CC0-1.0\",scripts:{test:\"jest && npm run test-syntax\",\"test-syntax\":\"prettier --check source\",\"test-watch\":\"jest --watchAll\",start:\"parcel -p 2038 source/index.html -d dev\",\"build-app\":\"rm -rf public && parcel build source/index.html -d public --public-url ./ --no-cache && npm run copy-static-files\",\"copy-static-files\":\"cp humans.txt LICENSE manifest.json robots.txt sitemap.xml source/favicons/exisim-logo.svg public\"},devDependencies:{\"@types/jest\":\"^25.2.2\",\"@types/lodash\":\"^4.14.151\",\"@types/mixpanel-browser\":\"^2.35.3\",jest:\"^26.0.1\",\"mixpanel-browser\":\"^2.37.0\",\"parcel-bundler\":\"^1.12.4\",\"parcel-plugin-svg-sprite\":\"^1.4.1\",prettier:\"^2.0.5\",\"ts-jest\":\"^26.0.0\",typescript:\"^3.9.2\"},svgSpriteOptions:{include:[\"source/icons/*\"]},jest:{collectCoverage:!0,coverageThreshold:{global:{branches:80,functions:80,lines:80,statements:80}},transform:{\"^.+\\\\.ts?$\":\"ts-jest\"},moduleNameMapper:{\"\\\\.(gif|ttf|eot|svg)$\":\"<rootDir>/__mocks__/file-mock.js\"},testRegex:\"(/__tests__/.*|(\\\\.|/)(test|spec))\\\\.(js?|ts?)$\",moduleFileExtensions:[\"ts\",\"tsx\",\"js\",\"jsx\",\"json\",\"node\"]}};","import mixpanel from \"mixpanel-browser\";\nimport * as pack from \"../package.json\";\nimport { CatastropheName, PopulationStatus } from \"./common\";\nimport { IGameOverIncidentData, IncidentName, listen } from \"./incidents\";\nimport { stats } from \"./stats\";\n\nenum EventId {\n  GameOver = \"gameover\",\n}\n\ninterface IGameOverData {\n  catastropheClimate: number;\n  catastropheCyclone: number;\n  catastropheDrought: number;\n  catastropheEarthquake: number;\n  catastropheFlood: number;\n  catastropheIce: number;\n  catastropheMeteor: number;\n  catastrophePlague: number;\n  catastropheReligion: number;\n  catastropheVolcano: number;\n  catastropheWar: number;\n  populationMax: number;\n  populationMin: number;\n  status: PopulationStatus;\n  totalCatastrophes: number;\n  version?: string;\n  year: number;\n}\n\nexport class Tracker {\n  public constructor() {\n    mixpanel.init(\"b70e3845346d947336c4d57f05e75268\", {\n      disable_persistence: true,\n      ip: false,\n      track_pageview: false,\n    });\n    listen(IncidentName.GameOver, this.onGameOver.bind(this));\n  }\n\n  private onGameOver(evt: CustomEvent<IGameOverIncidentData>) {\n    const allStats = stats.getAll();\n    this.trackEvent(EventId.GameOver, {\n      catastropheClimate: stats.getCatastrophePercentage(\n        CatastropheName.Climate\n      ),\n      catastropheCyclone: stats.getCatastrophePercentage(\n        CatastropheName.Cyclone\n      ),\n      catastropheDrought: stats.getCatastrophePercentage(\n        CatastropheName.Drought\n      ),\n      catastropheEarthquake: stats.getCatastrophePercentage(\n        CatastropheName.Earthquake\n      ),\n      catastropheFlood: stats.getCatastrophePercentage(CatastropheName.Flood),\n      catastropheIce: stats.getCatastrophePercentage(CatastropheName.Ice),\n      catastropheMeteor: stats.getCatastrophePercentage(CatastropheName.Meteor),\n      catastrophePlague: stats.getCatastrophePercentage(CatastropheName.Plague),\n      catastropheReligion: stats.getCatastrophePercentage(\n        CatastropheName.Religion\n      ),\n      catastropheVolcano: stats.getCatastrophePercentage(\n        CatastropheName.Volcano\n      ),\n      catastropheWar: stats.getCatastrophePercentage(CatastropheName.War),\n      populationMax: allStats.highestPopulation,\n      populationMin: allStats.lowestPopulation,\n      status: evt.detail.status,\n      totalCatastrophes: allStats.catastrophesCountSum,\n      year: evt.detail.year,\n    });\n  }\n\n  private trackEvent(id: string, data: IGameOverData): void {\n    // always include game version\n    data.version = pack.version;\n    mixpanel.track(id, data);\n  }\n}\n","import { Existence } from \"./existence\";\nimport { Tracker } from \"./tracker\";\n\ndeclare global {\n  interface Window {\n    existence: Existence;\n    tracker: Tracker;\n  }\n}\n\nwindow.onload = (): void => {\n  window.setTimeout(() => {\n    window.existence = new Existence(1000000, true);\n    window.existence.startLife();\n  }, 3000);\n  window.tracker = new Tracker();\n};\n"]}