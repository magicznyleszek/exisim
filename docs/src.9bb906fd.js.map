{"version":3,"sources":["logger.ts","../node_modules/insights-js/dist/insights-js.umd.js","../package.json","tracker.ts","generator.ts","human.ts","humans.ts","existence.ts","index.ts"],"names":["module","exports","name","version","description","author","email","private","homepage","repository","bugs","license","scripts","test","start","devDependencies","jest","typescript","transform","testRegex","moduleFileExtensions"],"mappings":"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","file":"src.9bb906fd.js","sourceRoot":"../src","sourcesContent":["class Logger {\n  private static readonly safetyOffset: number = 100;\n  public constructor(private autoScroll: boolean) {}\n\n  // adds given message to the body, ending with newline\n  public log(message: string): void {\n    const logEl = document.getElementById(\"log\");\n    if (logEl !== null) {\n      // insertAdjacentHTML seems to be a bit faster than appendChild\n      logEl.insertAdjacentHTML(\"beforeend\", `${message}\\n`);\n\n      if (\n        logEl.scrollIntoView &&\n        this.autoScroll &&\n        // enable autoscroll only if scrolled to almost end of page\n        window.innerHeight + window.pageYOffset >=\n          logEl.offsetHeight - Logger.safetyOffset\n      ) {\n        // false means to the bottom of the element\n        logEl.scrollIntoView(false);\n      }\n    }\n  }\n}\n\nexport const logger = new Logger(true);\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.insights = {}));\n}(this, (function (exports) { 'use strict';\n\n  function isInBrowser() {\r\n      return typeof window !== \"undefined\";\r\n  }\r\n  /**\r\n   * Get the current host, including the protocol, origin and port (if any).\r\n   *\r\n   * Does **not** end with a trailing \"/\".\r\n   */\r\n  function getHost() {\r\n      return location.protocol + \"//\" + location.host;\r\n  }\r\n  function isReferrerSameHost() {\r\n      if (!isInBrowser()) {\r\n          return false;\r\n      }\r\n      var referrer = document.referrer || \"\";\r\n      var host = getHost();\r\n      return referrer.substr(0, host.length) === host;\r\n  }\n\n  /**\r\n   * Get the preferred browser locale, of the form: xx, xx-YY or falsy\r\n   */\r\n  function getLocale() {\r\n      var locale = typeof navigator.languages !== \"undefined\" ? navigator.languages[0] : navigator.language;\r\n      if (locale[0] === '\"') {\r\n          locale = locale.substr(1);\r\n      }\r\n      if (locale.length > 0 && locale[locale.length - 1] === '\"') {\r\n          locale = locale.substr(0, locale.length - 1);\r\n      }\r\n      if (locale && locale.length === 5 && locale[2] === \"-\") {\r\n          return locale.substr(0, 3) + locale.substr(3).toLocaleUpperCase();\r\n      }\r\n      return locale;\r\n  }\r\n  /**\r\n   * Track the default locale of the current user.\r\n   */\r\n  function locale() {\r\n      if (!isInBrowser()) {\r\n          return { type: \"locale\", value: \"<not-in-browser>\" };\r\n      }\r\n      var value = getLocale() || \"<none>\";\r\n      return { type: \"locale\", value: value };\r\n  }\r\n  function getScreenType() {\r\n      var width = window.innerWidth;\r\n      if (width <= 414)\r\n          return \"XS\";\r\n      if (width <= 800)\r\n          return \"S\";\r\n      if (width <= 1200)\r\n          return \"M\";\r\n      if (width <= 1600)\r\n          return \"L\";\r\n      return \"XL\";\r\n  }\r\n  /**\r\n   * Track the screen type of the current user, based on window size:\r\n   *\r\n   * - width <= 414: XS -> phone\r\n   * - width <= 800: S -> tablet\r\n   * - width <= 1200: M -> small laptop\r\n   * - width <= 1600: L -> large laptop\r\n   * - width > 1440: XL -> large desktop\r\n   */\r\n  function screenType() {\r\n      if (!isInBrowser()) {\r\n          return { type: \"screen-type\", value: \"<not-in-browser>\" };\r\n      }\r\n      return { type: \"screen-type\", value: getScreenType() };\r\n  }\r\n  /**\r\n   * Track the referrer on the current page, or `<none>` if the page has no referrer.\r\n   */\r\n  function referrer() {\r\n      if (!isInBrowser()) {\r\n          return { type: \"referrer\", value: \"<not-in-browser>\" };\r\n      }\r\n      if (isReferrerSameHost()) {\r\n          return { type: \"referrer\", value: \"<none>\" };\r\n      }\r\n      return { type: \"referrer\", value: document.referrer || \"<none>\" };\r\n  }\r\n  /**\r\n   * Track the current path within the application.\r\n   * By default, does not log the `location.hash` nor the `location.search`\r\n   *\r\n   * @param hash `true` to log the hash, `false` by default\r\n   * @param search `true` to log the hash, `false` by default\r\n   */\r\n  function path(hash, search) {\r\n      if (hash === void 0) { hash = false; }\r\n      if (search === void 0) { search = false; }\r\n      if (!isInBrowser()) {\r\n          return { type: \"path\", value: \"<not-in-browser>\" };\r\n      }\r\n      var value = window.location.pathname;\r\n      var _hash = window.location.hash;\r\n      var _search = window.location.search;\r\n      if (hash && search) {\r\n          // the hash contains the search\r\n          value += _hash;\r\n      }\r\n      else if (hash) {\r\n          value += _hash.substr(0, _hash.length - _search.length);\r\n      }\r\n      else if (search) {\r\n          value += _search;\r\n      }\r\n      return { type: \"path\", value: value };\r\n  }\r\n  /**\r\n   * Track a transition between two values.\r\n   *\r\n   * @param previous The previous value\r\n   * @param next The next value\r\n   */\r\n  function transition(previous, next) {\r\n      return { type: \"transition\", value: previous + \"  ->  \" + next };\r\n  }\r\n  /**\r\n   * Track a duration at several intervals:\r\n   *\r\n   * - < 5 seconds\r\n   * - < 15 seconds\r\n   * - < 30 seconds\r\n   * - < 1 minute\r\n   * - < 5 minutes\r\n   * - \\> 5 minutes\r\n   *\r\n   * @param durationMs the duration to encode, in milliseconds\r\n   */\r\n  function durationInterval(durationMs, prefix) {\r\n      if (prefix === void 0) { prefix = \"\"; }\r\n      if (durationMs < 5000) {\r\n          return { type: \"duration-interval\", value: prefix + \"< 5s\" };\r\n      }\r\n      if (durationMs < 15000) {\r\n          return { type: \"duration-interval\", value: prefix + \"< 15s\" };\r\n      }\r\n      if (durationMs < 30000) {\r\n          return { type: \"duration-interval\", value: prefix + \"< 30s\" };\r\n      }\r\n      if (durationMs < 60000) {\r\n          return { type: \"duration-interval\", value: prefix + \"< 1m\" };\r\n      }\r\n      if (durationMs < 5 * 60000) {\r\n          return { type: \"duration-interval\", value: prefix + \"< 5m\" };\r\n      }\r\n      return { type: \"duration-interval\", value: prefix + \"> 5m\" };\r\n  }\n\n  var parameters = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    locale: locale,\n    screenType: screenType,\n    referrer: referrer,\n    path: path,\n    transition: transition,\n    durationInterval: durationInterval\n  });\n\n  /**\r\n   * The default options.\r\n   */\r\n  var defaultOptions = {};\r\n  /**\r\n   * A class that contains a `projectId` and related configuration to track events painlessly.\r\n   */\r\n  var App = /** @class */ (function () {\r\n      function App(projectId, options) {\r\n          if (options === void 0) { options = defaultOptions; }\r\n          this.projectId = projectId;\r\n          this.options = options;\r\n          this.uniques = {};\r\n          // variables used when tracking pages\r\n          this.trackPageData = null;\r\n          this.trackPageChange = this.trackPageChange.bind(this);\r\n          this.trackLastPageTimeSpent = this.trackLastPageTimeSpent.bind(this);\r\n      }\r\n      /**\r\n       * Track an occurence of the given event.\r\n       *\r\n       * @param event {TrackEventPayload} The event to track.\r\n       */\r\n      App.prototype.track = function (event) {\r\n          if (this.options.disabled || !isInBrowser()) {\r\n              return Promise.resolve();\r\n          }\r\n          if (event.unique) {\r\n              var stringified = JSON.stringify(event);\r\n              if (this.uniques[stringified])\r\n                  return Promise.resolve();\r\n              this.uniques[stringified] = true;\r\n          }\r\n          var body = {\r\n              id: event.id,\r\n              projectId: this.projectId,\r\n              ignoreErrors: this.options.ignoreErrors || false\r\n          };\r\n          if (event.remove)\r\n              body.remove = true;\r\n          if (event.parameters)\r\n              body.parameters = event.parameters;\r\n          if (event.update)\r\n              body.update = true;\r\n          // do not use fetch, for IE compatibility\r\n          var request = new XMLHttpRequest();\r\n          request.open(\"post\", \"https://getinsights.io/app/tics\", true);\r\n          request.setRequestHeader(\"Content-Type\", \"application/json\");\r\n          request.send(JSON.stringify(body));\r\n      };\r\n      /**\r\n       * Tracks page views. This method checks if the URL changed every so often and tracks new pages accordingly.\r\n       *\r\n       * @param options The options to use for the tracking\r\n       *\r\n       * @returns An object of the form `{ stop(): void }` to stop the tracking\r\n       */\r\n      App.prototype.trackPages = function (options) {\r\n          if (!isInBrowser()) {\r\n              return { stop: function () { } };\r\n          }\r\n          if (this.trackPageData) {\r\n              return this.trackPageData.result;\r\n          }\r\n          // Start tracking page changes\r\n          var interval = setInterval(this.trackPageChange, 2000);\r\n          // Calculate the data\r\n          var _a = options || {}, _b = _a.hash, hash = _b === void 0 ? false : _b, _c = _a.search, search = _c === void 0 ? false : _c;\r\n          this.trackPageData = {\r\n              hash: hash,\r\n              search: search,\r\n              path: path(hash, search).value,\r\n              isOnFirstPage: true,\r\n              time: Date.now(),\r\n              result: {\r\n                  stop: function () {\r\n                      clearInterval(interval);\r\n                  }\r\n              }\r\n          };\r\n          // Track the first/current page view\r\n          this.trackSinglePage(true, this.trackPageData.path);\r\n          window.addEventListener(\"unload\", this.trackLastPageTimeSpent);\r\n          return this.trackPageData.result;\r\n      };\r\n      App.prototype.getPreviousPage = function (first) {\r\n          var dataPath = this.trackPageData && this.trackPageData.path;\r\n          if (!first && dataPath) {\r\n              return dataPath;\r\n          }\r\n          if (isReferrerSameHost()) {\r\n              return document.referrer.replace(getHost(), \"\");\r\n          }\r\n          return document.referrer;\r\n      };\r\n      App.prototype.trackPageChange = function () {\r\n          if (!this.trackPageData)\r\n              return;\r\n          var _a = this.trackPageData, hash = _a.hash, search = _a.search;\r\n          var newPath = path(hash, search).value;\r\n          if (newPath !== this.trackPageData.path) {\r\n              this.trackSinglePage(false, newPath);\r\n          }\r\n      };\r\n      App.prototype.trackSinglePage = function (first, path) {\r\n          if (!this.trackPageData)\r\n              return;\r\n          this.trackPageData.isOnFirstPage = first && !isReferrerSameHost();\r\n          var _a = this.trackPageData, time = _a.time, isOnFirstPage = _a.isOnFirstPage;\r\n          var params = {\r\n              path: path\r\n          };\r\n          if (isOnFirstPage) {\r\n              params.uniqueViews = path;\r\n              params.referrer = referrer();\r\n              params.locale = locale();\r\n              params.screenType = screenType();\r\n          }\r\n          var previous = this.getPreviousPage(first);\r\n          if (previous && previous !== path) {\r\n              params.transitions = transition(previous, path);\r\n              if (!isOnFirstPage) {\r\n                  var now = Date.now();\r\n                  this.trackPageData.time = now;\r\n                  params.duration = durationInterval(now - time, previous + \" - \");\r\n              }\r\n          }\r\n          this.trackPageData.path = path;\r\n          this.track({\r\n              id: \"page-views\",\r\n              parameters: params\r\n          });\r\n      };\r\n      App.prototype.trackLastPageTimeSpent = function () {\r\n          var time = this.trackPageData && this.trackPageData.time;\r\n          if (!time || typeof navigator.sendBeacon !== \"function\" || this.options.disabled || !this.trackPageData) {\r\n              return;\r\n          }\r\n          var _a = this.trackPageData, isOnFirstPage = _a.isOnFirstPage, path = _a.path;\r\n          var params = {};\r\n          // add the duration\r\n          params.duration = durationInterval(Date.now() - time, path + \" - \");\r\n          var nextUrl = (document.activeElement && document.activeElement.href) || \"\";\r\n          var host = getHost();\r\n          if (!nextUrl) {\r\n              // user closed the window\r\n              params.bounces = isOnFirstPage ? \"Yes\" : \"No\";\r\n          }\r\n          else if (nextUrl[0] !== \"/\" && nextUrl.substr(0, host.length) !== getHost()) {\r\n              // link outside of the app\r\n              params.transitions = transition(path, nextUrl);\r\n          }\r\n          // polyfil for IE, this won't always work, but it's better than nothing.\r\n          navigator.sendBeacon =\r\n              navigator.sendBeacon ||\r\n                  function (url, body) {\r\n                      var request = new XMLHttpRequest();\r\n                      request.open(\"post\", url, false);\r\n                      request.send(body);\r\n                  };\r\n          navigator.sendBeacon(\"https://getinsights.io/app/tics\", JSON.stringify({\r\n              id: \"page-views\",\r\n              projectId: this.projectId,\r\n              parameters: params,\r\n              ignoreErrors: this.options.ignoreErrors || false,\r\n              update: true\r\n          }));\r\n      };\r\n      return App;\r\n  }());\n\n  /**\r\n   * This file is the entry point for the `insights-js` library.\r\n   *\r\n   * It contains basic methods to initialize and log events:\r\n   * ```typescript\r\n   * init(projectId: string, options?: AppOptions): App\r\n   * track(event: TrackEventPayload): void\r\n   * trackPages(options?: TrackPagesOptions): TrackPagesResult\r\n   * ```\r\n   *\r\n   * As well as the `parameters` helpers.\r\n   */\r\n  /**\r\n   * The default application, or `null` if none.\r\n   */\r\n  exports.DEFAULT_APP = null;\r\n  /**\r\n   * Initialize a default app for the given project with the given options.\r\n   *\r\n   * @param projectId The project for which to initialize the library\r\n   * @param options The options to use\r\n   *\r\n   * @returns The default app\r\n   */\r\n  function init(projectId, options) {\r\n      if (!isInBrowser() || !!exports.DEFAULT_APP) {\r\n          throw new Error(\"Already initialized!\");\r\n      }\r\n      exports.DEFAULT_APP = new App(projectId, options);\r\n      return exports.DEFAULT_APP;\r\n  }\r\n  /**\r\n   * Tracks an event using the default app, you must call `init()` before calling this.\r\n   *\r\n   * @param event The event to track\r\n   */\r\n  function track(event) {\r\n      if (!exports.DEFAULT_APP || !isInBrowser())\r\n          return;\r\n      exports.DEFAULT_APP.track(event);\r\n  }\r\n  /**\r\n   * Tracks page views using the default app.\r\n   * This method checks if the URL changed every so often and tracks new pages accordingly.\r\n   *\r\n   * By default, does not track the `location.hash` nor the `location.search`.\r\n   *\r\n   * @param options The options to use for the tracking\r\n   *\r\n   * @returns An object of the form `{ stop(): void }` to stop the tracking\r\n   */\r\n  function trackPages(options) {\r\n      if (!exports.DEFAULT_APP || !isInBrowser())\r\n          return { stop: function () { } };\r\n      return exports.DEFAULT_APP.trackPages(options);\r\n  }\n\n  exports.App = App;\n  exports.init = init;\n  exports.parameters = parameters;\n  exports.track = track;\n  exports.trackPages = trackPages;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","module.exports={name:\"exisim\",version:\"2.4.0\",description:\"Zero-player human existence simulator\",author:{name:\"Leszek Pietrzak\",email:\"leszek@magicznyleszek.xyz\"},private:!1,homepage:\"https://github.com/magicznyleszek/exisim\",repository:\"git+https://github.com/magicznyleszek/exisim.git\",bugs:\"https://github.com/magicznyleszek/exisim/issues\",license:\"CC0-1.0\",scripts:{test:\"jest\",\"test-watch\":\"jest --watchAll --coverage\",start:\"parcel -p 2038 src/index.html -d dev\",\"build-docs\":\"rm -rf docs && parcel build src/index.html -d docs --public-url ./ --no-cache && npm run copy-static-files\",\"copy-static-files\":\"cp CNAME favicon.png humans.txt LICENSE manifest.json favicon.ico favicon.png docs\"},devDependencies:{\"@types/jest\":\"^25.2.2\",\"@types/lodash\":\"^4.14.151\",\"insights-js\":\"^1.2.10\",jest:\"^26.0.1\",\"parcel-bundler\":\"^1.12.4\",\"ts-jest\":\"^26.0.0\",typescript:\"^3.9.2\"},jest:{transform:{\"^.+\\\\.ts?$\":\"ts-jest\"},testRegex:\"(/__tests__/.*|(\\\\.|/)(test|spec))\\\\.(js?|ts?)$\",moduleFileExtensions:[\"ts\",\"tsx\",\"js\",\"jsx\",\"json\",\"node\"]}};","import { init, track } from \"insights-js\";\nimport * as pack from \"../package.json\";\n\nexport enum EventId {\n  GameOver = \"gameover\"\n}\n\nclass Tracker {\n  public constructor() {\n    init(\"PwyE12lRXwDKH5aP\");\n  }\n\n  public trackEvent(id: string, data: any): void {\n    // include game version\n    data.version = pack.version;\n    track({\n      id: id,\n      parameters: data\n    });\n  }\n}\n\nexport const tracker = new Tracker();\n","class Generator {\n  public getRandomNumber(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  public getRandomPercent(): number {\n    return this.getRandomNumber(0, 100);\n  }\n\n  // returns capitalized two part name, e.g. \"N03murxt48 Ka9dpari\"\n  public getUniqueName(): string {\n    const firstName = Math.random().toString(36).substring(2);\n    const lastName = Date.now().toString(36);\n    return (`${firstName} ${lastName}`).replace(/\\b\\w/g, (c: string) => c.toUpperCase());\n  }\n}\n\nexport const generator = new Generator();\n","import { generator } from \"./generator\";\n\nexport class Human {\n  // https://menstrual-cycle-calculator.com/chance-pregnant-unprotected-sex/\n  public static readonly pregnancyChance: number = 30 / 100;\n  // based on Paleolithic https://en.wikipedia.org/wiki/Life_expectancy\n  public static readonly maxAge: number = 54;\n  // https://en.wikipedia.org/wiki/Age_and_female_fertility\n  public static readonly pubertyAge: number = 12;\n  // https://en.wikipedia.org/wiki/Pregnancy_over_age_50\n  public static readonly menopauseAge: number = 72;\n  // The Framingham Heart Study https://www.sharecare.com/health/longevity/how-parents-lifespan-affect-lifespan\n  private static readonly lifespanInheritance: number = 6 / 100;\n  // https://revisesociology.com/2017/11/07/how-many-people-single/\n  private static readonly inRelationshipChance: number = 61 / 100;\n\n  public age: number = 0;\n  public isAdult: boolean = false;\n  public isAlive: boolean = true;\n  public name: string;\n  public lifespan: number;\n\n  public constructor(parent1?: Human, parent2?: Human) {\n    this.name = generator.getUniqueName();\n    this.lifespan = this.generateLifespan(parent1, parent2);\n    // check if not born dead\n    this.checkIfAlive();\n  }\n\n  // increments the age by 1, checks if didn't die of old age and assigns to proper age group\n  public bumpAge(): void {\n    this.age++;\n    this.isAdult = this.age >= Human.pubertyAge;\n    this.checkIfAlive();\n  }\n\n  // generates lifespan based on random things and parents\n  private generateLifespan(parent1?: Human, parent2?: Human): number {\n    const randomLifespan = generator.getRandomNumber(0, Human.maxAge);\n    if (randomLifespan === 0) {\n      return 0;\n    } else if (parent1 instanceof Human && parent2 instanceof Human) {\n      return Math.floor(\n        Human.lifespanInheritance * ((parent1.lifespan + parent2.lifespan) / 2) +\n        (1 - Human.lifespanInheritance) * randomLifespan\n      );\n    } else {\n      return randomLifespan;\n    }\n  }\n\n  private checkIfAlive(): void {\n    this.isAlive = this.age < this.lifespan;\n  }\n\n  // returns a % chance two given humans will fall in love and make a baby\n  public static getBabyChance(human1: Human, human2: Human): number {\n    if (human1.isAdult && human2.isAdult) {\n      return 100 * (Human.pregnancyChance * Human.inRelationshipChance);\n    } else {\n      return 0;\n    }\n  }\n}\n","import { Human } from \"./human\";\nimport { generator } from \"./generator\";\n\ninterface IAgeGroupsCount {\n  baby: number;\n  adult: number;\n}\n\nexport class Humans {\n  private population: Human[] = [];\n\n  public constructor(initialPopulation: number) {\n    this.generateInitialPopulation(initialPopulation);\n  }\n\n  public getTotalCount(): number {\n    return this.population.length;\n  }\n\n  public getAgeGroupsCount(): IAgeGroupsCount {\n    const ageGroupsCount = {\n      baby: 0,\n      adult: 0\n    };\n    for (const human of this.population) {\n      if (human.isAdult) {\n        ageGroupsCount.adult++;\n      } else {\n        ageGroupsCount.baby++;\n      }\n    }\n    return ageGroupsCount;\n  }\n\n  public growByOneYear(): void {\n    for (const human of this.population) {\n      human.bumpAge();\n    }\n  }\n\n  // immediately removes X random humans from the population\n  public killRandomHumans(killCount: number): void {\n    for (let i = killCount; i >= 0; i--) {\n      const populationLength = this.population.length;\n      const randomIndex = Math.floor(Math.random() * populationLength);\n      this.population[randomIndex] = this.population[populationLength - 1];\n      this.population.pop();\n    }\n  }\n\n  // removes humans that died from old age from the population\n  // returns the number of removed humans\n  public buryDead(): number {\n    const populationCountBefore = this.population.length;\n    // keep only alive people in population\n    this.population = this.population.filter((human: Human): boolean => {\n      return human.isAlive;\n    });\n    return populationCountBefore - this.population.length;\n  }\n\n  // finds a random mate for each human and if matched will create a new baby human\n  // returns the number of born humans\n  public makeLove(): number {\n    let bornCount = 0;\n\n    if (this.population.length <= 1) {\n      return bornCount;\n    } else {\n      for (let i = this.population.length - 1; i >= 0; i--) {\n        const human = this.population[i];\n        // get other random human\n        const mate = this.getRandomHuman(i);\n        if (this.isLoveFruitful(human, mate)) {\n          const baby = new Human(human, mate);\n          this.population.push(baby);\n          bornCount++;\n        }\n      }\n    }\n    return bornCount;\n  }\n\n  public getHuman(index: number): Human {\n    return this.population[index];\n  }\n\n  // returns a random human, potentially other than given index\n  public getRandomHuman(otherThan?: number): Human {\n    let randomIndex = generator.getRandomNumber(0, this.population.length - 1);\n    while (randomIndex === otherThan) {\n      randomIndex = generator.getRandomNumber(0, this.population.length - 1);\n    }\n    return this.population[randomIndex];\n  }\n\n  // checks if two humans are able to love each other and if are able to get pregnant\n  private isLoveFruitful(human1: Human, human2: Human): boolean {\n    return Human.getBabyChance(human1, human2) > generator.getRandomPercent();\n  }\n\n  private generateInitialPopulation(initialPopulation: number): void {\n    for (let i = 0; i < initialPopulation; i++) {\n      this.population.push(new Human());\n    }\n  }\n}\n","import { logger } from \"./logger\";\nimport { tracker, EventId } from \"./tracker\";\nimport { Humans } from \"./humans\";\nimport { generator } from \"./generator\";\n\nexport interface ICatastrophe {\n  type: string;\n  killMin: number;\n  killMax: number;\n}\n\nexport enum PopulationStatus {\n  Extinct = \"extinct\",\n  Struggling = \"struggling\",\n  Safe = \"safe\"\n}\n\nexport const CATASTROPHES: ICatastrophe[] = [\n  // meteor - https://en.wikipedia.org/wiki/Chicxulub_crater\n  { type: \"☄️\", killMin: 0, killMax: 75 },\n  // plague - https://en.wikipedia.org/wiki/Black_Death\n  { type: \"🤢\", killMin: 30, killMax: 60 },\n  // famine - https://en.wikipedia.org/wiki/List_of_natural_disasters_by_death_toll\n  { type: \"🏜\", killMin: 10, killMax: 28 },\n  // ice age\n  { type: \"🥶\", killMin: 15, killMax: 20 },\n  // climate warming - http://www.impactlab.org/news-insights/valuing-climate-change-mortality/\n  { type: \"🌡️\", killMin: 16, killMax: 19 },\n  // flood\n  { type: \"🌊\", killMin: 3, killMax: 13 },\n  // wildfire\n  { type: \"🔥\", killMin: 11, killMax: 12 },\n  // volcano eruption\n  { type: \"🌋\", killMin: 1, killMax: 9 },\n  // cyclone\n  { type: \"🌪\", killMin: 6, killMax: 6 },\n  // war - https://en.m.wikipedia.org/wiki/World_War_II_casualties\n  { type: \"⚔️\", killMin: 2, killMax: 3 },\n  // religion - https://rationalwiki.org/wiki/Death_toll_of_Christianity\n  { type: \"🙏\", killMin: 1, killMax: 2 }\n];\n\nexport class Existence {\n  // https://en.wikipedia.org/wiki/Minimum_viable_population\n  private static readonly initialPopulation: number = 4169;\n  private static readonly yearTime: number = 0.1 * 1000; // seconds\n  // FYI this line is the length of maximum output length\n  private static readonly longLine: string = \"--------------------------------------------\";\n\n  private targetPopulation: number;\n  private humans: Humans;\n  private lifeIntervalId: number = 0;\n  private currentYear: number = 0;\n  private isLoggingEnabled: boolean = false;\n\n  public constructor(targetPopulation: number, enableLogging: boolean) {\n    this.targetPopulation = targetPopulation;\n    this.humans = new Humans(Existence.initialPopulation);\n    this.isLoggingEnabled = enableLogging;\n    if (this.isLoggingEnabled) {\n      logger.log(Existence.longLine);\n      logger.log(`${this.humans.getTotalCount()} humans appeared.`);\n    }\n  }\n\n  public startLife(): void {\n    this.lifeIntervalId = window.setInterval(\n      this.simulateOneYear.bind(this),\n      Existence.yearTime\n    );\n  }\n\n  public simulateOneYear(): void {\n    this.bumpYear();\n\n    const initialCount = this.humans.getTotalCount();\n\n    const bornCount = this.humans.makeLove();\n\n    const buriedCount = this.humans.buryDead();\n\n    const appliedCatastrophe = this.applyRandomCatastrophe();\n    const catastropheDeadCount = Math.abs(\n      this.humans.getTotalCount() + buriedCount - bornCount - initialCount\n    );\n\n    if (this.isLoggingEnabled) {\n      this.logYear(\n        bornCount,\n        appliedCatastrophe,\n        buriedCount + catastropheDeadCount\n      );\n    }\n\n    this.checkGoals();\n  }\n\n  public getPopulationStatus(): PopulationStatus {\n    if (this.humans.getTotalCount() === 0) {\n      return PopulationStatus.Extinct;\n    } else if (this.humans.getTotalCount() >= this.targetPopulation) {\n      return PopulationStatus.Safe;\n    } else {\n      return PopulationStatus.Struggling;\n    }\n  }\n\n  public getRandomCatastrophe(): ICatastrophe {\n    return CATASTROPHES[generator.getRandomNumber(0, CATASTROPHES.length - 1)];\n  }\n\n  private logYear(\n    bornCount: number,\n    catastrophe: ICatastrophe | null,\n    deadCount: number\n  ): void {\n    // year\n    const messageParts = [`y${this.currentYear}`];\n\n    if (catastrophe === null) {\n      messageParts.push(`✝${deadCount}`);\n    } else {\n      messageParts.push(`${catastrophe.type}${deadCount}`);\n    }\n\n    messageParts.push(`❋${bornCount}`);\n\n    // current population\n    const totalCount = this.humans.getTotalCount();\n    if (deadCount > bornCount) {\n      messageParts.push(`<span class=\"negative\">&darr;${totalCount}</span>`);\n    } else if (bornCount > deadCount) {\n      messageParts.push(`<span class=\"positive\">&uarr;${totalCount}</span>`);\n    } else {\n      messageParts.push(`&middot;${totalCount}`);\n    }\n\n    const groupsCount = this.humans.getAgeGroupsCount();\n    messageParts.push(`(👶${groupsCount.baby} 👩${groupsCount.adult})`);\n\n    // final message\n    logger.log(messageParts.join(\" \"));\n  }\n\n  private bumpYear(): void {\n    this.currentYear++;\n    this.humans.growByOneYear();\n  }\n\n  // kills % of population (if happens)\n  private applyRandomCatastrophe(): ICatastrophe | null {\n    // every catastrophe has 1% chance of happening\n    if (CATASTROPHES.length >= generator.getRandomPercent()) {\n      const catastrophe = this.getRandomCatastrophe();\n      const killPercentage = generator.getRandomNumber(catastrophe.killMin, catastrophe.killMax);\n      this.humans.killRandomHumans(this.humans.getTotalCount() * (killPercentage / 100));\n      return catastrophe;\n    } else {\n      return null;\n    }\n  }\n\n  private checkGoals(): void {\n    const status = this.getPopulationStatus();\n    if (status === PopulationStatus.Extinct || status === PopulationStatus.Safe) {\n      window.clearInterval(this.lifeIntervalId);\n      this.gameOver();\n    }\n  }\n\n  private gameOver(): void {\n    const status = this.getPopulationStatus();\n\n    if (this.isLoggingEnabled) {\n      if (status === PopulationStatus.Extinct) {\n        logger.log(\"All humans died.\");\n      } else if (status === PopulationStatus.Safe) {\n        logger.log(`Human population reached ${this.targetPopulation}. They're safe now.`);\n      }\n      logger.log(Existence.longLine);\n    }\n\n    tracker.trackEvent(EventId.GameOver, {\n      status: status,\n      year: this.currentYear\n    });\n  }\n}\n","import { Existence } from \"./existence\";\n\nwindow.onload = (): void => {\n  const humanExistence = new Existence(1000000, true);\n  humanExistence.startLife();\n};\n"]}