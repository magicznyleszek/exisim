{"version":3,"sources":["logger.ts","generator.ts","human.ts","humans.ts","index.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,SAAA,aAAA,YAAA;AAEE,aAAA,MAAA,CAA2B,UAA3B,EAA8C;ACFhD,ADE6B,ICF7B,SDE6B,GCF7B,ODE6B,GAAA,GCF7B,ODE6B,KCF7B;AAAA,ADEoD,aCFpD,SAAA,GAAA,CAcC;AAbQ,ADGA,WAAA,GCHA,MDGA,CAAA,ECHA,CAAA,ADGA,GAAP,UAAW,ECHJ,GAAP,EDGA,EAA0B,MCHH,GAAvB,EAAoC,GAApC,EAA+C;AAC7C,AGFJ,AJKI,YCHM,KDGG,IAAT,CAAc,KCHO,IAAI,EDGzB,CAA0B,QCHL,CAAgB,ADGF,CCHd,CAArB,YDG0B,CAA2B,UAAO,IAAlC,CAA1B;ACFA,ACHJ,AFOI,YACE,GCLK,EDKA,ICLP,CAAc,KDKZ,UCLF,CAA8B,YAA9B;AACA,AGHJ,AJQM,YCLI,eAAe,aAAa,CAAb,KAAmB,aAAa,CAAhC,CAArB;AAEA,ACJJ,ACFA,AHUM,IERN,QDIU,ACJV,GFQa,OCJO,GCJpB,CFQM,CCJmB,EDIE,ECJP,CAAU,GAAV,CAAhB,ADI8B,CERlC,UFQM,IACE,SAAS,IAAT,CAAc,YAAd,GAA6B,OAAO,YAJxC,EAKE;ACLF,ACWF,AEhBF,AJWM,YCNI,CCWR,KAAA,CAAmB,IDXA,GCWnB,EDXwB,ACWY,KDXjB,CAAW,CCW9B,EDXmB,ACWgC,CDXjD;AACA,ACAK,ACPT,AHaM,aENG,EDAE,CCAF,GAAc,CDAP,ACAP,CFMM,ICNJ,ADML,CCNgB,ADMF,cAAd,CAA6B,CCNG,IDMhC,OCN2C,OAAX,GAAqB,CAArC,CAAX,IAAsD,OAA7D;AACD,ACUC,AEJJ,AJAK,IIAL,CHdS,OCkBD,SEJR,QFIyB,KEJzB,CFI+B,SAA3B,EEJJ;AHJS,ACSL,ACjBJ,ACgCE,AJnBC,IGbH,CHCS,OEgBD,CCjBR,ACgCE,CHxBO,SAAA,CAAA,EERT,CCgCE,GAAA,CFfyB,KAAnB,ECjBR,EFQS,ACS2B,GDTlC,YAAA,ICSqD,KAAnD,EAA0D;ADR1D,ACSE,ACfJ,AC0BQ,AJ/BgB,WAAA,EGKxB,AC0BQ,EHpBC,IENT,CFMc,AENK,GHLK,GAAuB,CI+BvC,EFXa,AFpBG,CI+BS,CAAzB,IHpBC,ACSkB,CDTG,CAArB,AENT,EFMiC,AENW,GFMnC,CAAP,aCSmB,CAA4B,OAA5B,EAAqC,OAArC,CAAjB;ADRH,ACSE,AClBK,AC6BA,AJhBV,KCNS,MDMT,EGbU,AC6BA,IJhBV,MGbU,CC6BA,ED7BsB,CC6BA,CD7BtB,AC6BA;AHnBV,ACUI,ACjBA,AC6BA,AJpCJ,CAAA,EAAA,QCcA,ECUS,ACjBA,AC6BA,KFZL,CEYA,CHtBJ,CCUiB,CEYC,IFZI,YCjBlB,CDiBa,ACjBkB,CDiBC,CEYP,aFZZ,CAAb,CCjBA,AC6BwC,iBAA1B,CAAd;AHpCJ,ACyBI,ACjBD,AC6BC,AJlBG,CCnBP,EAAA,CDmBa,SEMJ,QAAL,EEYO,CFZS,EEYhB,CAAW,EFZU,CFNH,IAAI,MAAJ,CAAW,IEMb,AFNE,CAAf,CEMH,OEYoC,KAAK,MAAL,CAAY,aAAZ,EAAzB,GAAoD,UAA/D;AHrBG,ACUJ,AChBM,AC6BL,IHvBS,OENJ,EC6BA,OD7BA,CAAA,CC6BL,YD7BK,EFMgB,CENvB,GFM2B,SAAJ,AENvB,EFMK;ACYE,ACjBL,AC6BD,UFZM,KCjBE,IDiBF,CAAA,ACjBO,ODiBP,GAAP,ACjBS,CAAgB,MAAvB,KDiBF;AACE,ACjBD,AC8BO,KDhCD,QDmBA,GAAL,GEaM,SAAA,CAAA,SAAA,GAAR,YAAA;AFZC,AChBM,AC6BL,KFfK,MCdA,EC6BA,OD7BA,CAAA,MC6BL,GAAsB,GD7BjB,GAAP,CC6B+B,WD7B/B,AC6BwB,CACpB,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,CADoB,EAEpB,eAAe,QAFK,CAAtB;AFXK,ACjBL,ACgCD,KALO,KFVD,ECjBD,ODiBC,CAAA,ICjBW,CAAhB,CDiBK,GAAP,YAAA;AACE,ACjBA,ACiCM,aDjCc,EDiBb,ECjBa,ECiCd,CFhBM,ECjBQ,CDiBb,ACjBa,EAAA,EDiBD,CEgBb,CAAA,CDjCc,EDiBI,GCjBC,KDiBzB,IEgBM,CDjCN,EAAoB,ACiCtB,KDjCsB,GAAA,ICiCtB,EDjCE,EAAoB,IAApB,EAAmC;ADkBpC,AClBM,ACkCL,KFlBK,QEkBA,GDlCM,KCkCX,GDlCgB,GAAA,EAAA,CAAX;ADoBA,ACnBH,ACkCF,UFfK,EEeC,IDlCA,GDmBD,CAAA,ECnBO,IDmBP,CEegB,CDlCf,CDmBR,CCnBI,EAAoB,ACkCI,MAAL,CAAY,EFfnC,WEeuB,EAArB;AFdA,ACnBI,ACkCJ,YAAM,GFfC,KAAK,GAAL,CEeW,EFfA,GEeK,GFfC,GEeN,CAAY,QAAZ,EAAlB,IFfA;AACD,ACnBI,ACkCH,KFjBK,OEiBC,cAAc,KAAK,MAAL,CAAY,QAAZ,EAApB;AFbK,ACpBJ,ACkCD,UFdK,EEcC,OFdD,CAAA,OAAA,GAAP,GEc6B,KAAK,IFdlC,kBEc6B,EAA3B;AFbA,ACpBA,ACkCA,YAAM,GFdC,ACpBA,KDoBK,GAAL,CCpBP,EDoBkB,MAAM,GEcK,KAAK,GAAL,CAC3B,KAAK,CFfP,KEeE,CAAY,aAAZ,KAA8B,WAA9B,GAA4C,SAA5C,GAAwD,YAD7B,CAA7B;AFbD,ACpBA,ACoCC,KFlBK,AC1BA,QC4CA,OAAL,CACE,SADF,EAEE,kBAFF,EAGE,cAAc,oBAHhB;AFdK,ACpBA,ACuCL,UFnBK,CCpBA,ECuCA,MFnBA,CAAA,ACpBA,CAAA,ECuCL,MFnBK,GAAP,ECpBO,GAAP,ODoBA,KCpBA;ADqBE,ACpBA,ACuCD,KAfO,ODxBF,GDoBG,CAAC,KAAK,ICpBI,CAAjB,CDoBQ,EAAD,IAAkB,CAAC,KAAK,OAAL,EAA1B;AACD,ACpBC,ACwCM,KFtBD,QClBe,IAAA,ECwCd,GDxCc,CAAA,EAAA,GCwCd,CAAA,CDxCc,KAAK,CCwCnB,GAAR,MDxCE,EAAoB,ECyCpB,GDzCoB,GAAA,GCwCtB,EAEE,CD1CA,EAAoB,IAApB,EAAmC,ECwCrC,EAGE,SAHF,EAGmB;AFrBnB,ACtBO,AC6CL,YAAM,ID7CK,QAAK,GAAA,AC6CK,ED7CL,AC6ChB,CD7CK;ADuBC,ACtBJ,AC8CF,UFxBM,MCtBA,GDsBA,CAAA,ECtBM,OAAN,EAAJ,EDsBI,ACtBiB,GDsBzB,UAAsB,cAAtB,EAA4C;AAC1C,ACtBI,AC8CJ,YFxBM,AEwBF,eFxBiB,CAAC,AEwBF,IAApB,EAA0B,WFxBa,MAAM,SAAxB,IAAqC,CAA1D;AACA,ACtBG,AC8CD,YFxBI,WAAW,EEwBF,IAAb,CAAkB,CAAA,aFxBO,IEwBF,SAAL,EFxBH,AEwBoB,CFxBM,CAAC,EAA3B,EAA+B,AEwB5B,CAAwB,CFxB3B,AEwBG,CFxBpB,AEwBE;AFvBF,ACtBC,AC8CA,SAFD,GFtBM,GEwBC,YFxBc,KAAK,KAAL,CAAW,eAAe,QAA1B,CAArB;AACA,ACtBA,AC8CE,YFxBE,GCtBG,UAAP,AC8Ce,GFxBK,CAApB,AEwBE,CAAkB,CFxBG,AEwBH,KAAG,YAAY,IAAf,GAAsB,SAAtB,EAAkC,MAAlC,CAAyC,CAAzC,CAAlB;AFvBA,ACtBH,AC8CE,KDtDI,cD8BI,YAAP;AACD,ACrBI,AC8CL,SF3BA,ECnBK,IDqBE,KCrBF,CAAA,AC8CQ,IAAb,CAAkB,CAAA,SD9Cb,GAAP,KC8CyB,OD9CzB,EC8CoB,EAAiB,MAAjB,CAAwB,CAAxB,CAAlB;AFxBE,ACrBF,AC+CA,YD/CI,ODqBK,CAAP,OCrBiB,CAAnB;ADsBC,ACrBD,AC+CA,YAAM,CD/Cc,IAAA,KAAA,CAAA,EAAA,AC+CD,KD/CC,AC+CI,KD/CC,CC+CN,CAAY,QD/C/B,EAAoB,GC+CD,ED/CC,AC+CpB,GD/CoB,MAApB,EAAoB,IAApB,EAAmC;ADsBpC,ACtBM,ACgDL,KFnCM,OEmCF,IDhDO,QAAK,ACgDA,GDhDA,EAAA,CAAX,GCgDL,EAA2B;AFxBrB,ACvBJ,ACgDA,UFzBI,MCvBA,GDuBA,CAAA,ECvBM,GCgDG,IAAb,CAAqB,CDhDjB,EAAJ,EAAuB,CDuBnB,GAAR,IEyBmC,QFzBnC,AEyBI;AFxBF,ACvBI,ACgDH,SAFD,MFvBO,AEyBA,IAAI,CFzBC,KAAL,CACL,KEwBqB,SAAhB,EAA2B,KFxBtB,eAAV,CAA0B,CAA1B,EAA6B,MAAM,MAAnC,KAA8C,KAAK,KAAL,GAAa,GAA3D,CADK,CAAP;AAGD,ACzBI,ACgDD,KF3BI,oBE2BS,IAAb,CAAqB,aAAU,QAA/B;AFrBU,AC1BX,ACgDA,SAFM,CFpBK,KEsBL,gBFtBK,GAAd,UAAoC,MAApC,EAAmD,MAAnD,EAAgE;AAC9D,AC1BA,ACgDE,eFtBK,AC1BA,CD0BC,OAAO,EEsBA,EDhDf,CD0BQ,CEsBN,CAAqB,CFtBA,OAAO,KAAvB,AEsB0B,IFtBM,CAAvC,GEsBE;AFrBH,AC1BA,ACgDE,KFxBW,AChCP;AD/BP,ACyCO,ACgDL,WDhDK,CCgDC,QDhDD,CAAA,GCgDa,KAAK,KDhDlB,CCgDa,CAAY,CDhDhC,WCgDoB,CDhDpB,CCgDE;AFxFqB,ACyCrB,ACgDA,UFzFqB,EEyFf,CDhDc,IAAA,KAAA,CAAA,EDzCC,ACyCD,ECgDC,CFzF0B,EAA1B,ACyCD,CD3CxB,CAEuD,AEyFzB,GDhDD,GCgDJ,CAAY,MDhDjC,EAAoB,KAAA,ECgDC,CDhDD,CCgDpB,KDhDA,EAAoB,IAApB,EAAmC;ADnCb,ACmCjB,ACiDL,UFpFsB,EEoFhB,IDjDK,GDnCW,GAAoB,EAApB,ACmCN,CD3CpB,AE4FuB,CFpF2B,CCmC9B,EAAA,CAAX,ACiDmB,MAAL,CAAY,aAAZ,EAAnB;AFnFF,ACmCI,ACiDF,kBDjDQ,GCiDK,IDjDX,ACiDF,CAAkB,kBAAM,SAAN,GAAe,eAAf,GAAqB,YAArB,GAAiC,eAAjC,GAAuC,UAAvC,GAAiD,GAAnE;AFnFsB,ACmCrB,ACkDD,UFrFsB,MAAA,GAAiB,GAAjB;AACxB,ACmCC,ACkDC,KDtDK,kBCsDE,GAAP,CAAW,MAAI,KAAK,WAAT,GAAoB,GAApB,GAAwB,aAAa,IAAb,CAAkB,GAAlB,CAAnC;AFpFsB,ACoCjB,ACiDN,KAjCO,KFpDgB,CCoCjB,SAAA,CAAA,ODpCiB,GAA6B,EAA7B,KCoCjB,GAAP,UAAyB,SAAzB,EAA0C;ADnC1C,ACoCE,ACkDM,aDlDD,IAAI,ECkDH,EDlDO,OCkDP,CAAA,CDlDN,EAAwB,KAAK,ACkDvB,CDlDN,EAAgC,ACkDlC,GDlDE,EAAqC,OCkDvC;AFrFwB,ACoCpB,ACkDF,UFtFsB,GEsFjB,GDlDG,QCkDR,IFtFsB,ECoCA,CDpC6B,EAA7B,ECoCK,KAAL,CAAW,KAAK,MAAL,KAAgB,KAAK,UAAL,CAAgB,MAA3C,CAApB;ADiBN,AChBM,ACkDF,WFlCJ,EEkCS,GFlCT,CChBW,ECkDP,CAAY,ODlDV,CAAgB,KCkDlB,CDlDE,CAAuB,WAAvB,EAAoC,CAApC;ADnDN,ACoDK,ACkDF,CFtGH,EAAA,EEmGU;AD9CP,ACmDD,KDxDO,GDhDI,QAAA;ACuDJ,ACkDC,WDlDD,QCkDC,CDlDD,CAAA,OCkDC,CDlDD,ACkDC,GDlDR,YAAA,OCkDQ,GAAR,YAAA;ADjDE,ACkDA,YDlDI,cAAc,CAAlB;AACA,ACkDA,YAAI,CDlDC,IAAI,IAAI,KAAK,CCkDC,SDlDN,CAAgB,ECkDzB,CAA4B,GDlDnB,GAAyB,ACkDlC,CDlDJ,EAAyC,CCkDC,IDlDI,CAA9C,EAAiD,GAAjD,EAAsD,SCkDF,gBAAV,EAA1C,EAAwE;ADjDtE,ACkDA,gBDlDI,ACkDE,KDlDG,SCkDW,CDlDhB,CAAgB,CAAhB,EAAmB,ACkDE,MDlDrB,EAAJ,EAAiC,UCkDb,EAApB;ADjDE,ACkDF,iBAAK,GDlDG,GCkDR,CAAY,ODlDO,KAAK,KCkDxB,CACE,IDnDiB,CAAgB,ACmD5B,MDnDY,ACmDjB,CDnDwC,ACmD5B,CDnDK,EAA0B,CAA1B,CAAjB,QCmDA,MAA+B,YAAY,cAAZ,GAA6B,IAA5D,CADF;ADjDE,ACoDF,mBAAO,WAAP;ADnDC,ACoDF,SAND,MAMO;ADnDN,ACoDC,mBAAO,IAAP;ADnDF,ACoDC,eDpDM,WAAP;AACD,ACoDA,KD7DM,ACkDC;ADvCD,ACoDC,WDpDD,QCoDC,CDpDD,CAAA,OCoDC,CDpDD,ACoDC,GDpDR,OCoDQ,GAAR,EDpDA,UCoDA;ADnDE,ACoDA,YDpDI,ACoDA,KAAK,MAAL,CDpDY,ACoDA,CDpDhB,YCoDI,OAAgC,CAApC,EAAuC;ADlDvC,ACmDE,YDnDE,KAAK,ECmDA,QDnDL,CAAgB,ICmDlB,CAAqB,CDnDnB,IAA0B,ACmDF,CDnD5B,EAAiC,WCmD/B;ADlDA,ACmDA,mBDnDO,QCmDA,CDnDP,ECmDA,CAAW,kBAAX;ADlDD,ACmDA,SDrDD,ACkDA,MDhDO,ACmDA,IAAI,KAAK,MAAL,CAAY,aAAZ,MAA+B,eAAe,gBAAlD,EAAoE;ADlDzE,ACmDA,iBDnDK,ECmDE,EDnDE,IAAI,KAAK,ECmDlB,CAAqB,KAAK,EDnDb,CAAgB,MAAhB,GAAyB,CAAtC,CCmDA,CDnDyC,KAAK,CAA9C,EAAiD,GAAjD,EAAsD;AACpD,ACmDF,oBDnDQ,OCmDD,CDnDS,ECmDhB,CACE,EDpDmB,UAAL,CAAgB,CAAhB,CAAd,eCqDE,eAAe,gBADjB,GACiC,qBAFnC;ADlDE,ACuDH,oBDvDS,OAAO,KAAK,cAAL,EAAb;AACA,ACuDL,KAZO,eD3CE,KAAK,2BAAL,CAAiC,KAAjC,EAAwC,IAAxC,CAAJ,EAAmD;AACjD,ACwDA,mBAAA,KDxDM,ICwDN,CAAA,EDxDa,iBAAU,CCwDvB,GAAR,CDxDqB,EAAiB,IAAjB,CAAb,ICwDR;ADvDQ,ACwDN,eAAO,UDxDI,KCwDW,KDxDhB,CAAgB,IAAhB,CAAqB,CCwDpB,CACL,EDzDI,mBCyDM,eAAV,CAA0B,CAA1B,EAA6B,eAAe,YAAf,CAA4B,MAA5B,GAAqC,CAAlE,CADK,CAAP;ADvDM,AC0DP,KAJO;ADrDD,ACjEP;ADkEK,ACjEmB,mBAAA,iBAAA,GAA4B,IAA5B;ADkErB,ACjEqB,mBAAA,gBAAA,GAA2B,MAA3B;ADkEtB,ACjEsB,eDiEf,ICjEe,KDiEtB,GCjEsB,GAAmB,MAAM,IAAzB,CAJ1B,CAIyD;ADkEtD,AChEuB,KD+CjB,cC/CiB,YAAA,GAA+B,CACrD,EAAE,MAAM,IAAR,EAAc,gBAAgB,EAA9B,EADqD,EAErD,EAAE,MAAM,IAAR,EAAc,gBAAgB,EAA9B,EAFqD,EAGrD,EAAE,MAAM,IAAR,EAAc,gBAAgB,EAA9B,EAHqD,EAIrD,EAAE,MAAM,IAAR,EAAc,gBAAgB,EAA9B,EAJqD,EAKrD,EAAE,MAAM,IAAR,EAAc,gBAAgB,EAA9B,EALqD,EAMrD,EAAE,MAAM,IAAR,EAAc,gBAAgB,EAA9B,EANqD,EAOrD,EAAE,MAAM,IAAR,EAAc,gBAAgB,CAA9B,EAPqD,CAA/B;ADkEhB,ACoDV,WDpDU,ACoDV,SDpDU,CAAA,ICoDV,uBDpDU,GAAR,UAAoC,MAApC,EAAmD,MAAnD,EAAgE;AAC9D,ACzEJ,CAAA,EAAA,SDyEU,aAAa,aAAM,qBAAN,CAA4B,MAA5B,EAAoC,MAApC,CAAnB;AACA,ACoDJ,OAAO,MAAP,EDnDM,CCmDU,MDnDH,MCmDG,GDnDV,MACA,OAAO,SAAP,EADA,IAEA,cAAc,qBAAU,gBAAV,EAFd,IAGA,aAAM,eAAN,IAAyB,qBAAU,gBAAV,EAJ3B;AAMD,AC+CD,KDvDQ,GCuDF,iBAAiB,IAAI,cAAJ,EAAvB;AD7CQ,AC8CT,CAFD,UD5CU,SAAA,CAAA,yBAAA,GAAR,UAAkC,iBAAlC,EAA2D;AACzD,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,iBAApB,EAAuC,GAAvC,EAA4C;AAC1C,iBAAK,UAAL,CAAgB,IAAhB,CAAqB,kBAArB;AACD;AACF,KAJO;AAMA,WAAA,SAAA,CAAA,cAAA,GAAR,YAAA;AACE,eAAO,KAAK,UAAL,CACL,qBAAU,eAAV,CAA0B,CAA1B,EAA6B,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAtD,CADK,CAAP;AAGD,KAJO;AAKV,WAAA,MAAA;AAzGA,CAAA,EAAA","file":"src.d3852abd.map","sourcesContent":["class Logger {\n  private static readonly safetyOffset: number = 100;\n  public constructor(private autoScroll: boolean) {}\n\n  public log(message: string): void {\n    document.body.appendChild(document.createTextNode(`${message}\\n`));\n\n    if (\n      this.autoScroll &&\n      // enable autoscroll only if scrolled to almost end of page\n      window.innerHeight + window.pageYOffset >=\n        document.body.offsetHeight - Logger.safetyOffset\n    ) {\n      // false means to the bottom of the element\n      document.body.scrollIntoView(false);\n    }\n  }\n}\n\nexport const logger = new Logger(true);\n","class Generator {\n  public getRandomNumber(min: number, max: number): number {\n    const randomBuffer = new Uint32Array(1);\n    window.crypto.getRandomValues(randomBuffer);\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\n\n    const minCeil = Math.ceil(min);\n    const maxFloor = Math.floor(max);\n    return Math.floor(randomNumber * (maxFloor - minCeil + 1)) + minCeil;\n  }\n\n  public getRandomPercent(): number {\n    return this.getRandomNumber(0, 100);\n  }\n}\n\nexport const generator = new Generator();\n","import { generator } from \"./generator\";\n\nexport class Human {\n  // https://menstrual-cycle-calculator.com/chance-pregnant-unprotected-sex/\n  public static readonly pregnancyChance: number = 30; // %\n\n  public vigor: number;\n  public lifespan: number;\n  public age: number = 0;\n\n  private static readonly baseVigor: number = 50; // %\n  // https://en.wikipedia.org/wiki/List_of_the_verified_oldest_people\n  private static readonly maxAge: number = 122;\n  // https://en.wikipedia.org/wiki/Age_and_female_fertility\n  private static readonly reproductionAgeMin: number = 12;\n  // https://en.wikipedia.org/wiki/Pregnancy_over_age_50\n  private static readonly reproductionAgeMax: number = 72;\n\n  public constructor(parent1?: Human, parent2?: Human) {\n    let inheritedVigor = Human.baseVigor;\n    if (parent1 instanceof Human && parent2 instanceof Human) {\n      inheritedVigor = Human.calculateAverageVigor(parent1, parent2);\n    }\n\n    this.vigor = this.generateVigor(inheritedVigor);\n    this.lifespan = this.generateLifespan();\n  }\n\n  public bumpAge(): void {\n    this.age++;\n  }\n\n  public isDead(): boolean {\n    return this.age >= this.lifespan;\n  }\n\n  public isBaby(): boolean {\n    return this.age < Human.reproductionAgeMin;\n  }\n\n  public isElder(): boolean {\n    return this.age > Human.reproductionAgeMax;\n  }\n\n  public isFertile(): boolean {\n    return !this.isBaby() && !this.isElder();\n  }\n\n  // returns non-negative number\n  private generateVigor(inheritedVigor: number): number {\n    const geneticVigor = (inheritedVigor + Human.baseVigor) / 2;\n    const mutation = generator.getRandomNumber(-10, 10);\n    const mutatedVigor = Math.round(geneticVigor + mutation);\n    if (mutatedVigor >= 0) {\n      return mutatedVigor;\n    } else {\n      return 0;\n    }\n  }\n\n  private generateLifespan(): number {\n    return Math.floor(\n      generator.getRandomNumber(0, Human.maxAge) * (this.vigor / 100)\n    );\n  }\n\n  public static calculateAverageVigor(human1: Human, human2: Human): number {\n    return (human1.vigor + human2.vigor) / 2;\n  }\n}\n","import { Human } from \"./human\";\nimport { generator } from \"./generator\";\n\nexport class Humans {\n  private population: Human[] = [];\n\n  public constructor(initialPopulation: number) {\n    this.generateInitialPopulation(initialPopulation);\n  }\n\n  public getTotalCount(): number {\n    return this.population.length;\n  }\n\n  public getBabyCount(): number {\n    let babyCount = 0;\n    for (const human of this.population) {\n      if (human.isBaby()) {\n        babyCount++;\n      }\n    }\n    return babyCount;\n  }\n\n  public getElderCount(): number {\n    let elderCount = 0;\n    for (const human of this.population) {\n      if (human.isElder()) {\n        elderCount++;\n      }\n    }\n    return elderCount;\n  }\n\n  public getFertileCount(): number {\n    let fertileCount = 0;\n    for (const human of this.population) {\n      if (human.isFertile()) {\n        fertileCount++;\n      }\n    }\n    return fertileCount;\n  }\n\n  public growByOneYear(): void {\n    for (const human of this.population) {\n      human.bumpAge();\n    }\n  }\n\n  public killNRandomHumans(killCount: number): void {\n    for (let i = killCount; i >= 0; i--) {\n      const randomIndex = Math.floor(Math.random() * this.population.length);\n      this.population.splice(randomIndex, 1);\n    }\n  }\n\n  public buryDead(): number {\n    let buriedCount = 0;\n    for (let i = this.population.length - 1; i >= 0; i--) {\n      if (this.population[i].isDead()) {\n        const deadBody = this.population.splice(i, 1);\n        buriedCount++;\n      }\n    }\n    return buriedCount;\n  }\n\n  public makeLove(): number {\n    let bornCount = 0;\n\n    if (this.population.length <= 1) {\n      return bornCount;\n    } else {\n      for (let i = this.population.length - 1; i >= 0; i--) {\n        const human = this.population[i];\n        const mate = this.getRandomHuman();\n        if (this.isLovePossibleAndSuccessful(human, mate)) {\n          const baby = new Human(human, mate);\n          this.population.push(baby);\n          bornCount++;\n        }\n      }\n    }\n    return bornCount;\n  }\n\n  private isLovePossibleAndSuccessful(human1: Human, human2: Human): boolean {\n    const loveChance = Human.calculateAverageVigor(human1, human2);\n    return (\n      human1.isFertile() &&\n      human2.isFertile() &&\n      loveChance >= generator.getRandomPercent() &&\n      Human.pregnancyChance >= generator.getRandomPercent()\n    );\n  }\n\n  private generateInitialPopulation(initialPopulation: number): void {\n    for (let i = 0; i < initialPopulation; i++) {\n      this.population.push(new Human());\n    }\n  }\n\n  private getRandomHuman(): Human {\n    return this.population[\n      generator.getRandomNumber(0, this.population.length - 1)\n    ];\n  }\n}\n","import { logger } from \"./logger\";\nimport { Humans } from \"./humans\";\nimport { generator } from \"./generator\";\n\ndeclare global {\n  interface String {\n    padEnd(maxLength: number, fillString?: string): string;\n  }\n}\n\ninterface ICatastrophe {\n  type: string;\n  killPercentage: number;\n}\n\nclass HumanExistence {\n  // https://en.wikipedia.org/wiki/Minimum_viable_population\n  private static readonly initialPopulation: number = 4129;\n  private static readonly targetPopulation: number = 100000;\n  private static readonly yearTime: number = 0.2 * 1000; // seconds\n\n  private static readonly catastrophes: ICatastrophe[] = [\n    { type: \"🤢\", killPercentage: 40 },\n    { type: \"☄️\", killPercentage: 35 },\n    { type: \"🌋\", killPercentage: 30 },\n    { type: \"🌊\", killPercentage: 25 },\n    { type: \"❄️\", killPercentage: 20 },\n    { type: \"🏜\", killPercentage: 10 },\n    { type: \"🌪\", killPercentage: 5 }\n  ];\n\n  private humans: Humans;\n  private lifeIntervalId: number = 0;\n  private currentYear: number = 0;\n\n  public constructor() {\n    this.humans = new Humans(HumanExistence.initialPopulation);\n    logger.log(`Unknown force created ${this.humans.getTotalCount()} humans.`);\n\n    this.startLife();\n  }\n\n  private startLife(): void {\n    this.lifeIntervalId = window.setInterval(\n      this.simulateOneYear.bind(this),\n      HumanExistence.yearTime\n    );\n  }\n\n  private simulateOneYear(): void {\n    this.bumpYear();\n    const initialCount = this.humans.getTotalCount();\n    const bornCount = this.humans.makeLove();\n    const buriedCount = this.humans.buryDead();\n    const appliedCatastrophe = this.applyRandomCatastrophe();\n    const catastropheDeadCount = Math.abs(\n      this.humans.getTotalCount() + buriedCount - bornCount - initialCount\n    );\n    this.logYear(\n      bornCount,\n      appliedCatastrophe,\n      buriedCount + catastropheDeadCount\n    );\n    this.checkGoals();\n  }\n\n  private logYear(\n    bornCount: number,\n    catastrophe: ICatastrophe | null,\n    deadCount: number\n  ): void {\n    const messageParts = [];\n\n    // births and deaths\n    if (catastrophe === null) {\n      messageParts.push(`⚰️${deadCount}`.padEnd(6));\n    } else {\n      messageParts.push(`${catastrophe.type}${deadCount}`.padEnd(6));\n    }\n\n    messageParts.push(`🤱${bornCount}`.padEnd(6));\n\n    // current population\n    const totalCount = this.humans.getTotalCount();\n    if (deadCount > bornCount) {\n      messageParts.push(`${totalCount}↓`);\n    } else if (bornCount > deadCount) {\n      messageParts.push(`${totalCount}↑`);\n    } else {\n      messageParts.push(`${totalCount}–`);\n    }\n\n    const babyCount = this.humans.getBabyCount();\n    const fertileCount = this.humans.getFertileCount();\n    const elderCount = this.humans.getElderCount();\n    messageParts.push(`{👶${babyCount} 👩${fertileCount} 👵${elderCount}}`);\n\n    // final message\n    logger.log(`y${this.currentYear} ${messageParts.join(\" \")}`);\n  }\n\n  private bumpYear(): void {\n    this.currentYear++;\n    this.humans.growByOneYear();\n  }\n\n  // kills 20-80% of population (if happens)\n  private applyRandomCatastrophe(): ICatastrophe | null {\n    // every catastrophe has 1% chance of happening\n    if (HumanExistence.catastrophes.length >= generator.getRandomPercent()) {\n      const catastrophe = this.getRandomCatastrophe();\n      this.humans.killNRandomHumans(\n        this.humans.getTotalCount() * (catastrophe.killPercentage * 0.01)\n      );\n      return catastrophe;\n    } else {\n      return null;\n    }\n  }\n\n  private checkGoals(): void {\n    if (this.humans.getTotalCount() === 0) {\n      window.clearInterval(this.lifeIntervalId);\n      logger.log(\"All humans died.\");\n    } else if (this.humans.getTotalCount() >= HumanExistence.targetPopulation) {\n      window.clearInterval(this.lifeIntervalId);\n      logger.log(\n        `Human population reached ${\n          HumanExistence.targetPopulation\n        }. They're safe now.`\n      );\n    }\n  }\n\n  private getRandomCatastrophe(): ICatastrophe {\n    return HumanExistence.catastrophes[\n      generator.getRandomNumber(0, HumanExistence.catastrophes.length - 1)\n    ];\n  }\n}\n\nwindow.onload = (): void => {\n  const humanExistence = new HumanExistence();\n};\n"]}