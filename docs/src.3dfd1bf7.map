{"version":3,"sources":["logger.ts","generator.ts","human.ts","index.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,SAAA,aAAA,YAAA;AAAA,aAAA,MAAA,GAAA;ACAA,ADEU,ICFV,SDEU,GCFV,KDEU,GAAwB,KCFlC,IDE2C,QCF3C,KDEkC,CAAuB,KAAvB,CAAxB;ACFV,AEAA,AHwBC,aCxBD,SAAA,GAAA,CAcC;AAbQ,ADGA,WAAA,GCHA,MDGA,CAAA,ECHA,CAAA,ADGA,GAAP,UAAW,ECHJ,EDGP,CCHA,CDGoB,SCHG,GAAvB,EAAoC,GAApC,EAA+C;AAC7C,AEDJ,AHII,YCHM,ADGF,UAAU,IAAd,CCHqB,IAAI,WAAJ,CAAgB,CAAhB,CAArB;AACA,ACHJ,AFMI,YAAI,GCHG,IDGI,ECHX,CAAc,CDGV,KAAgB,QAApB,CCHA,CAA8B,ADGA,YCH9B;AACA,AEFJ,AHKM,YCHI,UDGM,KCHS,ADGJ,SAAL,CAAe,GCHO,CAAb,ADGT,CAAV,ICHsC,aAAa,CAAhC,CAArB;AAEA,ACJJ,AFMK,IENL,QDIU,ACJV,UDIoB,GCJpB,EDIyB,IAAL,CAAU,GAAV,CAAhB,CCJJ;ADKI,ACIF,ACPF,AHMI,IGNJ,QFGU,ADGF,CECN,IFDW,CECX,CAAmB,ECPrB,EFGqB,EDGb,EAAJ,CCHsB,CDGD,ICHJ,ACInB,CDJ8B,AEHhC,CDO6D,EDJxC,CAAjB,QEHJ;AFII,ACGiB,ACGnB,AHHI,YEAe,CCGnB,EFNS,EDGA,GCHK,KAAL,ADGL,CCHgB,ADGF,CGGlB,GAAA,CDHmB,IFAf,CEAe,CAAA,EAAA,AFAY,GCHK,IDGA,OCHW,ADG3C,OCHgC,GAAqB,CAArC,CAAX,IAAsD,OAA7D;AACD,ACEkB,ACDX,AHEL,KCXI,QESC,MAAA,GAAkB,EAAlB,KDCoC,MAAM,SAA/B;ADAZ,ACAoD,ACAnD,AHEP,KATM,QGOC,CFAD,SAAA,CAAA,GEAC,GAAyB,CAAzB,SFAD,GAAP,YAAA;AACE,ACPK,ACOC,AHGA,WAAA,EEVD,ACOC,EFAC,CCPF,GAAc,CDOP,ACPP,AFUC,CAAA,GGHA,GAAsB,CAAtB,CHGA,GAAR,GCHS,CAAqB,CAArB,EAAwB,GAAxB,CAAP,CDGF;ACFC,ACDC,ACGA,AHCA,KCLK,ODKD,CEJC,ACGA,KDHL,GAAa,AFIA,KEJK,SFId,CAAwB,EGD5B,CDHa,CAAmB,GFIG,QAA/B,CAAJ,EEJa,AFIiC,CEJ9C;ADEJ,ACDI,ACGA,AHCE,WCHN,ECDS,ACGA,MHCI,CCHb,CCDI,CCGA,CHCE,CEJc,KAAK,gBAAL,EAAhB;ADbJ,ACcG,ACGA,AHCE,CClBL,EAAA,MDgBI,MAEO;ACFJ,ACAE,ACGC,AHAJ,ICHO,MCAJ,OFGE,EEHF,ACGC,CDHD,KFGH,CAAc,CEHX,CCGC,AHAJ,CGAI,CDHR,CFGuB,KCHA,EDGO,ECHH,ECA3B,IFGI,GCHmB,EAAlB,GEGG,GAAR,YAAA;ADFE,ACGA,AHAE,aEHG,ACGA,GDHL,CCGS,IAAI,AHAF,CGAX,EAAgB,CHAd,CAAc,EGAI,SHAlB,CAA0B,KGAO,AHAF,QAA/B,SGAF,EAAsD,GAAtD,EAA2D;ADF5D,ACGG,AHAA,KELG,YCKE,EHAE,IGAP,AHAA,CGAY,IAAZ,CAAiB,kBAAjB;ADDG,ACEJ,AHAA,UEFI,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,ACEA,AHAD,KARO,UEMC,KAAK,GAAL,ACEA,GAAP,CDFmB,ACER,KDFa,QAAxB,ICE0B,KAAK,MAAL,CAAY,MAA3B,GAAiC,UAA5C;ADDD,ACEA,AHvBuB,KEmBjB,ACDC,MHlBgB,QAAA,GAAW,QAAX;AEuBjB,ACEC,AHFV,UEAS,CFAT,MAAA,EEAS,ACEC,CDFD,OAAA,CCEC,CAAA,CDFR,QCEQ,GAAR,CDFA,WCEA;ADDE,ACEA,AH3BJ,CAAA,EAAA,UG2BS,EDFE,KAAK,GAAL,IAAY,ACEnB,GAAsB,GDFG,ICEI,WDF7B,ACEsB,CACpB,KAAK,eAAL,CAAqB,IAArB,CAA0B,IAA1B,CADoB,EAEpB,eAAe,QAFK,CAAtB;ADDD,ACKA,AHLI,IAAM,CEFJ,ACEC,yBHAY,IAAI,MAAJ,EAAf;AEEL,ACKQ,mBAAA,SAAA,CAAA,eAAA,GAAR,YAAA;ADJQ,ACKN,UDLM,GCKD,MDLC,CAAA,CCKN,YDLM,GAAR,UAAsB,cAAtB,EAA4C;AAC1C,ACKA,YDLM,ACKA,eDLe,CAAC,ECKE,KAAK,QAAL,EDLe,ACKvC,MDL6C,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","file":"src.3dfd1bf7.map","sourcesContent":["class Logger {\n  private static readonly loggerId = \"logger\";\n  private loggerEl: HTMLElement = document.createElement(\"pre\");\n\n  public log(data: any): void {\n    let message = data;\n    if (typeof data !== \"string\") {\n      message = JSON.stringify(data);\n    }\n\n    if (this.verifyEl()) {\n      this.loggerEl.innerText += `\\n${message}`;\n    }\n  }\n\n  private verifyEl(): boolean {\n    if (document.getElementById(Logger.loggerId)) {\n      return true;\n    } else {\n      this.loggerEl.id = Logger.loggerId;\n      document.body.appendChild(this.loggerEl);\n      return true;\n    }\n  }\n}\n\nexport const logger = new Logger();\n","class Generator {\n  public getRandomNumber(min: number, max: number): number {\n    const randomBuffer = new Uint32Array(1);\n    window.crypto.getRandomValues(randomBuffer);\n    const randomNumber = randomBuffer[0] / (0xffffffff + 1);\n\n    const minCeil = Math.ceil(min);\n    const maxFloor = Math.floor(max);\n    return Math.floor(randomNumber * (maxFloor - minCeil + 1)) + minCeil;\n  }\n\n  public getRandomPercent(): number {\n    return this.getRandomNumber(0, 100);\n  }\n}\n\nexport const generator = new Generator();\n","import { generator } from \"./generator\";\n\nexport class Human {\n  public vigor: number;\n  public lifespan: number;\n  public age: number = 0;\n\n  private static readonly baseVigor: number = 50; // %\n  private static readonly maxAge: number = 120;\n  private static readonly reproductionAge: number = 15;\n\n  public constructor(inheritedVigor: number = Human.baseVigor) {\n    this.vigor = this.generateVigor(inheritedVigor);\n    this.lifespan = this.generateLifespan();\n  }\n\n  public bumpAge(): void {\n    this.age++;\n  }\n\n  public isDead(): boolean {\n    return this.age >= this.lifespan;\n  }\n\n  public isAdult(): boolean {\n    return this.age >= Human.reproductionAge;\n  }\n\n  // returns non-negative number\n  private generateVigor(inheritedVigor: number): number {\n    const geneticVigor = (inheritedVigor + Human.baseVigor) / 2;\n    const mutation = generator.getRandomNumber(-10, 10);\n    const mutatedVigor = Math.round(geneticVigor + mutation);\n    if (mutatedVigor >= 0) {\n      return mutatedVigor;\n    } else {\n      return 0;\n    }\n  }\n\n  private generateLifespan(): number {\n    return Math.floor(\n      generator.getRandomNumber(0, Human.maxAge) * (this.vigor / 100)\n    );\n  }\n}\n","import { logger } from \"./logger\";\nimport { Human } from \"./human\";\nimport { generator } from \"./generator\";\n\nclass HumanExistence {\n  private static readonly initialPopulation: number = 100;\n  private static readonly targetPopulation: number = 10000;\n  private static readonly yearTime: number = 0.1 * 1000; // seconds\n  private static readonly catastropheChance: number = 5;\n\n  private humans: Human[] = [];\n  private lifeIntervalId: number = 0;\n  private currentYear: number = 0;\n\n  public constructor() {\n    this.generateInitialPopulation();\n    this.startLife();\n  }\n\n  private generateInitialPopulation(): void {\n    for (let i = 0; i < HumanExistence.initialPopulation; i++) {\n      this.humans.push(new Human());\n    }\n    logger.log(`God created ${this.humans.length} humans.`);\n  }\n\n  private startLife(): void {\n    this.lifeIntervalId = window.setInterval(\n      this.simulateOneYear.bind(this),\n      HumanExistence.yearTime\n    );\n  }\n\n  private simulateOneYear(): void {\n    this.bumpYear();\n    const oldAgeDeadCount = this.buryDead();\n    const bornCount = this.makeLove();\n    const catastropheDeadCount = this.applyRandomCatastrophicEvent();\n\n    let message =\n      `Year ${this.currentYear}:` +\n      ` ☠️ ${oldAgeDeadCount + catastropheDeadCount},` +\n      ` 👶 ${bornCount},` +\n      ` 🌍 ${this.humans.length}`;\n\n    if (catastropheDeadCount > 0) {\n      message += \" 🌋\";\n    }\n\n    logger.log(message);\n    this.checkGoals();\n  }\n\n  private bumpYear(): void {\n    this.currentYear++;\n    for (const human of this.humans) {\n      human.bumpAge();\n    }\n  }\n\n  private makeLove(): number {\n    let bornCount = 0;\n\n    if (this.humans.length <= 1) {\n      return bornCount;\n    } else {\n      for (let i = this.humans.length - 1; i >= 0; i--) {\n        const human = this.humans[i];\n        const mate = this.getRandomHuman();\n        if (this.isLove(human, mate)) {\n          const child = new Human(this.calculateAverageVigor(human, mate));\n          this.humans.push(child);\n          bornCount++;\n        }\n      }\n    }\n    return bornCount;\n  }\n\n  private calculateAverageVigor(human1: Human, human2: Human): number {\n    return (human1.vigor + human2.vigor) / 2;\n  }\n\n  private isLove(human1: Human, human2: Human): boolean {\n    const loveChance = this.calculateAverageVigor(human1, human2);\n    return (\n      human1.isAdult() &&\n      human2.isAdult() &&\n      loveChance >= generator.getRandomPercent()\n    );\n  }\n\n  private buryDead(): number {\n    let diedCount = 0;\n    for (let i = this.humans.length - 1; i >= 0; i--) {\n      if (this.humans[i].isDead()) {\n        const deadBody = this.humans.splice(i, 1);\n        diedCount++;\n      }\n    }\n    return diedCount;\n  }\n\n  // always takes random half of population (if happens)\n  private applyRandomCatastrophicEvent(): number {\n    if (HumanExistence.catastropheChance >= generator.getRandomPercent()) {\n      const originalCount = this.humans.length;\n      const halfMark = Math.floor(this.humans.length * 0.5);\n      for (let i = halfMark; i >= 0; i--) {\n        this.humans.splice(Math.floor(Math.random() * this.humans.length), 1);\n      }\n      return originalCount - this.humans.length;\n    } else {\n      return 0;\n    }\n  }\n\n  private checkGoals(): void {\n    if (this.humans.length === 0) {\n      window.clearInterval(this.lifeIntervalId);\n      logger.log(\"All humans died.\");\n    } else if (this.humans.length >= HumanExistence.targetPopulation) {\n      window.clearInterval(this.lifeIntervalId);\n      logger.log(\n        `Human population reached ${\n          HumanExistence.targetPopulation\n        }. They're safe now.`\n      );\n    }\n  }\n\n  private getRandomHuman(): Human {\n    return this.humans[generator.getRandomNumber(0, this.humans.length - 1)];\n  }\n}\n\nconst humanExistence = new HumanExistence();\n"]}